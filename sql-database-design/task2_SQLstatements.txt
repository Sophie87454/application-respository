---create school_survey database
USE master;
GO
CREATE DATABASE school_survey;

---allow for snapshot isolation concurrency method
ALTER DATABASE school_survey  SET ALLOW_SNAPSHOT_ISOLATION ON;
ALTER DATABASE school_survey SET READ_COMMITTED_SNAPSHOT ON;
	
---create school_survey schema
USE school_survey;
GO
CREATE SCHEMA vietnam;

-- drop table if exists and not empty
IF OBJECT_ID('school_survey.dbo.vietnam_both_waves') IS NOT NULL DROP TABLE school_survey.dbo.vietnam_both_waves;

--Join wave 1 and wave 2 tables 
BEGIN
BEGIN TRY
SELECT a.UNIQUEID, a.SCHOOLID, a.STUDENTID, a.CLASSID, a.PROVINCE, a.DISTRICTCODE, a.LOCALITY, a.GENDER, a.AGE, a.ETHNICITY, a.ABSENT_DAYS,
a.STDDINT AS 'STDINT1', a.STDLIV, a.STDMEAL, a.STDHLTH1,a.STDHLTH2,a.STDHLTH3, a.STDHLTH4, a.STDHLTH5, a.STDHLTH6, a.STDHLTH0, a.MOM_READ,
a.MOM_EDUC, a.DAD_READ, a.DAD_EDUC, a.STPPLHM, a.STSIBOLD, a.STSIBYNG, a.STNMBOOK, a.STREADLR, a.STPLHL01, a.STPLHL02, a. STPLHL03,a.STDLNGHM, 
a.STPLHLRD,a.STPLHL04, a.STPLHL05, a.STPLHL06, a.STPLHL07, a.STPLSTDY, a.STHVMTEL, a.STHVRADO, a.STHVTELE, a.STHVBIKE, a.STHVMTBK, a.STHVDESK,
a.STHVCHR, a.STHVLAMP, a.STHVEFAN, a.STHVAIRC, a.STHVCAR, a.STHVCOMP, a.STHVINTR, a.STHVFRDG, a.STHVDVD, a.STHVMCRO, a.STHVCBLE, a.STEATLNC,
a.STPAYLNC, a.STRPTCL1, a.STRPTCL6, a.STRPTCL10, a.STTLTSCH, a.STITMOW1, a.STITMOW2, a.STITMOW3, a.STITMOW4, a.STITMOW5, a.STITMOW6,
a.STITMOW7, a.STITMOW8, a.STTMSCH, a.STGR1001, STGR1002, a.STGR1003, a.STGR1004, a.STGR1005, a.STGR1006, a.STGR1007, a.STGR1008, a.STGR1009,
a.STGR1011, a.STAGEENG,a.STHGHGRD, a.ENG_TEST, a.ENG_RAWSCORE, a.MATH_TEST, a.MATH_RAWSCORE, a.STBRWBK, a.STREADFN, a.STREADCH,
a.STSPEN01, a.STSPEN02, a.STSPEN03, a.STSPEN04, a.STSPEN05, a.STATEN01, a.STATEN02, a.STATEN03, a.STATEN04, a.STNONSCL, a.GRLENRL, a.BOYENRL,
a.TTLENRL, a.TGRLENRL, a.TBOYENRL, a.TTTLENRL, a.ATDTMSY, a.ATDDFSY, a.TGMTHENG, a.SCALLCT, a.GRPABLTY, a.CLSORD1, a.CLSORD2, a.SCAVLB1,
a.SCAVLB2, a.SCAVLB3, a.SCAVLB4, a.SCAVLB5, a.SCAVLB6, a.SCAVLB7, a.SCAVLB8, a.SCAVLB9, a.SCAVLB10, a.SCPRDDAY, a.SCLNONPR, a.SCMNMTIN,
a.SCMNENIN, a.SCTXTENG, a.SCTXTMTH, a.HTDINT, a.HTAGE, a.HTSEX, a.HTETHGRP, a.HTRELGN, a.HTMTHTNG, a.HTFRMPRV, a.HTCURRLE, a.HTYRSHT,
a.HTLVLEDC, a.HTLVLTCH, a.HTEXCTCH, a.NUMG10CLS, a.HTTYPSCH, a.HTLWSGRD, a.HTHGHGRD, a.HTNMSTEN, a.HTNMETST, a.HTYREST, a.HTP135CM,
a.HTPRDIST, a.HTBOARD, a.HTSCHAVL, a.HTMRNSTR, a.HTMRNEND, a.HTAFTSTR, a.HTAFTEND, a.HTREGTCH, a.HTNONCMP, a.HTEXTCUR, a.HTNOCMCH, a.HTNOCMCL,
a.HTRQNMST, a.HTCENMST, a.HTPTNMST, a.HTRQMATH, a.HTRQENG, a.HTGNADMN, a.HTACRARE, a.HTACRAETH, a.HTACRAGND, a.HTACRAPAY, a.HTACRAEXM,
a.HTACRAOTH, a.HTAMPAID1, a.HTEXM011, a.HTEXM021, a.HTEXM031, a.HTEXM041, a.HTEXM051, a.HTEXM061, HTEXM001, a.HTAMPAID2, a.HTEXM012,
a.HTEXM022, a.HTEXM032, a.HTEXM042, a.HTEXM052, a.HTEXM062, a.HTEXM002, a.HTAMPAID3, a.HTEXM013, a.HTEXM023, a.HTEXM033, a.HTEXM043,
a.HTEXM053, a.HTEXM063, a.HTEXM003, a.HTAMPAID4, a.HTEXM014, a.HTEXM024, a.HTEXM034, a.HTEXM044, a.HTEXM054, a.HTEXM064, HTEXM004, a.HTAMPAID5,
a.HTEXM015, a.HTEXM025, a.HTEXM035, a.HTEXM045, a.HTEXM055, a.HTEXM065, a.HTEXM005, a.HTAMPAID6, a.HTEXM016, a.HTEXM026, a.HTEXM036, a.HTEXM046,
a.HTEXM056, a.HTEXM066, a.HTEXM006, a.HTAMPAID7, a.HTEXM017, a.HTEXM027, a.HTEXM037, a.HTEXM047, a.HTEXM057, a.HTEXM067, a.HTEXM007, a. HTACRAALL,
a.HTEXM018, a.HTAMPAID8, a.HTEXM028, a.HTEXM038, a.HTEXM048, a.HTEXM058, a.HTEXM068, a.HTEXM008, HTAMPAID9, a.HTEXM019, a.HTEXM029,
a.HTEXM039, a.HTEXM049, a.HTEXM059, a.HTEXM069, a.HTEXM009, a.HTAMPAID10, a.HTEXM0110, a.HTEXM0210, a.HTEXM0310, a.HTEXM0410, a.HTEXM0510,
a.HTEXM0610, a.HTEXM0010, a.HTAMPAID11, a.HTEXM0111, a.HTEXM0211, a.HTEXM0311, a.HTEXM0411, a.HTEXM0511,a.HTEXM0611, a.HTEXM0011, 
a.HTAMPAID12, a.HTEXM0112, a.HTEXM0212, a.HTEXM0312, a.HTEXM0412, a.HTEXM0512,a.HTEXM0612, a.HTEXM0012, a.HTENGR10, a.HTENBY10, a.HTTLGR10,
a.HTTLBY10, a.HTENGR11, a.HTENBY11, a.HTTLGR11, a.HTTLBY11, a.HTENGR12, a.HTENBY12, a.HTTLBY12, a.HTTLGR12, a.HTNMCL10, a.HTNMCL11,
a.HTNMCL12, a.HTALLC10, a.HTPRTEXP, a.HTENTOT10, b.STDINT AS 'STDINT2', b.STLTESCH, b.STMSSDAY, b.STMSSCLS, b.STRSNMS1, b.STRSNMS2, b.STRSNMS3, b.STRSNMS4, b.STRSNMS5, b.STRSNMS6,
b.STRSNMS7, b.STRSNMS8, b.STRSNMS9, b.STRSNMS0, b.STDSTLENR, b.STDNMABS, b.ENG_TEST AS 'ENG_TEST2', b.ENG_RAWSCORE AS 'ENG_RAWSCORE2', b.REGTCH,
b.MATH_TEST AS 'MATH_TEST2', b.MATH_RAWSCORE AS 'MATH_RAWSCORE2', b.STMTHWRK, b.STMWRKCH, b.STMWRKCM, b.STETHWRK, b.STEWRKCH, b.STEWRKCM,
b.STTMMWRK, b.STTMEWRK, b.STCMPHME, b.STCMPSCH, b.STCMPOTH, b.STADDMT, b.STADDOT, b.STADDEN, b.STEXSCMT, b.STEXSCOT, b.STEXSCEN, b.B1LVLSUPP,
b.B1MTVSUC, b.B2ACABMT, b.B2PRCLMT, b.B3ACABEN, b.B3PRCLEN, b.STPRVMT, b.STPRVEN, STPRVOT, b.STEXOTMT, b.STEXOTEN, b.STEXOTOT, b.ATDGIRL, 
b.ATDBOY, b.ATDTTL, b.NEWCHLD, b.STDNOENR, b.HTDINT AS 'HTDINT2', b.SAMEHEAD, b.DATECMPL, b.HTDEVPLN, b.HTPTA, b.HTPTAMT,
b.HTEDOVS, b.HTSTDDRP, b.HTCHDLBR, b.HTFLSINF, b.HTTCHRET, b.HTRCHATT, b.HTENVEVT, b.HTSTDENR, b.HTTOKEXM, b.HTLSPSEXM, b.HTPRCUNI,
b.HTPRCVOC, b.HTCNTLRN, b.ENG_TCHID, b.MATH_TCHID, b.ENG_TCHSUBJ, b.MATH_TCHSUBJ,b.ENG_TCHDTJN, b.MATH_TCHDTJN, b.ENG_TCHDYPRS, b.MATH_TCHDYPRS, 
b.ENG_TCSTLEMP, b.MATH_TCSTLEMP, b.ENG_TCDAYPRS, b.MATH_TCDAYPRS, b.ENG_TCHABSC, b.MATH_TCHABSC, b.ENG_TCHDINT, b.MATH_TCHDINT,
b.ENG_TCAGE, b.MATH_TCAGE, b.ENG_TCGNDR, b.MATH_TCGNDR, b.ENG_TCETHNC, b.MATH_TCETHNC, b.ENG_TCRELGN, b.MATH_TCRELGN, b.ENG_TCLNGHME, b.MATH_TCLNGHME, 
b.ENG_TCPRVTCH, b.MATH_TCPRVTCH, b.ENG_TCMBLE, b.MATH_TCMBLE, b.ENG_TCRADIO, b.MATH_TCRADIO, b.ENG_TCTELE, b.MATH_TCTELE, b.ENG_TCBIKE, b.MATH_TCBIKE, 
b.ENG_TCSCTR, b.MATH_TCSCTR, b.ENG_TCTBLE, b.MATH_TCTBLE, b.ENG_TCCHAIR, b.MATH_TCCHAIR, b.ENG_TCLAMP, b.MATH_TCLAMP, b.ENG_TCELEC, b.MATH_TCELEC,
b.ENG_TCAIRCND, b.MATH_TCAIRCND, b.ENG_TCCAR, b.MATH_TCCAR, b.ENG_TCCOMP, b.MATH_TCCOMP, b.ENG_TCINTRT, b.MATH_TCINTRT, b.ENG_TCFRDG, b.MATH_TCFRDG,
b.ENG_TCMICRO, b.MATH_TCMICRO, b.ENG_TCDVD, b.MATH_TCDVD, b.ENG_TCTVBOX, b.MATH_TCTVBOX, b.ENG_TCLVLEDC, b.MATH_TCLVLEDC, b.ENG_TCTCHQLF, b.MATH_TCTCHQLF, 
b.ENG_TCSPCMAT, b.MATH_TCSPCMAT, b.ENG_TCSPCENG, b.MATH_TCSPCENG, b.ENG_TCSPCVNM, b.MATH_TCSPCVNM, b.ENG_TCSPCLNG, b.MATH_TCSPCLNG,
b.ENG_TCSPCPSC, b.MATH_TCSPCPSC, b.ENG_TCSPCCHE, b.MATH_TCSPCCHE, b.ENG_TCSPCBIO, b.MATH_TCSPCBIO, b.ENG_TCSPCHIS, b.MATH_TCSPCHIS, b.ENG_TCSPCGEO, b.MATH_TCSPCGEO,
b.ENG_TCSPCPHY, b.MATH_TCSPCPHY, b.ENG_TCSPCANT, b.MATH_TCSPCANT, b.ENG_TCDYSTRN, b.MATH_TCDYSTRN, b.ENG_TCTTRNHLP, b.MATH_TCTTRNHLP, b.ENG_TCAWDTTL, 
b.MATH_TCAWDTTL, b.ENG_TCYRTCH, b.MATH_TCYRTCH, b.ENG_TCYRTCSCH, b.MATH_TCYRTCSCH, b.ENG_TCSTDENG, b.MATH_TCSTDENG, b.ENG_TCTCHENG, b.MATH_TCTCHENG, b.ENG_TCEMPBAS, 
b.MATH_TCEMPBAS, b.ENG_TCFGRDE10, b.MATH_TCFGRDE10, b.ENG_TCFGRDE11, b.MATH_TCFGRDE11, b.ENG_TCFGRDE12, b.MATH_TCFGRDE12, b.ENG_TCMATHS, b.MATH_TCMATHS, b.ENG_TCENGL, 
b.MATH_TCENGL, b.ENG_TCVNM, b.MATH_TCVNM, b.ENG_TCANTLNG, b.MATH_TCANTLNG, b.ENG_TCPHYSC, b.MATH_TCPHYSC, b.ENG_TCCHEM, b.MATH_TCCHEM, b.ENG_TCBIOLG, b.MATH_TCBIOLG, 
b.ENG_TCHISTRY, b.MATH_TCHISTRY, b.ENG_TCGEOG, b.MATH_TCGEOG, b.ENG_TCPHYS, b.MATH_TCPHYS, b.ENG_TCOTHR, b.MATH_TCOTHR, b.ENG_TCPRDWK, b.MATH_TCPRDWK, 
b.ENG_TCEXTCLS, b.MATH_TCEXTCLS, b.ENG_TCTCHG10, b.MATH_TCTCHG10, b.ENG_TCEXTWRK, b.MATH_TCEXTWRK, b.ENG_TCOBSHT, b.MATH_TCOBSHT, b.ENG_TCOBSVP, b.MATH_TCOBSVP,
b.ENG_TCOBSHSD, b.MATH_TCOBSHSD, b.ENG_TCOBSOTH, b.MATH_TCOBSOTH, b.ENG_TCOBSDOET, b.MATH_TCOBSDOET, b.ENG_TCPRATD, b.MATH_TCPRATD, b.ENG_TCLATENS, b.MATH_TCLATENS, 
b.ENG_TCDISCPL, b.MATH_TCDISCPL, b.ENG_TCNOMAT, b.MATH_TCNOMAT, b.ENG_TCLACKRS, b.MATH_TCLACKRS, b.ENG_TCINTRRP, b.MATH_TCINTRRP, b.ENG_TCRSNABS, b.MATH_TCRSNABS, 
b.ENG_TCASGNSC, b.MATH_TCASGNSC, b.ENG_TCPRTCNT, b.MATH_TCPRTCNT, b.ENG_TCTRVMIN, b.MATH_TCTRVMIN, b.ENG_TCPRDTCH, b.MATH_TCPRDTCH, b.ENG_TCPRDPLN, b.MATH_TCPRDPLN, 
b.ENG_TCPRDCRT, b.MATH_TCPRDCRT, b.ENG_TCPRDADM, b.MATH_TCPRDADM, b.ENG_TCHREXTR, b.MATH_TCHREXTR, b.ENG_TCHRHELP, b.MATH_TCHRHELP, b.ENG_TCHRTUTR, b.MATH_TCHRTUTR, 
b.ENG_TCHRIDEA, b.MATH_TCHRIDEA, b.ENG_TCHRCOMM, b.MATH_TCHRCOMM, b.ENG_TCIMPCHR, b.MATH_TCIMPCHR, b.ENG_TCCMSCTC, b.MATH_TCCMSCTC, b.ENG_TCCMSCFC, b.MATH_TCCMSCFC, 
b.ENG_TCCMSCPR, b.MATH_TCCMSCPR, b.ENG_TCRSNTCH, b.MATH_TCRSNTCH, b.ENG_TCFRTCHC, b.MATH_TCFRTCHC, b.ENG_TCMOVTCH, b.MATH_TCMOVTCH, b.ENG_TCGLSEC, b.MATH_TCGLSEC, 
b.ENG_TCCHSEC, b.MATH_TCCHSEC 
INTO school_survey.dbo.vietnam_both_waves
FROM school_survey.dbo.vietnam_wave_1 a
LEFT JOIN school_survey.dbo.vietnam_wave_2 b
ON a.UNIQUEID = b.UNIQUEID;
END TRY
BEGIN CATCH
        SELECT  
            ERROR_NUMBER() AS ErrorNumber  
            ,ERROR_SEVERITY() AS ErrorSeverity  
            ,ERROR_STATE() AS ErrorState  
            ,ERROR_PROCEDURE() AS ErrorProcedure  
            ,ERROR_LINE() AS ErrorLine  
            ,ERROR_MESSAGE() AS ErrorMessage;  
    END CATCH
END;


--- make empty cells NULL
--remove temporary table if exists and not empty
IF OBJECT_ID('school_survey.dbo.make_null') IS NOT NULL DROP TABLE school_survey.dbo.make_null;
--create table which contains SQL commands that make column values null
BEGIN
BEGIN TRY
select 'UPDATE ' + object_name(id) + ' SET ' + name + ' = NULL WHERE ' + name + ' = ''''' ASSQLStatement
INTO school_survey.dbo.make_null
from syscolumns where type_name(xtype) in('varchar','char','nvarchar','nchar')
and object_name(id) not like 'sys%' AND object_name(id) like 'vietnam_both_waves'
--loop through commands and execute
ALTER TABLE school_survey.dbo.make_null
ADD ID INT IDENTITY;

DECLARE @LoopCounter INT = 1, @MaxRow INT, 
        @Query NVARCHAR(100)
SET @MaxRow = (SELECT MAX(ID) FROM school_survey.dbo.make_null)
WHILE(@LoopCounter <= @MaxRow)
BEGIN
   SELECT @Query = (SELECT ASSQLStatement
   FROM school_survey.dbo.make_null WHERE ID = @LoopCounter)
 
   EXECUTE sp_executesql @Query 
   SET @LoopCounter  = @LoopCounter  + 1        
END
END TRY
BEGIN CATCH
        SELECT  
            ERROR_NUMBER() AS ErrorNumber  
            ,ERROR_SEVERITY() AS ErrorSeverity  
            ,ERROR_STATE() AS ErrorState  
            ,ERROR_PROCEDURE() AS ErrorProcedure  
            ,ERROR_LINE() AS ErrorLine  
            ,ERROR_MESSAGE() AS ErrorMessage;  
    END CATCH
END;

--create tables and transform data into meaningful values
--create table containing general child info
BEGIN
BEGIN TRY
SELECT
UNIQUEID AS 'student_id',
SCHOOLID AS 'school_id',
CLASSID AS 'class_id',
	CASE
		WHEN PROVINCE=1 THEN REPLACE(PROVINCE,1,'Ben Tre')
		WHEN PROVINCE=2 THEN REPLACE(PROVINCE,2,'Da Nung')
		WHEN PROVINCE=3 THEN REPLACE(PROVINCE,3,'Hung Yen')
		WHEN PROVINCE=4 THEN REPLACE(PROVINCE,4,'Lao Cai')
		WHEN PROVINCE=5 THEN REPLACE(PROVINCE,5,'Phu Yen')
		ELSE NULL
		END AS 'province',
DISTRICTCODE AS 'district_id',
	CASE
		WHEN LOCALITY=1 THEN REPLACE(LOCALITY,1,'Rural')
		WHEN LOCALITY=2 THEN REPLACE(LOCALITY,2,'Urban')
		ELSE NULL
		END AS 'locality',
	CASE
		WHEN GENDER=1 THEN REPLACE(GENDER,1,'Male')
		WHEN GENDER=2 THEN REPLACE(GENDER,2,'Female')
		ELSE NULL
		END AS 'gender',
CAST(AGE AS NUMERIC) AS 'age',
	CASE
		WHEN ETHNICITY=1 THEN REPLACE(ETHNICITY,1,'Kinh')
		WHEN ETHNICITY=2 THEN REPLACE(ETHNICITY,2,'HMong')
		WHEN ETHNICITY=3 THEN REPLACE(ETHNICITY,3,'Cham-HRoi')
		WHEN ETHNICITY=4 THEN REPLACE(ETHNICITY,4,'Ede')
		WHEN ETHNICITY=5 THEN REPLACE(ETHNICITY,5,'Ba Na')
		WHEN ETHNICITY=6 THEN REPLACE(ETHNICITY,6,'Nung')
		WHEN ETHNICITY=7 THEN REPLACE(ETHNICITY,7,'Tay')
		WHEN ETHNICITY=8 THEN REPLACE(ETHNICITY,8,'Dao')
		WHEN ETHNICITY=9 THEN REPLACE(ETHNICITY,9,'Giay')
		WHEN ETHNICITY=10 THEN REPLACE(ETHNICITY,10,'Other')
		ELSE NULL
		END AS 'ethnicity',
CAST(ABSENT_DAYS AS NUMERIC) AS 'days_absent',
	CASE 
		WHEN STDLIV=1 THEN REPLACE(STDLIV,1,'At home with parents')
		WHEN STDLIV=2 THEN REPLACE(STDLIV,2,'With other family/friends')
		WHEN STDLIV=3 THEN REPLACE(STDLIV,3,'School hostel')
		WHEN STDLIV=4 Then REPLACE(STDLIV,4,'Private hostel')
		WHEN STDLIV=5 THEN REPLACE(STDLIV,5,'Other')
		ELSE NULL
		END AS 'term_time_accomodation',
	CASE 
		WHEN STDMEAL=1 THEN REPLACE(STDMEAL,1,'1')
		WHEN STDMEAL=2 THEN REPLACE(STDMEAL,2,'2')
		WHEN STDMEAL=3 THEN REPLACE(STDMEAL,3,'3+')
		END AS 'meals_per_day',
	CASE 
		WHEN STDHLTH1=0 THEN REPLACE(STDHLTH1,0,'No')
		WHEN STDHLTH1=1 THEN REPLACE(STDHLTH1,1,'Yes')
		ELSE NULL
		END AS 'sight_problems',
	CASE 
		WHEN STDHLTH2=0 THEN REPLACE(STDHLTH2,0,'No')
		WHEN STDHLTH2=1 THEN REPLACE(STDHLTH2,1,'Yes')
		ELSE NULL
		END AS 'hearing_problems',
	CASE 
		WHEN STDHLTH3=0 THEN REPLACE(STDHLTH3,0,'No')
		WHEN STDHLTH3=1 THEN REPLACE(STDHLTH3,1,'Yes')
		ELSE NULL
		END AS 'headaches',
	CASE 
		WHEN STDHLTH4=0 THEN REPLACE(STDHLTH4,0,'No')
		WHEN STDHLTH4=1 THEN REPLACE(STDHLTH4,1,'Yes')
		ELSE NULL
		END AS 'fever',
	CASE 
		WHEN STDHLTH5=0 THEN REPLACE(STDHLTH5,0,'No')
		WHEN STDHLTH5=1 THEN REPLACE(STDHLTH5,1,'Yes')
		ELSE NULL
		END AS 'stomach_problems',
	CASE 
		WHEN STDHLTH6=0 THEN REPLACE(STDHLTH6,0,'No')
		WHEN STDHLTH6=1 THEN REPLACE(STDHLTH6,1,'Yes')
		ELSE NULL
		END AS 'other_health_problems',
	CASE 
		WHEN STDHLTH0=0 THEN REPLACE(STDHLTH0,0,'No')
		WHEN STDHLTH0=1 THEN REPLACE(STDHLTH0,1,'Yes')
		ELSE NULL
		END AS 'no_health_problems'
INTO school_survey.vietnam.child_general
FROM school_survey.dbo.vietnam_both_waves
END TRY
BEGIN CATCH
        SELECT  
            ERROR_NUMBER() AS ErrorNumber  
            ,ERROR_SEVERITY() AS ErrorSeverity  
            ,ERROR_STATE() AS ErrorState  
            ,ERROR_PROCEDURE() AS ErrorProcedure  
            ,ERROR_LINE() AS ErrorLine  
            ,ERROR_MESSAGE() AS ErrorMessage;  
    END CATCH
END;


--home life table
BEGIN
BEGIN TRY
SELECT
UNIQUEID AS 'student_id',
	CASE 
		WHEN DAD_READ=1 THEN REPLACE(DAD_READ,1,'Yes')
		WHEN DAD_READ=0 THEN REPLACE(DAD_READ,0,'No')
		ELSE NULL
		END AS 'father_literate',
	CASE 
		WHEN MOM_READ=1 THEN REPLACE(MOM_READ,1,'Yes')
		WHEN MOM_READ=0 THEN REPLACE(MOM_READ,0,'No')
		ELSE NULL
		END AS 'mother_literate',
	CASE 
		WHEN MOM_EDUC=0 THEN REPLACE(MOM_EDUC,0,'Never')
		WHEN MOM_EDUC=1 THEN REPLACE(MOM_EDUC,1,'Primary school')
		WHEN MOM_EDUC=2 THEN REPLACE(MOM_EDUC,2,'Lower secondary school')
		WHEN MOM_EDUC=3 THEN REPLACE(MOM_EDUC,3,'Intermediate vocational training')
		WHEN MOM_EDUC=4 THEN REPLACE(MOM_EDUC,4,'Upper secondary school')
		WHEN MOM_EDUC=5 THEN REPLACE(MOM_EDUC,5,'Higher education')
		WHEN MOM_EDUC=6 THEN REPLACE(MOM_EDUC,6,'Unknown')
		ELSE NULL
		END AS 'mother_education',
	CASE 
		WHEN DAD_EDUC=0 THEN REPLACE(DAD_EDUC,0,'Never')
		WHEN DAD_EDUC=1 THEN REPLACE(DAD_EDUC,1,'Primary school')
		WHEN DAD_EDUC=2 THEN REPLACE(DAD_EDUC,2,'Lower secondary school')
		WHEN DAD_EDUC=3 THEN REPLACE(DAD_EDUC,3,'Intermediate vocational training')
		WHEN DAD_EDUC=4 THEN REPLACE(DAD_EDUC,4,'Upper secondary school')
		WHEN DAD_EDUC=5 THEN REPLACE(DAD_EDUC,5,'Higher education')
		WHEN DAD_EDUC=6 THEN REPLACE(DAD_EDUC,6,'Unknown')
		ELSE NULL
		END AS 'father_education',
CASE 
		WHEN STDLNGHM=0 THEN REPLACE(STDLNGHM,0,'Never')
		WHEN STDLNGHM=1 THEN REPLACE(STDLNGHM,1,'Sometimes')
		WHEN STDLNGHM=2 THEN REPLACE(STDLNGHM,2,'Always')
		ELSE NULL
		END AS 'speak_vietnamese_home',
CAST(STPPLHM AS NUMERIC) AS 'people_living_in_home',
CAST(STSIBOLD AS NUMERIC) AS 'older_biological_siblings',
CAST(STSIBYNG AS NUMERIC) AS 'younger_biological_siblings',
CAST(STNMBOOK AS NUMERIC) 'number_of_books',
	CASE 
		WHEN STPLHLRD=1 THEN REPLACE(STPLHLRD,1,'Never')
		WHEN STPLHLRD=2 THEN REPLACE(STPLHLRD,2,'Sometimes')
		WHEN STPLHLRD=3 THEN REPLACE(STPLHLRD,3,'Always')
		ELSE NULL
		END AS 'schoolwork_help',
	CASE 
		WHEN STPLHL01=1 THEN REPLACE(STPLHL01,1,'Never')
		WHEN STPLHL01=2 THEN REPLACE(STPLHL01,2,'Monthly')
		WHEN STPLHL01=3 THEN REPLACE(STPLHL01,3,'Weekly')
		WHEN STPLHL01=4 THEN REPLACE(STPLHL01,4,'Daily')
		ELSE NULL
		END AS 'discuss_school_performance',
	CASE 
		WHEN STPLHL02=1 THEN REPLACE(STPLHL02,1,'Never')
		WHEN STPLHL02=2 THEN REPLACE(STPLHL02,2,'Monthly')
		WHEN STPLHL02=3 THEN REPLACE(STPLHL02,3,'Weekly')
		WHEN STPLHL02=4 THEN REPLACE(STPLHL02,4,'Daily')
		ELSE NULL
		END AS 'eat_meal_together',
	CASE 
		WHEN STPLHL03=1 THEN REPLACE(STPLHL03,1,'Never')
		WHEN STPLHL03=2 THEN REPLACE(STPLHL03,2,'Monthly')
		WHEN STPLHL03=3 THEN REPLACE(STPLHL03,3,'Weekly')
		WHEN STPLHL03=4 THEN REPLACE(STPLHL03,4,'Daily')
		ELSE NULL
		END AS 'maths_homework_help',
	CASE 
		WHEN STPLHL04=1 THEN REPLACE(STPLHL04,1,'Never')
		WHEN STPLHL04=2 THEN REPLACE(STPLHL04,2,'Monthly')
		WHEN STPLHL04=3 THEN REPLACE(STPLHL04,3,'Weekly')
		WHEN STPLHL04=4 THEN REPLACE(STPLHL04,4,'Daily')
		ELSE NULL
		END AS 'discuss_maths_performance',
	CASE 
		WHEN STPLHL05=1 THEN REPLACE(STPLHL05,1,'Never')
		WHEN STPLHL05=2 THEN REPLACE(STPLHL05,2,'Monthly')
		WHEN STPLHL05=3 THEN REPLACE(STPLHL05,3,'Weekly')
		WHEN STPLHL05=4 THEN REPLACE(STPLHL05,4,'Daily')
		ELSE NULL
		END AS 'discuss_maths_application',
	CASE 
		WHEN STPLHL06=1 THEN REPLACE(STPLHL06,1,'Never')
		WHEN STPLHL06=2 THEN REPLACE(STPLHL06,2,'Monthly')
		WHEN STPLHL06=3 THEN REPLACE(STPLHL06,3,'Weekly')
		WHEN STPLHL06=4 THEN REPLACE(STPLHL06,4,'Daily')
		ELSE NULL
		END AS 'english_homework_help',
	CASE 
		WHEN STPLHL07=1 THEN REPLACE(STPLHL07,1,'Never')
		WHEN STPLHL07=2 THEN REPLACE(STPLHL07,2,'Monthly')
		WHEN STPLHL07=3 THEN REPLACE(STPLHL07,3,'Weekly')
		WHEN STPLHL07=4 THEN REPLACE(STPLHL07,4,'Daily')
		ELSE NULL
		END AS 'discuss_english_performance',
	CASE 
		WHEN STPLSTDY=0 THEN REPLACE(STPLSTDY,0,'No')
		WHEN STPLSTDY=1 THEN REPLACE(STPLSTDY,1,'Yes')
		ELSE NULL
		END AS 'own_study_place',
	CASE 
		WHEN STHVMTEL=0 THEN REPLACE(STHVMTEL,0,'No')
		WHEN STHVMTEL=1 THEN REPLACE(STHVMTEL,1,'Yes')
		ELSE NULL
		END AS 'mobile_telephone',
	CASE 
		WHEN STPLSTDY=0 THEN REPLACE(STPLSTDY,0,'No')
		WHEN STPLSTDY=1 THEN REPLACE(STPLSTDY,1,'Yes')
		ELSE NULL
		END AS 'radio',
	CASE 
		WHEN STHVTELE=0 THEN REPLACE(STHVTELE,0,'No')
		WHEN STHVTELE=1 THEN REPLACE(STHVTELE,1,'Yes')
		ELSE NULL
		END AS 'television',
	CASE 
		WHEN STHVBIKE=0 THEN REPLACE(STHVBIKE,0,'No')
		WHEN STHVBIKE=1 THEN REPLACE(STHVBIKE,1,'Yes')
		ELSE NULL
		END AS 'bicycle',
	CASE 
		WHEN STHVMTBK=0 THEN REPLACE(STHVMTBK,0,'No')
		WHEN STHVMTBK=1 THEN REPLACE(STHVMTBK,1,'Yes')
		ELSE NULL
		END AS 'motorbike_scooter',
	CASE 
		WHEN STHVDESK=0 THEN REPLACE(STHVDESK,0,'No')
		WHEN STHVDESK=1 THEN REPLACE(STHVDESK,1,'Yes')
		ELSE NULL
		END AS 'study_desk',
	CASE 
		WHEN STHVCHR=0 THEN REPLACE(STHVCHR,0,'No')
		WHEN STHVCHR=1 THEN REPLACE(STHVCHR,1,'Yes')
		ELSE NULL
		END AS 'study_chair',
	CASE 
		WHEN STHVLAMP=0 THEN REPLACE(STHVLAMP,0,'No')
		WHEN STHVLAMP=1 THEN REPLACE(STHVLAMP,1,'Yes')
		ELSE NULL
		END AS 'study_lamp',
	CASE 
		WHEN STHVEFAN=0 THEN REPLACE(STHVEFAN,0,'No')
		WHEN STHVEFAN=1 THEN REPLACE(STHVEFAN,1,'Yes')
		ELSE NULL
		END AS 'electric_fan',
	CASE 
		WHEN STHVAIRC=0 THEN REPLACE(STHVAIRC,0,'No')
		WHEN STHVAIRC=1 THEN REPLACE(STHVAIRC,1,'Yes')
		ELSE NULL
		END AS 'air_conditioning',
	CASE 
		WHEN STHVCAR=0 THEN REPLACE(STHVCAR,0,'No')
		WHEN STHVCAR=1 THEN REPLACE(STHVCAR,1,'Yes')
		ELSE NULL
		END AS 'car',
	CASE 
		WHEN STHVCOMP=0 THEN REPLACE(STHVCOMP,0,'No')
		WHEN STHVCOMP=1 THEN REPLACE(STHVCOMP,1,'Yes')
		ELSE NULL
		END AS 'computer_laptop',
	CASE 
		WHEN STHVINTR=0 THEN REPLACE(STHVINTR,0,'No')
		WHEN STHVINTR=1 THEN REPLACE(STHVINTR,1,'Yes')
		ELSE NULL
		END AS 'internet',
	CASE 
		WHEN STHVFRDG=0 THEN REPLACE(STHVFRDG,0,'No')
		WHEN STHVFRDG=1 THEN REPLACE(STHVFRDG,1,'Yes')
		ELSE NULL
		END AS 'fridge',
	CASE 
		WHEN STHVMCRO=0 THEN REPLACE(STHVMCRO,0,'No')
		WHEN STHVMCRO=1 THEN REPLACE(STHVMCRO,1,'Yes')
		ELSE NULL
		END AS 'microwave',
	CASE 
		WHEN STHVDVD=0 THEN REPLACE(STHVDVD,0,'No')
		WHEN STHVDVD=1 THEN REPLACE(STHVDVD,1,'Yes')
		ELSE NULL
		END AS 'dvd_player',
	CASE 
		WHEN STHVCBLE=0 THEN REPLACE(STHVCBLE,0,'No')
		WHEN STHVCBLE=1 THEN REPLACE(STHVCBLE,1,'Yes')
		ELSE NULL
		END AS 'cable_tv_box'
INTO school_survey.vietnam.home_life
FROM school_survey.dbo.vietnam_both_waves
END TRY
BEGIN CATCH
        SELECT  
            ERROR_NUMBER() AS ErrorNumber  
            ,ERROR_SEVERITY() AS ErrorSeverity  
            ,ERROR_STATE() AS ErrorState  
            ,ERROR_PROCEDURE() AS ErrorProcedure  
            ,ERROR_LINE() AS ErrorLine  
            ,ERROR_MESSAGE() AS ErrorMessage;  
    END CATCH
END;


--school life table
BEGIN
BEGIN TRY
SELECT
UNIQUEID AS 'student_id',
	CASE 
		WHEN STEATLNC=0 THEN REPLACE(STEATLNC,0,'No')
		WHEN STEATLNC=1 THEN REPLACE(STEATLNC,1,'Yes')
		ELSE NULL
		END	AS 'eat_school_lunch',
	CASE 
		WHEN STPAYLNC=0 THEN REPLACE(STPAYLNC,0,'Not applicable')
		WHEN STPAYLNC=1 THEN REPLACE(STPAYLNC,1,'Yes')
		WHEN STPAYLNC=2 THEN REPLACE(STPAYLNC,2,'No')
		ELSE NULL
		END AS 'pay_for_school_lunch',
	CASE 
		WHEN STRPTCL1=0 THEN REPLACE(STRPTCL1,0,'Never')
		WHEN STRPTCL1=1 THEN REPLACE(STRPTCL1,1,'1')
		WHEN STRPTCL1=2 THEN REPLACE(STRPTCL1,2,'2+')
		ELSE NULL
		END AS 'grade1_5_repeated',
	CASE 
		WHEN STRPTCL6=0 THEN REPLACE(STRPTCL6,0,'Never')
		WHEN STRPTCL6=1 THEN REPLACE(STRPTCL6,1,'1')
		WHEN STRPTCL6=2 THEN REPLACE(STRPTCL6,2,'2+')
		ELSE NULL
		END AS 'grade6_9_repeated',
	CASE 
		WHEN STRPTCL10=0 THEN REPLACE(STRPTCL10,0,'Never')
		WHEN STRPTCL10=1 THEN REPLACE(STRPTCL10,1,'1')
		WHEN STRPTCL10=2 THEN REPLACE(STRPTCL10,2,'2+')
		ELSE NULL
		END AS 'grade10_repeated',
	CASE 
		WHEN STTLTSCH=0 THEN REPLACE(STTLTSCH,0,'No')
		WHEN STTLTSCH=1 THEN REPLACE(STTLTSCH,1,'Yes')
		WHEN STTLTSCH=2 THEN REPLACE(STTLTSCH,2,'No toilet')
		ELSE NULL
		END AS 'use_school_toilet',
	CASE 
		WHEN STITMOW1=0 THEN REPLACE(STITMOW1,0,'No')
		WHEN STITMOW1=1 THEN REPLACE(STITMOW1,1,'Yes')
		ELSE NULL
		END AS 'compulsory_maths_textbooks',
	CASE 
		WHEN STITMOW2=0 THEN REPLACE(STITMOW2,0,'No')
		WHEN STITMOW2=1 THEN REPLACE(STITMOW2,1,'Yes')
		ELSE NULL
		END AS 'compulsory_english_textbooks',
	CASE 
		WHEN STITMOW3=0 THEN REPLACE(STITMOW3,0,'No')
		WHEN STITMOW3=1 THEN REPLACE(STITMOW3,1,'Yes')
		ELSE NULL
		END AS 'noncompulsory_maths_textbooks',
	CASE 
		WHEN STITMOW4=0 THEN REPLACE(STITMOW4,0,'No')
		WHEN STITMOW4=1 THEN REPLACE(STITMOW4,1,'Yes')
		ELSE NULL
		END AS 'noncompulsory_english_textbooks',
	CASE 
		WHEN STITMOW5=0 THEN REPLACE(STITMOW5,0,'No')
		WHEN STITMOW5=1 THEN REPLACE(STITMOW5,1,'Yes')
		ELSE NULL
		END AS 'school_bag',
	CASE 
		WHEN STITMOW6=0 THEN REPLACE(STITMOW6,0,'No')
		WHEN STITMOW6=1 THEN REPLACE(STITMOW6,1,'Yes')
		ELSE NULL
		END AS 'ruler',
	CASE 
		WHEN STITMOW7=0 THEN REPLACE(STITMOW7,0,'No')
		WHEN STITMOW7=1 THEN REPLACE(STITMOW7,1,'Yes')
		ELSE NULL
		END AS 'mobile_phone',
	CASE 
		WHEN STITMOW8=0 THEN REPLACE(STITMOW8,0,'No')
		WHEN STITMOW8=1 THEN REPLACE(STITMOW8,1,'Yes')
		ELSE NULL
		END AS 'pocket_calculator',
	CASE 
		WHEN STGR1001=1 THEN REPLACE(STGR1001,1,'Not important')
		WHEN STGR1001=2 THEN REPLACE(STGR1001,2,'Somewhat important')
		WHEN STGR1001=3 THEN REPLACE(STGR1001,3,'Important')
		WHEN STGR1001=4 THEN REPLACE(STGR1001,4,'Very important')
		ELSE NULL
		END AS 'school_nearby',
	CASE 
		WHEN STGR1002=1 THEN REPLACE(STGR1002,1,'Not important')
		WHEN STGR1002=2 THEN REPLACE(STGR1002,2,'Somewhat important')
		WHEN STGR1002=3 THEN REPLACE(STGR1002,3,'Important')
		WHEN STGR1002=4 THEN REPLACE(STGR1002,4,'Very important')
		ELSE NULL
		END AS 'offers_particular_subjects',
	CASE 
		WHEN STGR1003=1 THEN REPLACE(STGR1003,1,'Not important')
		WHEN STGR1003=2 THEN REPLACE(STGR1003,2,'Somewhat important')
		WHEN STGR1003=3 THEN REPLACE(STGR1003,3,'Important')
		WHEN STGR1003=4 THEN REPLACE(STGR1003,4,'Very important')
		ELSE NULL
		END AS 'family_attended',
	CASE 
		WHEN STGR1004=1 THEN REPLACE(STGR1004,1,'Not important')
		WHEN STGR1004=2 THEN REPLACE(STGR1004,2,'Somewhat important')
		WHEN STGR1004=3 THEN REPLACE(STGR1004,3,'Important')
		WHEN STGR1004=4 THEN REPLACE(STGR1004,4,'Very important')
		ELSE NULL
		END AS 'low_expenses',
	CASE 
		WHEN STGR1005=1 THEN REPLACE(STGR1005,1,'Not important')
		WHEN STGR1005=2 THEN REPLACE(STGR1005,2,'Somewhat important')
		WHEN STGR1005=3 THEN REPLACE(STGR1005,3,'Important')
		WHEN STGR1005=4 THEN REPLACE(STGR1005,4,'Very important')
		ELSE NULL
		END AS 'financial_aid',
	CASE 
		WHEN STGR1006=1 THEN REPLACE(STGR1006,1,'Not important')
		WHEN STGR1006=2 THEN REPLACE(STGR1006,2,'Somewhat important')
		WHEN STGR1006=3 THEN REPLACE(STGR1006,3,'Important')
		WHEN STGR1006=4 THEN REPLACE(STGR1006,4,'Very important')
		ELSE NULL
		END AS 'quality_teaching',
	CASE 
		WHEN STGR1007=1 THEN REPLACE(STGR1007,1,'Not important')
		WHEN STGR1007=2 THEN REPLACE(STGR1007,2,'Somewhat important')
		WHEN STGR1007=3 THEN REPLACE(STGR1007,3,'Important')
		WHEN STGR1007=4 THEN REPLACE(STGR1007,4,'Very important')
		ELSE NULL
		END AS 'students_high_achievements',
	CASE 
		WHEN STGR1008=1 THEN REPLACE(STGR1008,1,'Not important')
		WHEN STGR1008=2 THEN REPLACE(STGR1008,2,'Somewhat important')
		WHEN STGR1008=3 THEN REPLACE(STGR1008,3,'Important')
		WHEN STGR1008=4 THEN REPLACE(STGR1008,4,'Very important')
		ELSE NULL
		END AS 'safe_environment',
	CASE 
		WHEN STGR1009=1 THEN REPLACE(STGR1009,1,'Not important')
		WHEN STGR1009=2 THEN REPLACE(STGR1009,2,'Somewhat important')
		WHEN STGR1009=3 THEN REPLACE(STGR1009,3,'Important')
		WHEN STGR1009=4 THEN REPLACE(STGR1009,4,'Very important')
		ELSE NULL
		END AS 'entrance_exam_score',
	CASE 
		WHEN STGR1011=1 THEN REPLACE(STGR1011,1,'Not important')
		WHEN STGR1011=2 THEN REPLACE(STGR1011,2,'Somewhat important')
		WHEN STGR1011=3 THEN REPLACE(STGR1011,3,'Important')
		WHEN STGR1011=4 THEN REPLACE(STGR1011,4,'Very important')
		ELSE NULL
		END AS 'no_entrance_exam',
	CASE 
		WHEN STLTESCH=0 THEN REPLACE(STLTESCH,0,'None')
		WHEN STLTESCH=1 THEN REPLACE(STLTESCH,1,'1-2 days')
		WHEN STLTESCH=2 THEN REPLACE(STLTESCH,2,'3-4 days')
		WHEN STLTESCH=3 THEN REPLACE(STLTESCH,3,'5+ days')
		ELSE NULL
		END AS 'late_last_2_weeks',
	CASE 
		WHEN STMSSDAY=0 THEN REPLACE(STMSSDAY,0,'None')
		WHEN STMSSDAY=1 THEN REPLACE(STMSSDAY,1,'1-2 days')
		WHEN STMSSDAY=2 THEN REPLACE(STMSSDAY,2,'3-4 days')
		WHEN STMSSDAY=3 THEN REPLACE(STMSSDAY,3,'5+ days')
		ELSE NULL
		END AS 'days_missed_last_2_weeks',
	CASE 
		WHEN STMSSCLS=0 THEN REPLACE(STMSSCLS,0,'None')
		WHEN STMSSCLS=1 THEN REPLACE(STMSSCLS,1,'1-2 days')
		WHEN STMSSCLS=2 THEN REPLACE(STMSSCLS,2,'3-4 days')
		WHEN STMSSCLS=3 THEN REPLACE(STMSSCLS,3,'5+ days')
		ELSE NULL
		END AS 'classes_missed_last_2_weeks',
	CASE 
		WHEN STRSNMS1=0 THEN REPLACE(STRSNMS1,0,'No')
		WHEN STRSNMS1=1 THEN REPLACE(STRSNMS1,1,'Yes')
		ELSE NULL
		END AS 'missedschool_travel_not_safe',
	CASE 
		WHEN STRSNMS2=0 THEN REPLACE(STRSNMS2,0,'No')
		WHEN STRSNMS2=1 THEN REPLACE(STRSNMS2,1,'Yes')
		ELSE NULL
		END AS 'missedschool_sick',
	CASE 
		WHEN STRSNMS3=0 THEN REPLACE(STRSNMS3,0,'No')
		WHEN STRSNMS3=1 THEN REPLACE(STRSNMS3,1,'Yes')
		ELSE NULL
		END AS 'missedschool_paid_work',
	CASE 
		WHEN STRSNMS4=0 THEN REPLACE(STRSNMS4,0,'No')
		WHEN STRSNMS4=1 THEN REPLACE(STRSNMS4,1,'Yes')
		ELSE NULL
		END AS 'missedschool_familybusiness_fields',
	CASE 
		WHEN STRSNMS5=0 THEN REPLACE(STRSNMS5,0,'No')
		WHEN STRSNMS5=1 THEN REPLACE(STRSNMS5,1,'Yes')
		ELSE NULL
		END AS 'missedschool_chores',
	CASE 
		WHEN STRSNMS6=0 THEN REPLACE(STRSNMS6,0,'No')
		WHEN STRSNMS6=1 THEN REPLACE(STRSNMS6,1,'Yes')
		ELSE NULL
		END AS 'missedschool_travelling',
	CASE 
		WHEN STRSNMS7=0 THEN REPLACE(STRSNMS7,0,'No')
		WHEN STRSNMS7=1 THEN REPLACE(STRSNMS7,1,'Yes')
		ELSE NULL
		END AS 'missedschool_suspended',
	CASE 
		WHEN STRSNMS8=0 THEN REPLACE(STRSNMS8,0,'No')
		WHEN STRSNMS8=1 THEN REPLACE(STRSNMS8,1,'Yes')
		ELSE NULL
		END AS 'missedschool_family_celebration',
	CASE 
		WHEN STRSNMS9=0 THEN REPLACE(STRSNMS9,0,'No')
		WHEN STRSNMS9=1 THEN REPLACE(STRSNMS9,1,'Yes')
		ELSE NULL
		END AS 'missedschool_other_reason',
	CASE 
		WHEN STRSNMS0=0 THEN REPLACE(STRSNMS0,0,'No')
		WHEN STRSNMS0=1 THEN REPLACE(STRSNMS0,1,'Yes')
		ELSE NULL
		END AS 'missedschool_not_applicable',
	CASE 
		WHEN STDSTLENR=0 THEN REPLACE(STDSTLENR,0,'No')
		WHEN STDSTLENR=1 THEN REPLACE(STDSTLENR,1,'Yes')
		ELSE NULL
		END AS 'remained_enrolled',
	CASE 
		WHEN STDNOENR=1 THEN REPLACE(STDNOENR,1,'Dropped out')
		WHEN STDNOENR=2 THEN REPLACE(STDNOENR,2,'Moved schools')
		WHEN STDNOENR=3 THEN REPLACE(STDNOENR,3,'Moved class')
		WHEN STDNOENR=4 THEN REPLACE(STDNOENR,4,'Unknown')
		WHEN STDNOENR=5 THEN REPLACE(STDNOENR,5,'Other')
		ELSE NULL
		END AS 'reason_left_class',
CAST(STDNMABS AS NUMERIC) AS 'total_days_absent'
INTO school_survey.vietnam.school_life
FROM school_survey.dbo.vietnam_both_waves
END TRY
BEGIN CATCH
        SELECT  
            ERROR_NUMBER() AS ErrorNumber  
            ,ERROR_SEVERITY() AS ErrorSeverity  
            ,ERROR_STATE() AS ErrorState  
            ,ERROR_PROCEDURE() AS ErrorProcedure  
            ,ERROR_LINE() AS ErrorLine  
            ,ERROR_MESSAGE() AS ErrorMessage;  
    END CATCH
END;


--education table
BEGIN
BEGIN TRY
SELECT
UNIQUEID AS 'student_id',
	CASE 
		WHEN STAGEENG=1 THEN REPLACE(STAGEENG,1,'Kindergarten')
		WHEN STAGEENG=2 THEN REPLACE(STAGEENG,2,'Grade 1-5')
		WHEN STAGEENG=3 THEN REPLACE(STAGEENG,3,'Grade 6-9')
		WHEN STAGEENG=4 THEN REPLACE(STAGEENG,4,'Grade 10')
		WHEN STAGEENG=5 THEN REPLACE(STAGEENG,5,'Never')
		ELSE NULL
		END AS 'grade_started_english',
	CASE 
		WHEN STHGHGRD=1 THEN REPLACE(STHGHGRD,1,'Upper secondary (general)')
		WHEN STHGHGRD=2 THEN REPLACE(STHGHGRD,2,'Upper secondary (vocational)')
		WHEN STHGHGRD=3 THEN REPLACE(STHGHGRD,3,'Professional school')
		WHEN STHGHGRD=4 THEN REPLACE(STHGHGRD,4,'College')
		WHEN STHGHGRD=5 THEN REPLACE(STHGHGRD,5,'College (vocational)')
		WHEN STHGHGRD=6 THEN REPLACE(STHGHGRD,6,'Bachelors degree')
		WHEN STHGHGRD=7 THEN REPLACE(STHGHGRD,7,'Masters degree')
		WHEN STHGHGRD=8 THEN REPLACE(STHGHGRD,8,'Doctorate/PhD')
		WHEN STHGHGRD=9 THEN REPLACE(STHGHGRD,9,'Unknown')
		ELSE NULL
		END AS 'expected_education_level',
ENG_TEST AS 'attempted_english_test',
CAST(ENG_RAWSCORE AS NUMERIC) AS 'english_test_score_1',
MATH_TEST AS 'attempted_maths_test',
CAST(MATH_RAWSCORE AS NUMERIC) AS 'maths_test_score_1',
ENG_TEST2 AS 'attempted_english_test_2',
CAST(ENG_RAWSCORE2 AS NUMERIC) AS 'english_test_score_2',
MATH_TEST2 AS 'attempted_maths_test_2',
CAST(MATH_RAWSCORE2 AS NUMERIC) AS 'maths_test_score_2',
	CASE 
		WHEN STMTHWRK=0 THEN REPLACE(STMTHWRK,0,'Rarely/None')
		WHEN STMTHWRK=1 THEN REPLACE(STMTHWRK,1,'Once per week')
		WHEN STMTHWRK=2 THEN REPLACE(STMTHWRK,2,'Twice per week')
		WHEN STMTHWRK=3 THEN REPLACE(STMTHWRK,3,'Three times per week')
		WHEN STMTHWRK=4 THEN REPLACE(STMTHWRK,4,'More than  3 times per week')
		ELSE NULL
		END AS 'maths_homework_given',
	CASE 
		WHEN STMWRKCH=0 THEN REPLACE(STMWRKCH,0,'Never')
		WHEN STMWRKCH=1 THEN REPLACE(STMWRKCH,1,'Rarely')
		WHEN STMWRKCH=2 THEN REPLACE(STMWRKCH,2,'Occasionally')
		WHEN STMWRKCH=3 THEN REPLACE(STMWRKCH,3,'Always')
		ELSE NULL
		END AS 'maths_homework_checked',
	CASE 
		WHEN STMWRKCM=0 THEN REPLACE(STMWRKCM,0,'Never')
		WHEN STMWRKCM=1 THEN REPLACE(STMWRKCM,1,'Rarely')
		WHEN STMWRKCM=2 THEN REPLACE(STMWRKCM,2,'Occasionally')
		WHEN STMWRKCM=3 THEN REPLACE(STMWRKCM,3,'Always')
		ELSE NULL
		END AS 'maths_homework_comments',
	CASE 
		WHEN STETHWRK=0 THEN REPLACE(STETHWRK,0,'Rarely/None')
		WHEN STETHWRK=1 THEN REPLACE(STETHWRK,1,'Once per week')
		WHEN STETHWRK=2 THEN REPLACE(STETHWRK,2,'Twice per week')
		WHEN STETHWRK=3 THEN REPLACE(STETHWRK,3,'Three times per week')
		WHEN STETHWRK=4 THEN REPLACE(STETHWRK,4,'More than 3 times per week')
		ELSE NULL
		END AS 'english_homework_given',
	CASE 
		WHEN STEWRKCH=0 THEN REPLACE(STEWRKCH,0,'Never')
		WHEN STEWRKCH=1 THEN REPLACE(STEWRKCH,1,'Rarely')
		WHEN STEWRKCH=2 THEN REPLACE(STEWRKCH,2,'Occasionally')
		WHEN STEWRKCH=3 THEN REPLACE(STEWRKCH,3,'Always')
		ELSE NULL
		END AS 'english_homework_checked',
	CASE 
		WHEN STEWRKCM=0 THEN REPLACE(STEWRKCM,0,'Never')
		WHEN STEWRKCM=1 THEN REPLACE(STEWRKCM,1,'Rarely')
		WHEN STEWRKCM=2 THEN REPLACE(STEWRKCM,2,'Occasionally')
		WHEN STEWRKCM=3 THEN REPLACE(STEWRKCM,3,'Always')
		ELSE NULL
		END AS 'english_homework_comments',
	CASE 
		WHEN STTMMWRK=0 THEN REPLACE(STTMMWRK,0,'None')
		WHEN STTMMWRK=1 THEN REPLACE(STTMMWRK,1,'<1')
		WHEN STTMMWRK=2 THEN REPLACE(STTMMWRK,2,'1-2')
		WHEN STTMMWRK=3 THEN REPLACE(STTMMWRK,3,'3+')
		ELSE NULL
		END AS 'maths_homework_hours_outside_lesson',
	CASE 
		WHEN STTMEWRK=0 THEN REPLACE(STTMEWRK,0,'None')
		WHEN STTMEWRK=1 THEN REPLACE(STTMEWRK,1,'<1')
		WHEN STTMEWRK=2 THEN REPLACE(STTMEWRK,2,'1-2')
		WHEN STTMEWRK=3 THEN REPLACE(STTMEWRK,3,'3+')
		ELSE NULL
		END AS 'english_homework_hours_outside_lesson',
	CASE 
		WHEN STCMPHME=1 THEN REPLACE(STCMPHME,1,'Never')
		WHEN STCMPHME=2 THEN REPLACE(STCMPHME,2,'Monthly')
		WHEN STCMPHME=3 THEN REPLACE(STCMPHME,3,'Weekly')
		WHEN STCMPHME=4 THEN REPLACE(STCMPHME,4,'Daily')
		ELSE NULL
		END AS 'use_computer_at_home',
	CASE 
		WHEN STCMPSCH=1 THEN REPLACE(STCMPSCH,1,'Never')
		WHEN STCMPSCH=2 THEN REPLACE(STCMPSCH,2,'Monthly')
		WHEN STCMPSCH=3 THEN REPLACE(STCMPSCH,3,'Weekly')
		WHEN STCMPSCH=4 THEN REPLACE(STCMPSCH,4,'Daily')
		ELSE NULL
		END AS 'use_computer_at_school',
	CASE 
		WHEN STCMPOTH=1 THEN REPLACE(STCMPOTH,1,'Never')
		WHEN STCMPOTH=2 THEN REPLACE(STCMPOTH,2,'Monthly')
		WHEN STCMPOTH=3 THEN REPLACE(STCMPOTH,3,'Weekly')
		WHEN STCMPOTH=4 THEN REPLACE(STCMPOTH,4,'Daily')
		ELSE NULL
		END AS 'use_computer_other_place',
	CASE 
		WHEN STADDMT=1 THEN REPLACE(STADDMT,1,'To excel')
		WHEN STADDMT=2 THEN REPLACE(STADDMT,2,'To keep up')
		WHEN STADDMT=3 THEN REPLACE(STADDMT,3,'No')
		ELSE NULL
		END AS 'additional_maths_class',
	CASE 
		WHEN STADDEN=1 THEN REPLACE(STADDEN,1,'To excel')
		WHEN STADDEN=2 THEN REPLACE(STADDEN,2,'To keep up')
		WHEN STADDEN=3 THEN REPLACE(STADDEN,3,'No')
		ELSE NULL
		END AS 'additional_english_class',
	CASE 
		WHEN STADDOT=1 THEN REPLACE(STADDOT,1,'To excel')
		WHEN STADDOT=2 THEN REPLACE(STADDOT,2,'To keep up')
		WHEN STADDOT=3 THEN REPLACE(STADDOT,3,'No')
		ELSE NULL
		END AS 'additional_class_other_subject',
CAST(STEXSCMT AS NUMERIC) AS 'hours_additional_maths_class',
CAST(STEXSCEN AS NUMERIC) AS 'hours_additional_english_class',
CAST(STEXSCOT AS NUMERIC) AS 'hours_additional_class_other_subject',
CAST(B1LVLSUPP AS NUMERIC) AS 'home_support_level',
CAST(B1MTVSUC AS NUMERIC) AS 'motivation_to_succeed',
CAST(B2ACABMT AS NUMERIC) AS 'academic_ability_maths',
CAST(B2PRCLMT AS NUMERIC) AS 'class_participation_maths',
CAST(B3ACABEN AS NUMERIC) AS 'academic_ability_english',
CAST(B3PRCLEN AS NUMERIC) AS 'class_participation_english'
INTO school_survey.vietnam.education
FROM school_survey.dbo.vietnam_both_waves
END TRY
BEGIN CATCH
        SELECT  
            ERROR_NUMBER() AS ErrorNumber  
            ,ERROR_SEVERITY() AS ErrorSeverity  
            ,ERROR_STATE() AS ErrorState  
            ,ERROR_PROCEDURE() AS ErrorProcedure  
            ,ERROR_LINE() AS ErrorLine  
            ,ERROR_MESSAGE() AS ErrorMessage;  
    END CATCH
END;


--outside school table
BEGIN
BEGIN TRY
SELECT
UNIQUEID AS 'student_id',
	CASE 
		WHEN STBRWBK=0 THEN REPLACE(STBRWBK,0,'No')
		WHEN STBRWBK=1 THEN REPLACE(STBRWBK,1,'Yes')
		WHEN STBRWBK=2 THEN REPLACE(STBRWBK,2,'Not possible')
		ELSE NULL
		END AS 'borrow_books',
	CASE 
		WHEN STREADFN=1 THEN REPLACE(STREADFN,1,'Never')
		WHEN STREADFN=2 THEN REPLACE(STREADFN,2,'Monthly')
		WHEN STREADFN=3 THEN REPLACE(STREADFN,3,'Weekly')
		WHEN STREADFN=4 THEN REPLACE(STREADFN,4,'Daily')
		ELSE NULL
		END AS 'read_for_fun',
	CASE 
		WHEN STREADCH=1 THEN REPLACE(STREADCH,1,'Never')
		WHEN STREADCH=2 THEN REPLACE(STREADCH,2,'Monthly')
		WHEN STREADCH=3 THEN REPLACE(STREADCH,3,'Weekly')
		WHEN STREADCH=4 THEN REPLACE(STREADCH,4,'Daily')
		ELSE NULL
		END AS 'read_chosen_material',
	CASE 
		WHEN STREADLR=1 THEN REPLACE(STREADLR,1,'Never')
		WHEN STREADLR=2 THEN REPLACE(STREADLR,2,'Monthly')
		WHEN STREADLR=3 THEN REPLACE(STREADLR,3,'Weekly')
		WHEN STREADLR=4 THEN REPLACE(STREADLR,4,'Daily')
		ELSE NULL
		END AS 'read_to_learn',
	CASE 
		WHEN STSPEN01=1 THEN REPLACE(STSPEN01,1,'Rarely/Never')
		WHEN STSPEN01=2 THEN REPLACE(STSPEN01,2,'Often')
		WHEN STSPEN01=3 THEN REPLACE(STSPEN01,3,'Occasionally')
		ELSE NULL
		END AS 'speak_english_mother',
	CASE 
		WHEN STSPEN02=1 THEN REPLACE(STSPEN02,1,'Rarely/Never')
		WHEN STSPEN02=2 THEN REPLACE(STSPEN02,2,'Often')
		WHEN STSPEN02=3 THEN REPLACE(STSPEN02,3,'Occasionally')
		ELSE NULL
		END AS 'speak_english_father',
	CASE 
		WHEN STSPEN03=1 THEN REPLACE(STSPEN03,1,'Rarely/Never')
		WHEN STSPEN03=2 THEN REPLACE(STSPEN03,2,'Often')
		WHEN STSPEN03=3 THEN REPLACE(STSPEN03,3,'Occasionally')
		ELSE NULL
		END AS 'speak_english_siblings',
	CASE 
		WHEN STSPEN04=1 THEN REPLACE(STSPEN04,1,'Rarely/Never')
		WHEN STSPEN04=2 THEN REPLACE(STSPEN04,2,'Often')
		WHEN STSPEN04=3 THEN REPLACE(STSPEN04,3,'Occasionally')
		ELSE NULL
		END AS 'speak_english_friends',
	CASE 
		WHEN STSPEN05=1 THEN REPLACE(STSPEN05,1,'Rarely/Never')
		WHEN STSPEN05=2 THEN REPLACE(STSPEN05,2,'Often')
		WHEN STSPEN05=3 THEN REPLACE(STSPEN05,3,'Occasionally')
		ELSE NULL
		END AS 'speak_english_schoolmates',
	CASE 
		WHEN STATEN01=1 THEN REPLACE(STATEN01,1,'Rarely/Never')
		WHEN STATEN01=2 THEN REPLACE(STATEN01,2,'Often')
		WHEN STATEN01=3 THEN REPLACE(STATEN01,3,'Occasionally')
		ELSE NULL
		END AS 'read_english_material',
	CASE 
		WHEN STATEN02=1 THEN REPLACE(STATEN02,1,'Rarely/Never')
		WHEN STATEN02=2 THEN REPLACE(STATEN02,2,'Often')
		WHEN STATEN02=3 THEN REPLACE(STATEN02,3,'Occasionally')
		ELSE NULL
		END AS 'watch_english_tv',
	CASE 
		WHEN STATEN03=1 THEN REPLACE(STATEN03,1,'Rarely/Never')
		WHEN STATEN03=2 THEN REPLACE(STATEN03,2,'Often')
		WHEN STATEN03=3 THEN REPLACE(STATEN03,3,'Occasionally')
		ELSE NULL
		END AS 'use_english_internet',
	CASE 
		WHEN STATEN04=1 THEN REPLACE(STATEN04,1,'Rarely/Never')
		WHEN STATEN04=2 THEN REPLACE(STATEN04,2,'Often')
		WHEN STATEN04=3 THEN REPLACE(STATEN04,3,'Occasionally')
		ELSE NULL
		END AS 'write_english',
	CASE 
		WHEN STNONSCL=0 THEN REPLACE(STNONSCL,0,'None')
		WHEN STNONSCL=1 THEN REPLACE(STNONSCL,1,'<1')
		WHEN STNONSCL=2 THEN REPLACE(STNONSCL,2,'1-2')
		WHEN STNONSCL=3 THEN REPLACE(STNONSCL,3,'2-3')
		WHEN STNONSCL=4 THEN REPLACE(STNONSCL,4,'>4')
		ELSE NULL
		END AS 'hours_nonschool_work',
	CASE 
		WHEN STPRVMT=1 THEN 'To excel'
		WHEN STPRVMT=2 THEN 'To keep up'
		WHEN STPRVMT=3 THEN 'No'
		ELSE NULL
		END AS 'private_maths_class',
	CASE 
		WHEN STPRVEN=1 THEN REPLACE(STPRVEN,1,'To excel')
		WHEN STPRVEN=2 THEN REPLACE(STPRVEN,2,'To keep up')
		WHEN STPRVEN=3 THEN REPLACE(STPRVEN,3,'No')
		ELSE NULL
		END AS 'private_english_class',
	CASE 
		WHEN STPRVOT=1 THEN REPLACE(STPRVOT,1,'To excel')
		WHEN STPRVOT=2 THEN REPLACE(STPRVOT,2,'To keep up')
		WHEN STPRVOT=3 THEN REPLACE(STPRVOT,3,'No')
		ELSE NULL
		END AS 'private_class_other_subject',
CAST(STEXOTMT AS NUMERIC) AS 'hours_private_maths_class',
CAST(STEXOTEN AS NUMERIC) AS 'hours_private_english_class',
CAST(STEXOTOT AS NUMERIC) AS 'hours_private_class_other_subject'
INTO school_survey.vietnam.outside_school
FROM school_survey.dbo.vietnam_both_waves
END TRY
BEGIN CATCH
        SELECT  
            ERROR_NUMBER() AS ErrorNumber  
            ,ERROR_SEVERITY() AS ErrorSeverity  
            ,ERROR_STATE() AS ErrorState  
            ,ERROR_PROCEDURE() AS ErrorProcedure  
            ,ERROR_LINE() AS ErrorLine  
            ,ERROR_MESSAGE() AS ErrorMessage;  
    END CATCH
END;


--class table
BEGIN
BEGIN TRY
SELECT
SCHOOLID AS 'school_id',
CLASSID AS 'class_id',
CAST(GRLENRL AS NUMERIC) AS 'girls_enrolled',
CAST(BOYENRL AS NUMERIC) AS 'boys_enrolled',
CAST(TTLENRL AS NUMERIC) AS 'total_enrolled',
CAST(TGRLENRL AS NUMERIC) AS 'girls_attended_1',
CAST(TBOYENRL AS NUMERIC) AS 'boys_attended_1',
CAST(TTTLENRL AS NUMERIC) AS 'total_attended_1',
CAST(ATDGIRL AS NUMERIC) AS 'girls_attended_2',
CAST(ATDBOY AS NUMERIC) AS 'boys_attended_2',
CAST(ATDTTL AS NUMERIC) AS 'total_attended_2',
CAST(NEWCHLD AS NUMERIC) AS 'new_students_enrolled',
	CASE 
		WHEN ATDTMSY=1 THEN REPLACE(ATDTMSY,1,'Normal')
		WHEN ATDTMSY=2 THEN REPLACE(ATDTMSY,2,'Higher')
		WHEN ATDTMSY=3 THEN REPLACE(ATDTMSY,3,'Lower')
		ELSE NULL
		END 'current_student_attendence',
	CASE 
		WHEN ATDDFSY=1 THEN REPLACE(ATDDFSY,1,'Farm work')
		WHEN ATDDFSY=2 THEN REPLACE(ATDDFSY,2,'Seasonal migration')
		WHEN ATDDFSY=3 THEN REPLACE(ATDDFSY,3,'Holiday/Celebration')
		WHEN ATDDFSY=4 THEN REPLACE(ATDDFSY,4,'Other')
		ELSE 'Not applicable'
		END 'reason_attendence_higher_or_lower',
	CASE 
		WHEN TGMTHENG=0 THEN REPLACE(TGMTHENG,0,'No')
		WHEN TGMTHENG=1 THEN REPLACE(TGMTHENG,1,'Yes')
		ELSE NULL
		END 'taught_maths&english',
	CASE 
		WHEN SCALLCT=0 THEN REPLACE(SCALLCT,0,'One class')
		WHEN SCALLCT=1 THEN REPLACE(SCALLCT,1,'Randomly')
		WHEN SCALLCT=2 THEN REPLACE(SCALLCT,2,'Alphabetically')
		WHEN SCALLCT=3 THEN REPLACE(SCALLCT,3,'Ability')
		WHEN SCALLCT=4 THEN REPLACE(SCALLCT,4,'Fees')
		WHEN SCALLCT=5 THEN REPLACE(SCALLCT,5,'Subject choice')
		WHEN SCALLCT=6 THEN REPLACE(SCALLCT,6,'Other')
		WHEN SCALLCT=7 THEN REPLACE(SCALLCT,7,'Combination')
		ELSE NULL
		END 'class_allocation',
	CASE 
		WHEN GRPABLTY=1 THEN REPLACE(GRPABLTY,1,'Low')
		WHEN GRPABLTY=2 THEN REPLACE(GRPABLTY,2,'Medium')
		WHEN GRPABLTY=3 THEN REPLACE(GRPABLTY,3,'High')
		ELSE 'Not applicable'
		END 'class_ability',
CLSORD1 AS 'class_ranking_1',
CLSORD2 AS 'class_ranking_2',
	CASE 
		WHEN SCAVLB1=0 THEN REPLACE(SCAVLB1,0,'No')
		WHEN SCAVLB1=1 THEN REPLACE(SCAVLB1,1,'Yes')
		ELSE NULL
		END AS 'chalk_available',
	CASE 
		WHEN SCAVLB2=0 THEN REPLACE(SCAVLB2,0,'No')
		WHEN SCAVLB2=1 THEN REPLACE(SCAVLB2,1,'Yes')
		ELSE NULL
		END AS 'blackboard_available',
	CASE 
		WHEN SCAVLB3=0 THEN REPLACE(SCAVLB3,0,'No')
		WHEN SCAVLB3=1 THEN REPLACE(SCAVLB3,1,'Yes')
		ELSE NULL
		END AS 'teacher_desk_available',
	CASE 
		WHEN SCAVLB4=0 THEN REPLACE(SCAVLB4,0,'No')
		WHEN SCAVLB4=1 THEN REPLACE(SCAVLB4,1,'Yes')
		ELSE NULL
		END AS 'teacher_chair_available',
	CASE 
		WHEN SCAVLB5=0 THEN REPLACE(SCAVLB5,0,'No')
		WHEN SCAVLB5=1 THEN REPLACE(SCAVLB5,1,'Yes')
		ELSE NULL
		END AS 'books_available',
	CASE 
		WHEN SCAVLB6=0 THEN REPLACE(SCAVLB6,0,'No')
		WHEN SCAVLB6=1 THEN REPLACE(SCAVLB6,1,'Yes')
		ELSE NULL
		END AS 'electric_light_available',
	CASE 
		WHEN SCAVLB7=0 THEN REPLACE(SCAVLB7,0,'No')
		WHEN SCAVLB7=1 THEN REPLACE(SCAVLB7,1,'Yes')
		ELSE NULL
		END AS 'electric_fan_available',
	CASE 
		WHEN SCAVLB8=0 THEN REPLACE(SCAVLB8,0,'No')
		WHEN SCAVLB8=1 THEN REPLACE(SCAVLB8,1,'Yes')
		ELSE NULL
		END AS 'glass_windows',
	CASE 
		WHEN SCAVLB9=0 THEN REPLACE(SCAVLB9,0,'No')
		WHEN SCAVLB9=1 THEN REPLACE(SCAVLB9,1,'Yes')
		ELSE NULL
		END AS 'nonglass_windows',
	CASE 
		WHEN SCAVLB10=0 THEN REPLACE(SCAVLB10,0,'No')
		WHEN SCAVLB10=1 THEN REPLACE(SCAVLB10,1,'Yes')
		ELSE NULL
		END AS 'IT_facilities',
	CASE 
		WHEN REGTCH=1 THEN REPLACE(REGTCH,1,'Morning')
		WHEN REGTCH=2 THEN REPLACE(REGTCH,2,'Afternoon')
		WHEN REGTCH=3 THEN REPLACE(REGTCH,3,'Both')
		ELSE NULL
		END AS 'regular_teaching_time',
CAST(SCPRDDAY AS NUMERIC) AS 'taught_periods_per_day', 
CAST(SCLNONPR AS NUMERIC) AS 'period_length_mins',
CAST(SCMNMTIN AS NUMERIC) AS 'maths_periods_per_week',
CAST(SCMNENIN AS NUMERIC) AS 'english_periods_per_week',
	CASE 
		WHEN SCTXTMTH=1 THEN REPLACE(SCTXTMTH,1,'Compulsory')
		WHEN SCTXTMTH=2 THEN REPLACE(SCTXTMTH,2,'Non-compulsory')
		ELSE NULL
		END AS 'maths_textbooks_used',
	CASE 
		WHEN SCTXTENG=1 THEN REPLACE(SCTXTENG,1,'Compulsory')
		WHEN SCTXTENG=2 THEN REPLACE(SCTXTENG,2,'Non-compulsory')
		ELSE NULL
		END AS 'english_textbooks_used'
INTO school_survey.vietnam.class
FROM school_survey.dbo.vietnam_both_waves
END TRY
BEGIN CATCH
        SELECT  
            ERROR_NUMBER() AS ErrorNumber  
            ,ERROR_SEVERITY() AS ErrorSeverity  
            ,ERROR_STATE() AS ErrorState  
            ,ERROR_PROCEDURE() AS ErrorProcedure  
            ,ERROR_LINE() AS ErrorLine  
            ,ERROR_MESSAGE() AS ErrorMessage;  
    END CATCH
END;



--headteacher table
BEGIN
BEGIN TRY
SELECT
SCHOOLID AS 'school_id',
CAST(HTAGE AS NUMERIC) AS 'age',
	CASE 
		WHEN HTSEX=1 THEN REPLACE(HTSEX,1,'Male')
		WHEN HTSEX=2 THEN REPLACE(HTSEX,2,'Female')
		ELSE NULL
		END AS 'gender',
	CASE 
		WHEN HTETHGRP=1 THEN REPLACE(HTETHGRP,1,'Kinh')
		WHEN HTETHGRP=2 THEN REPLACE(HTETHGRP,2,'HMong')
		WHEN HTETHGRP=3 THEN REPLACE(HTETHGRP,3,'Cham-HRoi')
		WHEN HTETHGRP=4 THEN REPLACE(HTETHGRP,4,'Ede')
		WHEN HTETHGRP=5 THEN REPLACE(HTETHGRP,5,'Ba Na')
		WHEN HTETHGRP=6 THEN REPLACE(HTETHGRP,6,'Nung')
		WHEN HTETHGRP=7 THEN REPLACE(HTETHGRP,7,'Tay')
		WHEN HTETHGRP=8 THEN REPLACE(HTETHGRP,8,'Dao')
		WHEN HTETHGRP=9 THEN REPLACE(HTETHGRP,9,'Giay')
		WHEN HTETHGRP=10 THEN REPLACE(HTETHGRP,10,'Other')
		ELSE NULL
		END AS 'ethnicity',
	CASE 
		WHEN HTRELGN=0 THEN REPLACE(HTRELGN,0,'None')
		WHEN HTRELGN=1 THEN REPLACE(HTRELGN,1,'Buddhist')
		WHEN HTRELGN=2 THEN REPLACE(HTRELGN,2,'Christian (Catholic)')
		WHEN HTRELGN=3 THEN REPLACE(HTRELGN,3,'Christian (Protestant)')
		WHEN HTRELGN=4 THEN REPLACE(HTRELGN,4,'Cai Dai')
		WHEN HTRELGN=5 THEN REPLACE(HTRELGN,5,'Other')
		ELSE NULL
		END AS 'religion',
	CASE 
		WHEN HTMTHTNG=1 THEN REPLACE(HTMTHTNG,1,'Vietnamese')
		WHEN HTMTHTNG=2 THEN REPLACE(HTMTHTNG,2,'Hmong')
		WHEN HTMTHTNG=3 THEN REPLACE(HTMTHTNG,3,'Cham-Hroi')
		WHEN HTMTHTNG=4 THEN REPLACE(HTMTHTNG,4,'Ede')
		WHEN HTMTHTNG=5 THEN REPLACE(HTMTHTNG,5,'Nung')
		WHEN HTMTHTNG=6 THEN REPLACE(HTMTHTNG,6,'Tay')
		WHEN HTMTHTNG=7 THEN REPLACE(HTMTHTNG,7,'Dao')
		WHEN HTMTHTNG=8 THEN REPLACE(HTMTHTNG,8,'Giay')
		WHEN HTMTHTNG=9 THEN REPLACE(HTMTHTNG,9,'Chinese')
		WHEN HTMTHTNG=10 THEN REPLACE(HTMTHTNG,10,'Other')
		ELSE NULL
		END AS 'first_language',
	CASE 
		WHEN HTFRMPRV=0 THEN REPLACE(HTFRMPRV,0,'No')
		WHEN HTFRMPRV=1 THEN REPLACE(HTFRMPRV,1,'Yes')
		ELSE NULL
		END AS 'from_teaching_province',
	CASE 
		WHEN HTCURRLE=1 THEN REPLACE(HTCURRLE,1,'Principal/Director')
		WHEN HTCURRLE=2 THEN REPLACE(HTCURRLE,2,'Vice-principal')
		WHEN HTCURRLE=3 THEN REPLACE(HTCURRLE,3,'Other')
		ELSE NULL
		END AS 'current_role',
CAST(HTYRSHT AS NUMERIC) AS 'years_current_role',
	CASE 
		WHEN HTLVLEDC=1 THEN REPLACE(HTLVLEDC,1,'Upper secondary')
		WHEN HTLVLEDC=2 THEN REPLACE(HTLVLEDC,2,'Vocational training school')
		WHEN HTLVLEDC=3 THEN REPLACE(HTLVLEDC,3,'College education')
		WHEN HTLVLEDC=4 THEN REPLACE(HTLVLEDC,4,'University education (undergraduate)')
		WHEN HTLVLEDC=5 THEN REPLACE(HTLVLEDC,5,'University education (postgraduate)')
		ELSE NULL
		END AS 'education_level',
	CASE 
		WHEN HTLVLTCH=0 THEN REPLACE(HTLVLTCH,0,'None')
		WHEN HTLVLTCH=1 THEN REPLACE(HTLVLTCH,1,'Short course')
		WHEN HTLVLTCH=2 THEN REPLACE(HTLVLTCH,2,'Teacher training level')
		WHEN HTLVLTCH=3 THEN REPLACE(HTLVLTCH,3,'Teacher training college level')
		WHEN HTLVLTCH=4 THEN REPLACE(HTLVLTCH,4,'Teacher training university level')
		ELSE NULL
		END AS 'teacher_training_level',
	CASE 
		WHEN HTEXCTCH=0 THEN REPLACE(HTEXCTCH,0,'No')
		WHEN HTEXCTCH=1 THEN REPLACE(HTEXCTCH,1,'School level')
		WHEN HTEXCTCH=2 THEN REPLACE(HTEXCTCH,2,'District level')
		WHEN HTEXCTCH=3 THEN REPLACE(HTEXCTCH,3,'Province level')
		ELSE NULL
		END AS 'excellent_teacher_award'
INTO school_survey.vietnam.headteacher
FROM school_survey.dbo.vietnam_both_waves
END TRY
BEGIN CATCH
        SELECT  
            ERROR_NUMBER() AS ErrorNumber  
            ,ERROR_SEVERITY() AS ErrorSeverity  
            ,ERROR_STATE() AS ErrorState  
            ,ERROR_PROCEDURE() AS ErrorProcedure  
            ,ERROR_LINE() AS ErrorLine  
            ,ERROR_MESSAGE() AS ErrorMessage;  
    END CATCH
END;


	
--school table	
BEGIN
BEGIN TRY
SELECT
SCHOOLID AS 'school_id',
CAST(NUMG10CLS AS NUMERIC) AS 'number_grade10_class',
HTLWSGRD AS 'lowest_grade',
HTHGHGRD AS 'highest_grade',
CAST(HTNMSTEN AS NUMERIC) AS 'total_students_enrolled',
CAST(HTNMETST AS NUMERIC) AS 'ethnic_minority_enrolled',
HTYREST AS 'year_established',
	CASE 
		WHEN HTTYPSCH=1 THEN REPLACE(HTTYPSCH,1,'Government')
		WHEN HTTYPSCH=2 THEN REPLACE(HTTYPSCH,2,'Private')
		WHEN HTTYPSCH=3 THEN REPLACE(HTTYPSCH,3,'Other')
		ELSE NULL
		END AS 'school_type',
	CASE 
		WHEN HTP135CM=0 THEN REPLACE(HTP135CM,0,'No')
		WHEN HTP135CM=1 THEN REPLACE(HTP135CM,1,'Yes')
		WHEN HTP135CM=2 THEN REPLACE(HTP135CM,2,'Unknown')
		ELSE NULL
		END AS 'located_former_p135commune',
	CASE 
		WHEN HTPRDIST=0 THEN REPLACE(HTPRDIST,0,'No')
		WHEN HTPRDIST=1 THEN REPLACE(HTPRDIST,1,'Yes')
		WHEN HTPRDIST=2 THEN REPLACE(HTPRDIST,2,'Unknown')
		ELSE NULL
		END AS 'located_poor_district',
	CASE 
		WHEN HTBOARD=0 THEN REPLACE(HTBOARD,0,'No')
		WHEN HTBOARD=1 THEN REPLACE(HTBOARD,1,'Weekday boarding')
		WHEN HTBOARD=2 THEN REPLACE(HTBOARD,2,'Semester boarding')
		WHEN HTBOARD=3 THEN REPLACE(HTBOARD,3,'Mixed boarders')
		ELSE NULL
		END AS 'boarding_school',
	CASE 
		WHEN HTSCHAVL=0 THEN REPLACE(HTSCHAVL,0,'None')
		WHEN HTSCHAVL=1 THEN REPLACE(HTSCHAVL,1,'One')
		WHEN HTSCHAVL=2 THEN REPLACE(HTSCHAVL,2,'Two or more')
		ELSE NULL
		END 'district_schools_available',
	CASE 
		WHEN HTREGTCH=0 THEN REPLACE(HTREGTCH,0,'No')
		WHEN HTREGTCH=1 THEN REPLACE(HTREGTCH,1,'Yes')
		ELSE NULL
		END AS 'regular_teaching_grade10',
	CASE 
		WHEN HTNONCMP=0 THEN REPLACE(HTNONCMP,0,'No')
		WHEN HTNONCMP=1 THEN REPLACE(HTNONCMP,1,'Yes')
		ELSE NULL
		END 'type_noncomp_additional_class',
	CASE 
		WHEN HTEXTCUR=0 THEN REPLACE(HTEXTCUR,0,'No')
		WHEN HTEXTCUR=1 THEN REPLACE(HTEXTCUR,1,'Yes')
		ELSE NULL
		END 'extracurricular_activities',
	CASE 
		WHEN HTNOCMCL=0 THEN REPLACE(HTNOCMCL,0,'Not offered')
		WHEN HTNOCMCL=1 THEN REPLACE(HTNOCMCL,1,'Remedial classes')
		WHEN HTNOCMCL=2 THEN REPLACE(HTNOCMCL,2,'Additional classes')
		WHEN HTNOCMCL=3 THEN REPLACE(HTNOCMCL,3,'Mixture')
		ELSE NULL
		END 'noncomp_additional_class',
CAST(HTRQNMST AS NUMERIC) AS 'required_uppersec_teacher',
CAST(HTCENMST AS NUMERIC) AS 'employed_uppersec_teacher',
CAST(HTPTNMST AS NUMERIC) AS 'present_uppersec_teacher',
CAST(HTRQMATH AS NUMERIC) AS 'required_math_teacher',
CAST(HTRQENG AS NUMERIC) AS 'required_english_teacher',
	CASE 
		WHEN HTACRARE=0 THEN REPLACE(HTACRARE,0,'No')
		WHEN HTACRARE=1 THEN REPLACE(HTACRARE,1,'Yes')
		ELSE NULL
		END AS 'admission_area_of_residence',
	CASE 
		WHEN HTACRAETH=0 THEN REPLACE(HTACRAETH,0,'No')
		WHEN HTACRAETH=1 THEN REPLACE(HTACRAETH,1,'Yes')
		ELSE NULL
		END AS 'admission_ethnicity',
	CASE 
		WHEN HTACRAGND=0 THEN REPLACE(HTACRAGND,0,'No')
		WHEN HTACRAGND=1 THEN REPLACE(HTACRAGND,1,'Yes')
		ELSE NULL
		END AS 'admission_gender',
	CASE 
		WHEN HTACRAPAY=0 THEN REPLACE(HTACRAPAY,0,'No')
		WHEN HTACRAPAY=1 THEN REPLACE(HTACRAPAY,1,'Yes')
		ELSE NULL
		END AS 'admission_parent_pay_ability',
	CASE 
		WHEN HTACRAEXM=0 THEN REPLACE(HTACRAEXM,0,'No')
		WHEN HTACRAEXM=1 THEN REPLACE(HTACRAEXM,1,'Yes')
		ELSE NULL
		END AS 'admission_exam',
	CASE 
		WHEN HTACRAOTH=0 THEN REPLACE(HTACRAOTH,0,'No')
		WHEN HTACRAOTH=1 THEN REPLACE(HTACRAOTH,1,'Yes')
		ELSE NULL
		END AS 'admission_other',
	CASE 
		WHEN HTACRAALL=0 THEN REPLACE(HTACRAALL,0,'No')
		WHEN HTACRAALL=1 THEN REPLACE(HTACRAALL,1,'Yes')
		ELSE NULL
		END AS 'admission_all_admitted',
CAST(HTAMPAID1 AS NUMERIC) AS 'grade10_tuitionfee',
	CASE 
		WHEN HTEXM011=0 THEN REPLACE(HTEXM011,0,'No')
		WHEN HTEXM011=1 THEN REPLACE(HTEXM011,1,'Yes')
		ELSE NULL
		END AS 'tuitionfee_poverty_exemption',
	CASE 
		WHEN HTEXM021=0 THEN REPLACE(HTEXM021,0,'No')
		WHEN HTEXM021=1 THEN REPLACE(HTEXM021,1,'Yes')
		ELSE NULL
		END AS 'tuitionfee_ethnic_minority_exemption',
	CASE 
		WHEN HTEXM031= 0 THEN REPLACE(HTEXM031,0,'No')
		WHEN HTEXM031=1 THEN REPLACE(HTEXM031,1,'Yes')
		ELSE NULL
		END AS 'tuitionfee_remote_area_exemption',
	CASE 
		WHEN HTEXM041=0 THEN REPLACE(HTEXM041,0,'No')
		WHEN HTEXM041=1 THEN REPLACE(HTEXM041,1,'Yes')
		ELSE NULL
		END AS 'tuitionfee_excellence&poverty_exemption',
	CASE 
		WHEN HTEXM051=0 THEN REPLACE(HTEXM051,0,'No')
		WHEN HTEXM051=1 THEN REPLACE(HTEXM051,1,'Yes')
		ELSE NULL
		END AS 'tuitionfee_disability_exemption',
	CASE 
		WHEN HTEXM061=0 THEN REPLACE(HTEXM061,0,'No')
		WHEN HTEXM061=1 THEN REPLACE(HTEXM061,1,'Yes')
		ELSE NULL
		END AS 'tuitionfee_other_exemption',
	CASE 
		WHEN HTEXM001=0 THEN REPLACE(HTEXM001,0,'No')
		WHEN HTEXM001=1 THEN REPLACE(HTEXM001,1,'Yes')
		ELSE NULL
		END AS 'tuitionfee_all_exemption',
CAST(HTAMPAID2 AS NUMERIC) AS 'grade10_lunchfee',
	CASE 
		WHEN HTEXM012=0 THEN REPLACE(HTEXM012,0,'No')
		WHEN HTEXM012=1 THEN REPLACE(HTEXM012,1,'Yes')
		ELSE NULL
		END AS 'lunchfee_poverty_exemption',
	CASE 
		WHEN HTEXM022=0 THEN REPLACE(HTEXM022,0,'No')
		WHEN HTEXM022=1 THEN REPLACE(HTEXM022,1,'Yes')
		ELSE NULL
		END AS 'lunchfee_ethnic_minority_exemption',
	CASE 
		WHEN HTEXM032=0 THEN REPLACE(HTEXM032,0,'No')
		WHEN HTEXM032=1 THEN REPLACE(HTEXM032,1,'Yes')
		ELSE NULL
		END AS 'lunchfee_remote_area_exemption',
	CASE 
		WHEN HTEXM042=0 THEN REPLACE(HTEXM042,0,'No')
		WHEN HTEXM042=1 THEN REPLACE(HTEXM042,1,'Yes')
		ELSE NULL
		END AS 'lunchfee_excellence&poverty_exemption',
	CASE 
		WHEN HTEXM052=0 THEN REPLACE(HTEXM052,0,'No')
		WHEN HTEXM052=1 THEN REPLACE(HTEXM052,1,'Yes')
		ELSE NULL
		END AS 'lunchfee_disability_exemption',
	CASE 
		WHEN HTEXM062=0 THEN REPLACE(HTEXM062,0,'No')
		WHEN HTEXM062=1 THEN REPLACE(HTEXM062,1,'Yes')
		ELSE NULL
		END AS 'lunchfee_other_exemption',
	CASE 
		WHEN HTEXM002=0 THEN REPLACE(HTEXM002,0,'No')
		WHEN HTEXM002=1 THEN REPLACE(HTEXM002,1,'Yes')
		ELSE NULL
		END AS 'lunchfee_all_exemption',
CAST(HTAMPAID3 AS NUMERIC) AS 'grade10_extraclassfee',
	CASE 
		WHEN HTEXM013=0 THEN REPLACE(HTEXM013,0,'No')
		WHEN HTEXM013=1 THEN REPLACE(HTEXM013,1,'Yes')
		ELSE NULL
		END AS 'extraclassfee_poverty_exemption',
	CASE 
		WHEN HTEXM023=0 THEN REPLACE(HTEXM023,0,'No')
		WHEN HTEXM023=1 THEN REPLACE(HTEXM023,1,'Yes')
		ELSE NULL
		END AS 'extraclassfee_ethnic_minority_exemption',
	CASE 
		WHEN HTEXM033=0 THEN REPLACE(HTEXM033,0,'No')
		WHEN HTEXM033=1 THEN REPLACE(HTEXM033,1,'Yes')
		ELSE NULL
		END AS 'extraclassfee_remote_area_exemption',
	CASE 
		WHEN HTEXM043=0 THEN REPLACE(HTEXM043,0,'No')
		WHEN HTEXM043=1 THEN REPLACE(HTEXM043,1,'Yes')
		ELSE NULL
		END AS 'extraclassfee_excellence&poverty_exemption',
	CASE 
		WHEN HTEXM053=0 THEN REPLACE(HTEXM053,0,'No')
		WHEN HTEXM053=1 THEN REPLACE(HTEXM053,1,'Yes')
		ELSE NULL
		END AS 'extraclassfee_disability_exemption',
	CASE 
		WHEN HTEXM063=0 THEN REPLACE(HTEXM063,0,'No')
		WHEN HTEXM063=1 THEN REPLACE(HTEXM063,1,'Yes')
		ELSE NULL
		END AS 'extraclassfee_other_exemption',
	CASE 
		WHEN HTEXM003=0 THEN REPLACE(HTEXM003,0,'No')
		WHEN HTEXM003=1 THEN REPLACE(HTEXM003,1,'Yes')
		ELSE NULL
		END AS 'extraclassfee_all_exemption',
CAST(HTAMPAID4 AS NUMERIC) AS 'grade10_textbookfee',
	CASE 
		WHEN HTEXM014=0 THEN REPLACE(HTEXM014,0,'No')
		WHEN HTEXM014=1 THEN REPLACE(HTEXM014,1,'Yes')
		ELSE NULL
		END AS 'textbookfee_poverty_exemption',
	CASE 
		WHEN HTEXM024=0 THEN REPLACE(HTEXM024,0,'No')
		WHEN HTEXM024=1 THEN REPLACE(HTEXM024,1,'Yes')
		ELSE NULL
		END 'textbookfee_ethnic_minority_exemption',
	CASE 
		WHEN HTEXM034=0 THEN REPLACE(HTEXM034,0,'No')
		WHEN HTEXM034=1 THEN REPLACE(HTEXM034,1,'Yes')
		ELSE NULL
		END AS 'textbookfee_remote_area_exemption',
	CASE 
		WHEN HTEXM044=0 THEN REPLACE(HTEXM044,0,'No')
		WHEN HTEXM044=1 THEN REPLACE(HTEXM044,1,'Yes')
		ELSE NULL
		END AS 'textbookfee_excellence&poverty_exemption',
	CASE 
		WHEN HTEXM054=0 THEN REPLACE(HTEXM054,0,'No')
		WHEN HTEXM054=1 THEN REPLACE(HTEXM054,1,'Yes')
		ELSE NULL
		END AS 'textbookfee_disability_exemption',
	CASE 
		WHEN HTEXM064=0 THEN REPLACE(HTEXM064,0,'No')
		WHEN HTEXM064=1 THEN REPLACE(HTEXM064,1,'Yes')
		ELSE NULL
		END AS 'textbookfee_other_exemption',
	CASE 
		WHEN HTEXM004=0 THEN REPLACE(HTEXM004,0,'No')
		WHEN HTEXM004=1 THEN REPLACE(HTEXM004,1,'Yes')
		ELSE NULL
		END AS 'textbookfee_all_exemption',
CAST(HTAMPAID5 AS NUMERIC) AS 'grade10_uniformfee',
	CASE 
		WHEN HTEXM015=0 THEN REPLACE(HTEXM015,0,'No')
		WHEN HTEXM015=1 THEN REPLACE(HTEXM015,1,'Yes')
		ELSE NULL
		END AS 'uniformfee_poverty_exemption',
	CASE 
		WHEN HTEXM025=0 THEN REPLACE(HTEXM025,0,'No')
		WHEN HTEXM025=1 THEN REPLACE(HTEXM025,1,'Yes')
		ELSE NULL
		END AS 'uniformfee_ethnic_minority_exemption',
	CASE 
		WHEN HTEXM035=0 THEN REPLACE(HTEXM035,0,'No')
		WHEN HTEXM035=1 THEN REPLACE(HTEXM035,1,'Yes')
		ELSE NULL
		END AS 'uniformfee_remote_area_exemption',
	CASE 
		WHEN HTEXM045=0 THEN REPLACE(HTEXM045,0,'No')
		WHEN HTEXM045=1 THEN REPLACE(HTEXM045,1,'Yes')
		ELSE NULL
		END AS 'uniformfee_excellence&poverty_exemption',
	CASE 
		WHEN HTEXM055=0 THEN REPLACE(HTEXM055,0,'No')
		WHEN HTEXM055=1 THEN REPLACE(HTEXM055,1,'Yes')
		ELSE NULL
		END AS 'uniformfee_disability_exemption',
	CASE 
		WHEN HTEXM065=0 THEN REPLACE(HTEXM065,0,'No')
		WHEN HTEXM065=1 THEN REPLACE(HTEXM065,1,'Yes')
		ELSE NULL
		END AS 'uniformfee_other_exemption',
	CASE 
		WHEN HTEXM005=0 THEN REPLACE(HTEXM005,0,'No')
		WHEN HTEXM005=1 THEN REPLACE(HTEXM016,1,'Yes')
		ELSE NULL
		END AS 'uniformfee_all_exemption',
CAST(HTAMPAID6 AS NUMERIC) AS 'grade10_schoolconstructionfee',
	CASE 
		WHEN HTEXM016=0 THEN REPLACE(HTEXM016,0,'No')
		WHEN HTEXM016=1 THEN REPLACE(HTEXM016,1,'Yes')
		ELSE NULL
		END AS 'schoolconstructionfee_poverty_exemption',
	CASE 
		WHEN HTEXM026=0 THEN REPLACE(HTEXM026,0,'No')
		WHEN HTEXM026=1 THEN REPLACE(HTEXM026,1,'Yes')
		ELSE NULL
		END AS 'schoolconstructionfee_ethnic_minority_exemption',
	CASE 
		WHEN HTEXM036=0 THEN REPLACE(HTEXM036,0,'No')
		WHEN HTEXM036=1 THEN REPLACE(HTEXM036,1,'Yes')
		ELSE NULL
		END AS 'schoolconstructionfee_remote_area_exemption',
	CASE 
		WHEN HTEXM046=0 THEN REPLACE(HTEXM046,0,'No')
		WHEN HTEXM046=1 THEN REPLACE(HTEXM046,1,'Yes')
		ELSE NULL
		END AS 'schoolconstructionfee_excellence&poverty_exemption',
	CASE 
		WHEN HTEXM056=0 THEN REPLACE(HTEXM056,0,'No')
		WHEN HTEXM056=1 THEN REPLACE(HTEXM056,1,'Yes')
		ELSE NULL
		END AS 'schoolconstructionfee_disability_exemption',
	CASE 
		WHEN HTEXM066=0 THEN REPLACE(HTEXM066,0,'No')
		WHEN HTEXM066=1 THEN REPLACE(HTEXM066,1,'Yes')
		ELSE NULL
		END AS 'schoolconstructionfee_other_exemption',
	CASE 
		WHEN HTEXM006=0 THEN REPLACE(HTEXM006,0,'No')
		WHEN HTEXM006=1 THEN REPLACE(HTEXM006,1,'Yes')
		ELSE NULL
		END AS 'schoolconstructionfee_all_exemption',
CAST(HTAMPAID7 AS NUMERIC) AS 'grade10_parentsfundfee',
	CASE 
		WHEN HTEXM017=0 THEN REPLACE(HTEXM017,0,'No')
		WHEN HTEXM017=1 THEN REPLACE(HTEXM017,1,'Yes')
		ELSE NULL
		END AS 'parentfundfee_poverty_exemption',
	CASE 
		WHEN HTEXM027=0 THEN REPLACE(HTEXM027,0,'No')
		WHEN HTEXM027=1 THEN REPLACE(HTEXM027,1,'Yes')
		ELSE NULL
		END AS 'parentfundfee_ethnic_minority_exemption',
	CASE 
		WHEN HTEXM037=0 THEN REPLACE(HTEXM037,0,'No')
		WHEN HTEXM037=1 THEN REPLACE(HTEXM037,1,'Yes')
		ELSE NULL
		END AS 'parentfundfee_remote_area_exemption',
	CASE 
		WHEN HTEXM047=0 THEN REPLACE(HTEXM047,0,'No')
		WHEN HTEXM047=1 THEN REPLACE(HTEXM047,1,'Yes')
		ELSE NULL
		END AS 'parentfundfee_excellence&poverty_exemption',
	CASE 
		WHEN HTEXM057=0 THEN REPLACE(HTEXM057,0,'No')
		WHEN HTEXM057=1 THEN REPLACE(HTEXM057,1,'Yes')
		ELSE NULL
		END AS 'parentfundfee_disability_exemption',
	CASE 
		WHEN HTEXM067=0 THEN REPLACE(HTEXM067,0,'No')
		WHEN HTEXM067=1 THEN REPLACE(HTEXM067,1,'Yes')
		ELSE NULL
		END AS 'parentfundfee_other_exemption',
	CASE 
		WHEN HTEXM007=0 THEN REPLACE(HTEXM007,0,'No')
		WHEN HTEXM007=1 THEN REPLACE(HTEXM007,1,'Yes')
		ELSE NULL
		END AS 'parentfundfee_all_exemption',
CAST(HTAMPAID8 AS NUMERIC) AS 'grade10_traituyenfee',
	CASE 
		WHEN HTEXM018=0 THEN REPLACE(HTEXM018,0,'No')
		WHEN HTEXM018=1 THEN REPLACE(HTEXM018,1,'Yes')
		ELSE NULL
		END AS 'traituyenfee_poverty_exemption',
	CASE 
		WHEN HTEXM028=0 THEN REPLACE(HTEXM028,0,'No')
		WHEN HTEXM028=1 THEN REPLACE(HTEXM028,1,'Yes')
		ELSE NULL
		END AS 'traituyenfee_ethnic_minority_exemption',
	CASE 
		WHEN HTEXM038=0 THEN REPLACE(HTEXM038,0,'No')
		WHEN HTEXM038=1 THEN REPLACE(HTEXM038,1,'Yes')
		ELSE NULL
		END AS 'traituyenfee_remote_area_exemption',
	CASE 
		WHEN HTEXM048=0 THEN REPLACE(HTEXM048,0,'No')
		WHEN HTEXM048=1 THEN REPLACE(HTEXM048,1,'Yes')
		ELSE NULL
		END AS 'traituyenfee_excellence&poverty_exemption',
	CASE 
		WHEN HTEXM058=0 THEN REPLACE(HTEXM058,0,'No')
		WHEN HTEXM058=1 THEN REPLACE(HTEXM058,1,'Yes')
		ELSE NULL
		END AS 'traituyenfee_disability_exemption',
	CASE 
		WHEN HTEXM068=0 THEN REPLACE(HTEXM068,0,'No')
		WHEN HTEXM068=1 THEN REPLACE(HTEXM068,1,'Yes')
		ELSE NULL
		END AS 'traituyenfee_other_exemption',
	CASE 
		WHEN HTEXM008=0 THEN REPLACE(HTEXM008,0,'No')
		WHEN HTEXM008=1 THEN REPLACE(HTEXM008,1,'Yes')
		ELSE NULL
		END AS 'traituyenfee_all_exemption',
CAST(HTAMPAID9 AS NUMERIC) AS 'grade10_healthinsurancefee',
	CASE 
		WHEN HTEXM019=0 THEN REPLACE(HTEXM019,0,'No')
		WHEN HTEXM019=1 THEN REPLACE(HTEXM019,1,'Yes')
		ELSE NULL
		END AS 'healthinsurancefee_poverty_exemption',
	CASE 
		WHEN HTEXM029=0 THEN REPLACE(HTEXM029,0,'No')
		WHEN HTEXM029=1 THEN REPLACE(HTEXM029,1,'Yes')
		ELSE NULL
		END AS 'healthinsurancefee_ethnic_minority_exemption',
	CASE 
		WHEN HTEXM039=0 THEN REPLACE(HTEXM039,0,'No')
		WHEN HTEXM039=1 THEN REPLACE(HTEXM039,1,'Yes')
		ELSE NULL
		END AS 'healthinsurancefee_remote_area_exemption',
	CASE 
		WHEN HTEXM049=0 THEN REPLACE(HTEXM049,0,'No')
		WHEN HTEXM049=1 THEN REPLACE(HTEXM049,1,'Yes')
		ELSE NULL
		END AS 'healthinsurancefee_excellence&poverty_exemption',
	CASE 
		WHEN HTEXM059=0 THEN REPLACE(HTEXM059,0,'No')
		WHEN HTEXM059=1 THEN REPLACE(HTEXM059,1,'Yes')
		ELSE NULL
		END AS 'healthinsurancefee_disability_exemption',
	CASE 
		WHEN HTEXM069=0 THEN REPLACE(HTEXM069,0,'No')
		WHEN HTEXM069=1 THEN REPLACE(HTEXM069,1,'Yes')
		ELSE NULL
		END AS 'healthinsurancefee_other_exemption',
	CASE 
		WHEN HTEXM009=0 THEN REPLACE(HTEXM009,0,'No')
		WHEN HTEXM009=1 THEN REPLACE(HTEXM009,1,'Yes')
		ELSE NULL
		END AS 'healthinsurancefee_all_exemption',
CAST(HTAMPAID10 AS NUMERIC) AS 'grade10_schoolsecurityfee',
	CASE 
		WHEN HTEXM0110=0 THEN REPLACE(HTEXM0110,0,'No')
		WHEN HTEXM0110=1 THEN REPLACE(HTEXM0110,1,'Yes')
		ELSE NULL
		END AS 'schoolsecurityfee_poverty_exemption',
	CASE 
		WHEN HTEXM0210=0 THEN REPLACE(HTEXM0210,0,'No')
		WHEN HTEXM0210=1 THEN REPLACE(HTEXM0210,1,'Yes')
		ELSE NULL
		END AS 'schoolsecurityfee_ethnic_minority_exemption',
	CASE 
		WHEN HTEXM0310=0 THEN REPLACE(HTEXM0310,0,'No')
		WHEN HTEXM0310=1 THEN REPLACE(HTEXM0310,1,'Yes')
		ELSE NULL
		END AS 'schoolsecurityfee_remote_area_exemption',
	CASE 
		WHEN HTEXM0410=0 THEN REPLACE(HTEXM0410,0,'No')
		WHEN HTEXM0410=1 THEN REPLACE(HTEXM0410,1,'Yes')
		ELSE NULL
		END AS 'schoolsecurityfee_excellence&poverty_exemption',
	CASE 
		WHEN HTEXM0510=0 THEN REPLACE(HTEXM0510,0,'No')
		WHEN HTEXM0510=1 THEN REPLACE(HTEXM0510,1,'Yes')
		ELSE NULL
		END AS 'schoolsecurityfee_disability_exemption',
	CASE 
		WHEN HTEXM0610=0 THEN REPLACE(HTEXM0610,0,'No')
		WHEN HTEXM0610=1 THEN REPLACE(HTEXM0610,1,'Yes')
		ELSE NULL
		END AS 'schoolsecurityfee_other_exemption',
	CASE 
		WHEN HTEXM0010=0 THEN REPLACE(HTEXM0010,0,'No')
		WHEN HTEXM0010=1 THEN REPLACE(HTEXM0010,1,'Yes')
		ELSE NULL
		END AS 'schoolsecurityfee_all_exemption',
CAST(HTAMPAID11 AS NUMERIC) AS 'grade10_examfee',
	CASE 
		WHEN HTEXM0111=0 THEN REPLACE(HTEXM0111,0,'No')
		WHEN HTEXM0111=1 THEN REPLACE(HTEXM0111,1,'Yes')
		ELSE NULL
		END AS 'examfee_poverty_exemption',
	CASE 
		WHEN HTEXM0211=0 THEN REPLACE(HTEXM0211,0,'No')
		WHEN HTEXM0211=1 THEN REPLACE(HTEXM0211,1,'Yes')
		ELSE NULL
		END AS 'examfee_ethnic_minority_exemption',
	CASE
		WHEN HTEXM0311=0 THEN REPLACE(HTEXM0311,0,'No')
		WHEN HTEXM0311=1 THEN REPLACE(HTEXM0311,1,'Yes')
		ELSE NULL
		END AS 'examfee_remote_area_exemption',
	CASE 
		WHEN HTEXM0411=0 THEN REPLACE(HTEXM0411,0,'No')
		WHEN HTEXM0411=1 THEN REPLACE(HTEXM0411,1,'Yes')
		ELSE NULL
		END AS 'examfee_excellence&poverty_exemption',
	CASE 
		WHEN HTEXM0511=0 THEN REPLACE(HTEXM0511,0,'No')
		WHEN HTEXM0511=1 THEN REPLACE(HTEXM0511,1,'Yes')
		ELSE NULL
		END AS 'examfee_disability_exemption',
	CASE 
		WHEN HTEXM0611=0 THEN REPLACE(HTEXM0611,0,'No')
		WHEN HTEXM0611=1 THEN REPLACE(HTEXM0611,1,'Yes')
		ELSE NULL
		END AS 'examfee_other_exemption',
	CASE 
		WHEN HTEXM0011=0 THEN REPLACE(HTEXM0011,0,'No')
		WHEN HTEXM0011=1 THEN REPLACE(HTEXM0011,1,'Yes')
		ELSE NULL
		END AS 'examfee_all_exemption',
CAST(HTAMPAID12 AS NUMERIC) AS 'grade10_extracurricularfee',
	CASE 
		WHEN HTEXM0112=0 THEN REPLACE(HTEXM0112,0,'No')
		WHEN HTEXM0112=1 THEN REPLACE(HTEXM0112,1,'Yes')
		ELSE NULL
		END AS 'extracurricularfee_poverty_exemption',
	CASE 
		WHEN HTEXM0212=0 THEN REPLACE(HTEXM0212,0,'No')
		WHEN HTEXM0212=1 THEN REPLACE(HTEXM0212,1,'Yes')
		ELSE NULL
		END AS 'extracurricularfee_ethnic_minority_exemption',
	CASE 
		WHEN HTEXM0312=0 THEN REPLACE(HTEXM0312,0,'No')
		WHEN HTEXM0312=1 THEN REPLACE(HTEXM0312,1,'Yes')
		ELSE NULL
		END AS 'extracurricularfee_remote_area_exemption',
	CASE 
		WHEN HTEXM0412=0 THEN REPLACE(HTEXM0412,0,'No')
		WHEN HTEXM0412=1 THEN REPLACE(HTEXM0412,1,'Yes')
		ELSE NULL
		END AS 'extracurricularfee_excellence&poverty_exemption',
	CASE 
		WHEN HTEXM0512=0 THEN REPLACE(HTEXM0512,0,'No')
		WHEN HTEXM0512=1 THEN REPLACE(HTEXM0512,1,'Yes')
		ELSE NULL
		END AS 'extracurricularfee_disability_exemption',
	CASE 
		WHEN HTEXM0612=0 THEN REPLACE(HTEXM0612,0,'No')
		WHEN HTEXM0612=1 THEN REPLACE(HTEXM0612,1,'Yes')
		ELSE NULL
		END AS 'extracurricularfee_other_exemption',
	CASE 
		WHEN HTEXM0012=0 THEN REPLACE(HTEXM0012,0,'No')
		WHEN HTEXM0012=1 THEN REPLACE(HTEXM0012,1,'Yes')
		ELSE NULL
		END AS 'extracurricularfee_all_exemption',
CAST(HTENGR10 AS NUMERIC) AS 'total_grade10_girls',
CAST(HTENBY10 AS NUMERIC) AS 'total_grade10_boys',
CAST(HTTLGR10 AS NUMERIC) AS 'attended_grade10_girls',
CAST(HTTLBY10 AS NUMERIC) AS 'attended_grade10_boys',
CAST(HTENGR11 AS NUMERIC) AS 'total_grade11_girls',
CAST(HTENBY11 AS NUMERIC) AS 'total_grade11_boys',
CAST(HTTLGR11 AS NUMERIC) AS 'attended_grade11_girls',
CAST(HTTLBY11 AS NUMERIC) AS 'attended_grade11_boys',
CAST(HTENGR12 AS NUMERIC) AS 'total_grade12_girls',
CAST(HTENBY12 AS NUMERIC) AS 'total_grade12_boys',
CAST(HTTLGR12 AS NUMERIC) AS 'attended_grade12_girls',
CAST(HTTLBY12 AS NUMERIC) AS 'attended_grade12_boys',
CAST(HTNMCL10 AS NUMERIC) AS 'grade10_classes',
CAST(HTNMCL11 AS NUMERIC) AS 'grade11_classes',
CAST(HTNMCL12 AS NUMERIC) AS 'grade12_classes',
	CASE 
		WHEN HTALLC10=0 THEN REPLACE(HTALLC10,0,'One class')
		WHEN HTALLC10=1 THEN REPLACE(HTALLC10,1,'Randomly')
		WHEN HTALLC10=2 THEN REPLACE(HTALLC10,2,'Alphabetically')
		WHEN HTALLC10=3 THEN REPLACE(HTALLC10,3,'Ability')
		WHEN HTALLC10=4 THEN REPLACE(HTALLC10,4,'Fee level')
		WHEN HTALLC10=5 THEN REPLACE(HTALLC10,5,'Subject choice')
		WHEN HTALLC10=6 THEN REPLACE(HTALLC10,6,'Other')
		WHEN HTALLC10=7 THEN REPLACE(HTALLC10,7,'Combination of methods')
		ELSE NULL
		END AS 'grade10_class_allocation',
	CASE 
		WHEN HTPRTEXP=1 THEN REPLACE(HTPRTEXP,1,'Constant')
		WHEN HTPRTEXP=2 THEN REPLACE(HTPRTEXP,2,'Minority')
		WHEN HTPRTEXP=3 THEN REPLACE(HTPRTEXP,3,'None')
		ELSE NULL
		END 'parental_pressure',
	CASE 
		WHEN HTDEVPLN=0 THEN REPLACE(HTDEVPLN,0,'No')
		WHEN HTDEVPLN=1 THEN REPLACE(HTDEVPLN,1,'Yes')
		ELSE NULL
		END AS 'development_plan',
	CASE 
		WHEN HTPTA=0 THEN REPLACE(HTPTA,0,'No')
		WHEN HTPTA=1 THEN REPLACE(HTPTA,1,'Yes')
		ELSE NULL
		END AS 'parent_teacher_association',
	CASE 
		WHEN HTPTAMT=0 THEN REPLACE(HTPTAMT,0,'No association')
		WHEN HTPTAMT=1 THEN REPLACE(HTPTAMT,1,'Weekly')
		WHEN HTPTAMT=2 THEN REPLACE(HTPTAMT,2,'Fortnightly')
		WHEN HTPTAMT=3 THEN REPLACE(HTPTAMT,3,'Monthly')
		WHEN HTPTAMT=4 THEN REPLACE(HTPTAMT,4,'Every 2-3 months')
		WHEN HTPTAMT=5 THEN REPLACE(HTPTAMT,5,'Every 4-6 months')
		WHEN HTPTAMT=6 THEN REPLACE(HTPTAMT,6,'Every 7-12 months')
		WHEN HTPTAMT=7 THEN REPLACE(HTPTAMT,7,'Less than once per year')
		ELSE NULL
		END AS 'pta_meet',
	CASE 
		WHEN HTEDOVS=1 THEN REPLACE(HTEDOVS,1,'Never')
		WHEN HTEDOVS=2 THEN REPLACE(HTEDOVS,2,'Occasionally')
		WHEN HTEDOVS=3 THEN REPLACE(HTEDOVS,3,'Often')
		ELSE NULL
		END AS 'inspector_visit',
	CASE 
		WHEN HTSTDDRP=1 THEN REPLACE(HTSTDDRP,1,'Never')
		WHEN HTSTDDRP=2 THEN REPLACE(HTSTDDRP,2,'Occasionally')
		WHEN HTSTDDRP=3 THEN REPLACE(HTSTDDRP,3,'Often')
		ELSE NULL
		END AS 'student_dropout',
	CASE 
		WHEN HTCHDLBR=1 THEN REPLACE(HTCHDLBR,1,'Never')
		WHEN HTCHDLBR=2 THEN REPLACE(HTCHDLBR,2,'Occasionally')
		WHEN HTCHDLBR=3 THEN REPLACE(HTCHDLBR,3,'Often')
		ELSE NULL
		END AS 'child_labour',
	CASE 
		WHEN HTFLSINF=1 THEN REPLACE(HTFLSINF,1,'Never')
		WHEN HTFLSINF=2 THEN REPLACE(HTFLSINF,2,'Occasionally')
		WHEN HTFLSINF=3 THEN REPLACE(HTFLSINF,3,'Often')
		ELSE NULL
		END AS 'failing_school_infrastructure',
	CASE 
		WHEN HTTCHRET=1 THEN REPLACE(HTTCHRET,1,'Never')
		WHEN HTTCHRET=2 THEN REPLACE(HTTCHRET,2,'Occasionally')
		WHEN HTTCHRET=3 THEN REPLACE(HTTCHRET,3,'Often')
		ELSE NULL
		END AS 'teacher_recruitment&retention',
	CASE 
		WHEN HTRCHATT=1 THEN REPLACE(HTRCHATT,1,'Never')
		WHEN HTRCHATT=2 THEN REPLACE(HTRCHATT,2,'Occasionally')
		WHEN HTRCHATT=3 THEN REPLACE(HTRCHATT,3,'Often')
		ELSE NULL
		END AS 'teacher_attendance',
	CASE 
		WHEN HTENVEVT=1 THEN REPLACE(HTENVEVT,1,'Never')
		WHEN HTENVEVT=2 THEN REPLACE(HTENVEVT,2,'Occasionally')
		WHEN HTENVEVT=3 THEN REPLACE(HTENVEVT,3,'Often')
		ELSE NULL
		END AS 'external_environmental_event',
CAST(HTSTDENR AS NUMERIC) AS 'grade12_enrolled_15_16',
CAST(HTTOKEXM AS NUMERIC) AS 'took_graduation_exam_15_16',
CAST(HTLSPSEXM AS NUMERIC) AS 'passed_graduation_exam_15_16',
CAST(HTPRCUNI AS NUMERIC) AS 'percentage_access_university_15_16',
CAST(HTPRCVOC AS NUMERIC) AS 'percentage_access_vocationalcollege_15_16',
	CASE 
		WHEN HTCNTLRN=0 THEN REPLACE(HTCNTLRN,0,'No')
		WHEN HTCNTLRN=1 THEN REPLACE(HTCNTLRN,1,'Yes')
		ELSE NULL
		END AS 'continuous_learning_centre'
INTO school_survey.vietnam.school
FROM school_survey.dbo.vietnam_both_waves
END TRY
BEGIN CATCH
        SELECT  
            ERROR_NUMBER() AS ErrorNumber  
            ,ERROR_SEVERITY() AS ErrorSeverity  
            ,ERROR_STATE() AS ErrorState  
            ,ERROR_PROCEDURE() AS ErrorProcedure  
            ,ERROR_LINE() AS ErrorLine  
            ,ERROR_MESSAGE() AS ErrorMessage;  
    END CATCH
END;

	
	
--english teacher table	
BEGIN
BEGIN TRY
SELECT
ENG_TCHID AS 'id',
SCHOOLID AS 'school_id',
CLASSID AS 'class_id',
ENG_TCHSUBJ AS 'subject',
ENG_TCHDTJN AS 'date_start_teach_grade10',
CAST(ENG_TCHDYPRS AS NUMERIC) AS 'total_days_present',
CAST(ENG_TCDAYPRS AS NUMERIC) AS 'total_days_absent',
CAST(ENG_TCAGE AS NUMERIC) AS 'age',
	CASE 
		WHEN ENG_TCGNDR=1 THEN REPLACE(ENG_TCGNDR,1, 'Male')
		WHEN ENG_TCGNDR=2 THEN REPLACE(ENG_TCGNDR,2,'Female')
		ELSE NULL
		END AS 'gender',
	CASE 
		WHEN ENG_TCETHNC=1 THEN REPLACE (ENG_TCETHNC,1,'Kinh')
		WHEN ENG_TCETHNC=2 THEN REPLACE (ENG_TCETHNC,2,'Hmong')
		WHEN ENG_TCETHNC=3 THEN REPLACE(ENG_TCETHNC,3,'Cham-Hroi')
		WHEN ENG_TCETHNC=4 THEN REPLACE(ENG_TCETHNC,4,'Ede')
		WHEN ENG_TCETHNC=5 THEN REPLACE(ENG_TCETHNC,5,'Nung')
		WHEN ENG_TCETHNC=6 THEN REPLACE(ENG_TCETHNC,6,'Tay')
		WHEN ENG_TCETHNC=7 THEN REPLACE(ENG_TCETHNC,7,'Dao')
		WHEN ENG_TCETHNC=8 THEN REPLACE(ENG_TCETHNC,8,'Giay')
		WHEN ENG_TCETHNC=9 THEN REPLACE(ENG_TCETHNC,9,'Chinese')
		WHEN ENG_TCETHNC=10 THEN REPLACE(ENG_TCETHNC,10,'Ba Na')
		WHEN ENG_TCETHNC=11 THEN REPLACE(ENG_TCETHNC,11,'Other')
		ELSE NULL
		END AS 'ethnicity',
	CASE 
		WHEN ENG_TCRELGN=0 THEN REPLACE(ENG_TCRELGN,0,'None')
		WHEN ENG_TCRELGN=1 THEN REPLACE(ENG_TCRELGN,1,'Buddhist')
		WHEN ENG_TCRELGN=2 THEN REPLACE(ENG_TCRELGN,2,'Christian (Catholic)')
		WHEN ENG_TCRELGN=3 THEN REPLACE(ENG_TCRELGN,3,'Christian (Protestant)')
		WHEN ENG_TCRELGN=4 THEN REPLACE(ENG_TCRELGN,4,'Cao Dai')
		WHEN ENG_TCRELGN=5 THEN REPLACE(ENG_TCRELGN,5,'Other')
		ELSE NULL
		END AS 'religion',
	CASE 
		WHEN ENG_TCLNGHME=1 THEN REPLACE(ENG_TCLNGHME,1,'Vietnamese')
		WHEN ENG_TCLNGHME=2 THEN REPLACE(ENG_TCLNGHME,2,'Hmong')
		WHEN ENG_TCLNGHME=3 THEN REPLACE(ENG_TCLNGHME,3,'Cham-Hroi')
		WHEN ENG_TCLNGHME=4 THEN REPLACE(ENG_TCLNGHME,4,'Ede')
		WHEN ENG_TCLNGHME=5 THEN REPLACE(ENG_TCLNGHME,5,'Nung')
		WHEN ENG_TCLNGHME=6 THEN REPLACE(ENG_TCLNGHME,6,'Tay')
		WHEN ENG_TCLNGHME=7 THEN REPLACE(ENG_TCLNGHME,7,'Dao')
		WHEN ENG_TCLNGHME=8 THEN REPLACE(ENG_TCLNGHME,8,'Giay')
		WHEN ENG_TCLNGHME=9 THEN REPLACE(ENG_TCLNGHME,9,'Chinese')
		WHEN ENG_TCLNGHME=10 THEN REPLACE(ENG_TCLNGHME,10,'Ba Na')
		WHEN ENG_TCLNGHME=11 THEN REPLACE(ENG_TCLNGHME,11,'Other')
		ELSE NULL
		END AS 'first_language',
	CASE 
		WHEN ENG_TCPRVTCH=0 THEN REPLACE(ENG_TCPRVTCH,0,'No')
		WHEN ENG_TCPRVTCH=1 THEN REPLACE(ENG_TCPRVTCH,1,'Yes')
		ELSE NULL
		END AS 'from_teaching_province',
	CASE 
		WHEN ENG_TCMBLE=0 THEN REPLACE(ENG_TCMBLE,0,'No')
		WHEN ENG_TCMBLE=1 THEN REPLACE(ENG_TCMBLE,1,'Yes')
		ELSE NULL
		END AS 'have_mobile_telephone',
	CASE 
		WHEN ENG_TCRADIO=0 THEN REPLACE(ENG_TCRADIO,0,'No')
		WHEN ENG_TCRADIO=1 THEN REPLACE(ENG_TCRADIO,1,'Yes')
		ELSE NULL
		END AS 'have_radio',
	CASE 
		WHEN ENG_TCTELE= 0 THEN REPLACE(ENG_TCTELE,0,'No')
		WHEN ENG_TCTELE=1 THEN REPLACE(ENG_TCTELE,1,'Yes')
		ELSE NULL
		END AS 'have_television',
	CASE 
		WHEN ENG_TCBIKE=0 THEN REPLACE(ENG_TCBIKE,0,'No')
		WHEN ENG_TCBIKE=1 THEN REPLACE(ENG_TCBIKE,1,'Yes')
		ELSE NULL
		END AS 'have_bicycle',
	CASE 
		WHEN ENG_TCSCTR=0 THEN REPLACE(ENG_TCSCTR,0,'No')
		WHEN ENG_TCSCTR=1 THEN REPLACE(ENG_TCSCTR,1,'Yes')
		ELSE NULL
		END AS 'have_motorcycle',
	CASE 
		WHEN ENG_TCTBLE=0 THEN REPLACE(ENG_TCTBLE,0,'No')
		WHEN ENG_TCTBLE=1 THEN REPLACE(ENG_TCTBLE,1,'Yes')
		ELSE NULL
		END AS 'have_desk',
	CASE 
		WHEN ENG_TCCHAIR=0 THEN REPLACE(ENG_TCCHAIR,0,'No')
		WHEN ENG_TCCHAIR=1 THEN REPLACE(ENG_TCCHAIR,1,'Yes')
		ELSE NULL
		END AS 'have_chair',
	CASE 
		WHEN ENG_TCLAMP=0 THEN REPLACE(ENG_TCLAMP,0,'No')
		WHEN ENG_TCLAMP=1 THEN REPLACE(ENG_TCLAMP,1,'Yes')
		ELSE NULL
		END AS 'have_lamp',
	CASE 
		WHEN ENG_TCELEC=0 THEN REPLACE(ENG_TCELEC,0,'No')
		WHEN ENG_TCELEC=1 THEN REPLACE(ENG_TCELEC,1,'Yes')
		ELSE NULL
		END AS 'have_electric_fan',
	CASE 
		WHEN ENG_TCAIRCND=0 THEN REPLACE(ENG_TCAIRCND,0,'No')
		WHEN ENG_TCAIRCND=1 THEN REPLACE(ENG_TCAIRCND,1,'Yes')
		ELSE NULL
		END AS 'have_aircon',
	CASE 
		WHEN ENG_TCCAR=0 THEN REPLACE(ENG_TCCAR,0,'No')
		WHEN ENG_TCCAR=1 THEN REPLACE(ENG_TCCAR,1,'Yes')
		ELSE NULL
		END AS 'have_car',
	CASE 
		WHEN ENG_TCCOMP=0 THEN REPLACE(ENG_TCCOMP,0,'No')
		WHEN ENG_TCCOMP=1 THEN REPLACE(ENG_TCCOMP,1,'Yes')
		ELSE NULL
		END AS 'have_computer',
	CASE 
		WHEN ENG_TCINTRT=0 THEN REPLACE(ENG_TCINTRT,0,'No')
		WHEN ENG_TCINTRT=1 THEN REPLACE(ENG_TCINTRT,1,'Yes')
		ELSE NULL
		END AS 'have_internet',
	CASE 
		WHEN ENG_TCFRDG=0 THEN REPLACE(ENG_TCFRDG,0,'No')
		WHEN ENG_TCFRDG=1 THEN REPLACE(ENG_TCFRDG,1,'Yes')
		ELSE NULL
		END AS 'have_fridge',
	CASE 
		WHEN ENG_TCMICRO=0 THEN REPLACE(ENG_TCMICRO,0,'No')
		WHEN ENG_TCMICRO=1 THEN REPLACE(ENG_TCMICRO,1,'Yes')
		ELSE NULL
		END AS 'have_microwave',
	CASE 
		WHEN ENG_TCDVD=0 THEN REPLACE(ENG_TCDVD,0,'No')
		WHEN ENG_TCDVD=1 THEN REPLACE(ENG_TCDVD,1,'Yes')
		ELSE NULL
		END AS 'have_dvd_player',
	CASE 
		WHEN ENG_TCTVBOX=0 THEN REPLACE(ENG_TCTVBOX,0,'No')
		WHEN ENG_TCTVBOX=1 THEN REPLACE(ENG_TCTVBOX,1,'Yes')
		ELSE NULL
		END AS 'have_cable_tv_box',
	CASE 
		WHEN ENG_TCLVLEDC=1 THEN REPLACE(ENG_TCLVLEDC,1,'Upper secondary')
		WHEN ENG_TCLVLEDC=2 THEN REPLACE(ENG_TCLVLEDC,2,'Vocational training')
		WHEN ENG_TCLVLEDC=3 THEN REPLACE(ENG_TCLVLEDC,3,'College')
		WHEN ENG_TCLVLEDC=4 THEN REPLACE(ENG_TCLVLEDC,4,'University (undergraduate)')
		WHEN ENG_TCLVLEDC=5 THEN REPLACE(ENG_TCLVLEDC,5,'University (postgraduate)')
		ELSE NULL
		END AS 'education_level',
	CASE 
		WHEN ENG_TCTCHQLF=0 THEN REPLACE(ENG_TCTCHQLF,0,'None')
		WHEN ENG_TCTCHQLF=1 THEN REPLACE(ENG_TCTCHQLF,1,'Short course')
		WHEN ENG_TCTCHQLF=2 THEN REPLACE(ENG_TCTCHQLF,2,'Teacher training level')
		WHEN ENG_TCTCHQLF=3 THEN REPLACE(ENG_TCTCHQLF,3,'Teacher training college')
		WHEN ENG_TCTCHQLF=4 THEN REPLACE(ENG_TCTCHQLF,4,'Teacher training university')
		ELSE NULL
		END AS 'teaching_training_qualification',
	CASE 
		WHEN ENG_TCSPCMAT=0 THEN REPLACE(ENG_TCSPCMAT,0,'No')
		WHEN ENG_TCSPCMAT=1 THEN REPLACE(ENG_TCSPCMAT,1,'Yes')
		ELSE NULL
		END AS 'specialise_maths',
	CASE 
		WHEN ENG_TCSPCENG=0 THEN REPLACE(ENG_TCSPCENG,0,'No')
		WHEN ENG_TCSPCENG=1 THEN REPLACE(ENG_TCSPCENG,1,'Yes')
		ELSE NULL
		END AS 'specialise_english',
	CASE 
		WHEN ENG_TCSPCVNM=0 THEN REPLACE(ENG_TCSPCVNM,0,'No')
		WHEN ENG_TCSPCVNM=1 THEN REPLACE(ENG_TCSPCVNM,1,'Yes')
		ELSE NULL
		END AS 'specialise_vietnamese',
	CASE 
		WHEN ENG_TCSPCLNG=0 THEN REPLACE(ENG_TCSPCLNG,0,'No')
		WHEN ENG_TCSPCLNG=1 THEN REPLACE(ENG_TCSPCLNG,1,'Yes')
		ELSE NULL
		END AS 'specialise_otherlanguage',
	CASE 
		WHEN ENG_TCSPCPSC=0 THEN REPLACE(ENG_TCSPCPSC,0,'No')
		WHEN ENG_TCSPCPSC=1 THEN REPLACE(ENG_TCSPCPSC,1,'Yes')
		ELSE NULL
		END AS 'specialise_physics',
	CASE 
		WHEN ENG_TCSPCCHE=0 THEN REPLACE(ENG_TCSPCCHE,0,'No')
		WHEN ENG_TCSPCCHE=1 THEN REPLACE(ENG_TCSPCCHE,1,'Yes')
		ELSE NULL
		END AS 'specialise_chemistry',
	CASE 
		WHEN ENG_TCSPCBIO=0 THEN REPLACE(ENG_TCSPCBIO,0,'No')
		WHEN ENG_TCSPCBIO=1 THEN REPLACE(ENG_TCSPCBIO,1,'Yes')
		ELSE NULL
		END AS 'specialise_biology',
	CASE 
		WHEN ENG_TCSPCHIS=0 THEN REPLACE(ENG_TCSPCHIS,0,'No')
		WHEN ENG_TCSPCHIS=1 THEN REPLACE(ENG_TCSPCHIS,1,'Yes')
		ELSE NULL
		END AS 'specialise_history',
	CASE 
		WHEN ENG_TCSPCGEO=0 THEN REPLACE(ENG_TCSPCGEO,0,'No')
		WHEN ENG_TCSPCGEO=1 THEN REPLACE(ENG_TCSPCGEO,1,'Yes')
		ELSE NULL
		END AS 'specialise_geography',
	CASE 
		WHEN ENG_TCSPCPHY=0 THEN REPLACE(ENG_TCSPCPHY,0,'No')
		WHEN ENG_TCSPCPHY=1 THEN REPLACE(ENG_TCSPCPHY,1,'Yes')
		ELSE NULL
		END AS 'specialise_physical_education',
	CASE 
		WHEN ENG_TCSPCANT=0 THEN REPLACE(ENG_TCSPCANT,0,'No')
		WHEN ENG_TCSPCANT=1 THEN REPLACE(ENG_TCSPCANT,1,'Yes')
		ELSE NULL
		END AS 'specialise_other_subject',
CAST(ENG_TCDYSTRN AS NUMERIC) AS 'days_training',
	CASE 
		WHEN ENG_TCTTRNHLP=0 THEN REPLACE(ENG_TCTTRNHLP,0,'Not applicable')
		WHEN ENG_TCTTRNHLP=1 THEN REPLACE(ENG_TCTTRNHLP,1,'A lot')
		WHEN ENG_TCTTRNHLP=2 THEN REPLACE(ENG_TCTTRNHLP,2,'A little')
		WHEN ENG_TCTTRNHLP=3 THEN REPLACE(ENG_TCTTRNHLP,3,'Did not')
		ELSE NULL
		END AS 'training_improved_teaching',
	CASE 
		WHEN ENG_TCAWDTTL=0 THEN REPLACE(ENG_TCAWDTTL,0,'Never')
		WHEN ENG_TCAWDTTL=1 THEN REPLACE(ENG_TCAWDTTL,1,'School')
		WHEN ENG_TCAWDTTL=2 THEN REPLACE(ENG_TCAWDTTL,2,'District')
		WHEN ENG_TCAWDTTL=3 THEN REPLACE(ENG_TCAWDTTL,3,'Province or higher')
		ELSE NULL
		END AS 'excellent_teacher_award',
CAST(ENG_TCYRTCH AS NUMERIC) AS 'years_as_teacher',
CAST(ENG_TCYRTCSCH AS NUMERIC) AS 'years_in_current_school',
	CASE 
		WHEN ENG_TCSTDENG=0 THEN REPLACE(ENG_TCSTDENG,0,'Never')
		WHEN ENG_TCSTDENG=1 THEN REPLACE(ENG_TCSTDENG,1,'<1')
		WHEN ENG_TCSTDENG=2 THEN REPLACE(ENG_TCSTDENG,2,'1-2')
		WHEN ENG_TCSTDENG=3 THEN REPLACE(ENG_TCSTDENG,3,'3-5')
		WHEN ENG_TCSTDENG=4 THEN REPLACE(ENG_TCSTDENG,4,'6-10')
		WHEN ENG_TCSTDENG=5 THEN REPLACE(ENG_TCSTDENG,5,'>10')
		ELSE NULL
		END AS 'years_studied_english',
	CASE 
		WHEN ENG_TCEMPBAS=1 THEN REPLACE(ENG_TCEMPBAS,1,'Permanent')
		WHEN ENG_TCEMPBAS=2 THEN REPLACE(ENG_TCEMPBAS,2,'Temporary')
		ELSE NULL
		END AS 'employment_term',
	CASE 
		WHEN ENG_TCFGRDE10=0 THEN REPLACE(ENG_TCFGRDE10,0,'No')
		WHEN ENG_TCFGRDE10=1 THEN REPLACE(ENG_TCFGRDE10,1,'Yes')
		ELSE NULL
		END AS 'teach_grade10',
	CASE 
		WHEN ENG_TCFGRDE11=0 THEN REPLACE(ENG_TCFGRDE11,0,'No')
		WHEN ENG_TCFGRDE11=1 THEN REPLACE(ENG_TCFGRDE11,1,'Yes')
		ELSE NULL
		END AS 'teach_grade11',
	CASE 
		WHEN ENG_TCFGRDE12=0 THEN REPLACE(ENG_TCFGRDE12,0,'No')
		WHEN ENG_TCFGRDE12=1 THEN REPLACE(ENG_TCFGRDE12,1,'Yes')
		ELSE NULL
		END AS 'teach_grade12',
	CASE 
		WHEN ENG_TCMATHS=0 THEN REPLACE(ENG_TCMATHS,0,'No')
		WHEN ENG_TCMATHS=1 THEN REPLACE(ENG_TCMATHS,1,'Yes')
		ELSE NULL
		END AS 'regularly_teach_maths',
	CASE 
		WHEN ENG_TCENGL=0 THEN REPLACE(ENG_TCENGL,0,'No')
		WHEN ENG_TCENGL=1 THEN REPLACE(ENG_TCENGL,1,'Yes')
		ELSE NULL
		END AS 'regularly_teach_english',
	CASE 
		WHEN ENG_TCVNM=0 THEN REPLACE(ENG_TCVNM,0,'No')
		WHEN ENG_TCVNM=1 THEN REPLACE(ENG_TCVNM,1,'Yes')
		ELSE NULL
		END AS 'regularly_teach_vietnamese',
	CASE 
		WHEN ENG_TCANTLNG=0 THEN REPLACE(ENG_TCANTLNG,0,'No')
		WHEN ENG_TCANTLNG=1 THEN REPLACE(ENG_TCANTLNG,1,'Yes')
		ELSE NULL
		END AS 'regularly_teach_otherlang',
	CASE 
		WHEN ENG_TCPHYSC=0 THEN REPLACE(ENG_TCPHYSC,0,'No')
		WHEN ENG_TCPHYSC=1 THEN REPLACE(ENG_TCPHYSC,1,'Yes')
		ELSE NULL
		END AS 'regularly_teach_physics',
	CASE 
		WHEN ENG_TCCHEM=0 THEN REPLACE(ENG_TCCHEM,0,'No')
		WHEN ENG_TCCHEM=1 THEN REPLACE(ENG_TCCHEM,1,'Yes')
		ELSE NULL
		END AS 'regularly_teach_chemistry',
	CASE 
		WHEN ENG_TCBIOLG=0 THEN REPLACE(ENG_TCBIOLG,0,'No')
		WHEN ENG_TCBIOLG=1 THEN REPLACE(ENG_TCBIOLG,1,'Yes')
		ELSE NULL
		END AS 'regularly_teach_biology',
	CASE 
		WHEN ENG_TCHISTRY=0 THEN REPLACE(ENG_TCHISTRY,0,'No')
		WHEN ENG_TCHISTRY=1 THEN REPLACE(ENG_TCHISTRY,1,'Yes')
		ELSE NULL
		END AS 'regularly_teach_history',
	CASE 
		WHEN ENG_TCGEOG=0 THEN REPLACE(ENG_TCGEOG,0,'No')
		WHEN ENG_TCGEOG=1 THEN REPLACE(ENG_TCGEOG,1,'Yes')
		ELSE NULL
		END AS 'regularly_teach_geography',
	CASE 
		WHEN ENG_TCPHYS=0 THEN REPLACE(ENG_TCPHYS,0,'No')
		WHEN ENG_TCPHYS=1 THEN REPLACE(ENG_TCPHYS,1,'Yes')
		ELSE NULL
		END AS 'regularly_teach_physical_education',
	CASE 
		WHEN ENG_TCOTHR=0 THEN REPLACE(ENG_TCOTHR,0,'No')
		WHEN ENG_TCOTHR=1 THEN REPLACE(ENG_TCOTHR,1,'Yes')
		ELSE NULL
		END AS 'regularly_teach_other',
CAST(ENG_TCPRDWK AS NUMERIC) AS 'periods_teach_perweek',
CAST(ENG_TCEXTCLS AS NUMERIC) AS 'noncomp_periods_perweek',
	CASE 
		WHEN ENG_TCTCHG10=0 THEN REPLACE(ENG_TCTCHG10,0,'No')
		WHEN ENG_TCTCHG10=1 THEN REPLACE(ENG_TCTCHG10,1,'Yes')
		ELSE NULL
		END AS 'class_teacher_grade10',
	CASE 
		WHEN ENG_TCEXTWRK=0 THEN REPLACE(ENG_TCEXTWRK,0,'No')
		WHEN ENG_TCEXTWRK=1 THEN REPLACE(ENG_TCEXTWRK,1,'Yes')
		ELSE NULL
		END AS 'extra_work_outside_school',
	CASE 
		WHEN ENG_TCOBSHT=0 THEN REPLACE(ENG_TCOBSHT,0,'Never')
		WHEN ENG_TCOBSHT=1 THEN REPLACE(ENG_TCOBSHT,1,'Once per year')
		WHEN ENG_TCOBSHT=2 THEN REPLACE(ENG_TCOBSHT,2,'Twice per year')
		WHEN ENG_TCOBSHT=3 THEN REPLACE(ENG_TCOBSHT,3,'Monthly')
		WHEN ENG_TCOBSHT=4 THEN REPLACE(ENG_TCOBSHT,4,'More than monthly')
		ELSE NULL
		END AS 'times_observed_principal',
	CASE 
		WHEN ENG_TCOBSVP=0 THEN REPLACE(ENG_TCOBSVP,0,'Never')
		WHEN ENG_TCOBSVP=1 THEN REPLACE(ENG_TCOBSVP,1,'Once per year')
		WHEN ENG_TCOBSVP=2 THEN REPLACE(ENG_TCOBSVP,2,'Twice per year')
		WHEN ENG_TCOBSVP=3 THEN REPLACE(ENG_TCOBSVP,3,'Monthly')
		WHEN ENG_TCOBSVP=4 THEN REPLACE(ENG_TCOBSVP,4,'More than monthly')
		ELSE NULL
		END AS 'times_observed_viceprincipal',
	CASE 
		WHEN ENG_TCOBSHSD=0 THEN REPLACE(ENG_TCOBSHSD,0,'Never')
		WHEN ENG_TCOBSHSD=1 THEN REPLACE(ENG_TCOBSHSD,1,'Once per year')
		WHEN ENG_TCOBSHSD=2 THEN REPLACE(ENG_TCOBSHSD,2,'Twice per year')
		WHEN ENG_TCOBSHSD=3 THEN REPLACE(ENG_TCOBSHSD,3,'Monthly')
		WHEN ENG_TCOBSHSD=4 THEN REPLACE(ENG_TCOBSHSD,4,'More than monthly')
		ELSE NULL
		END AS 'times_observed_subjecthead',
	CASE 
		WHEN ENG_TCOBSOTH=0 THEN REPLACE(ENG_TCOBSOTH,0,'Never')
		WHEN ENG_TCOBSOTH=1 THEN REPLACE(ENG_TCOBSOTH,1,'Once per year')
		WHEN ENG_TCOBSOTH=2 THEN REPLACE(ENG_TCOBSOTH,2,'Twice per year')
		WHEN ENG_TCOBSOTH=3 THEN REPLACE(ENG_TCOBSOTH,3,'Monthly')
		WHEN ENG_TCOBSOTH=4 THEN REPLACE(ENG_TCOBSOTH,4,'More than monthly')
		ELSE NULL
		END AS 'times_observed_otherteacher',
	CASE 
		WHEN ENG_TCOBSDOET=0 THEN REPLACE(ENG_TCOBSDOET,0,'Never')
		WHEN ENG_TCOBSDOET=1 THEN REPLACE(ENG_TCOBSDOET,1,'Once per year')
		WHEN ENG_TCOBSDOET=2 THEN REPLACE(ENG_TCOBSDOET,2,'Twice per year')
		WHEN ENG_TCOBSDOET=3 THEN REPLACE(ENG_TCOBSDOET,3,'Monthly')
		WHEN ENG_TCOBSDOET=4 THEN REPLACE(ENG_TCOBSDOET,4,'More than monthly')
		ELSE NULL
		END AS 'times_observed_doet',
	CASE 
		WHEN ENG_TCPRATD=0 THEN REPLACE(ENG_TCPRATD,0,'Not')
		WHEN ENG_TCPRATD=1 THEN REPLACE(ENG_TCPRATD,1,'Minor')
		WHEN ENG_TCPRATD=2 THEN REPLACE(ENG_TCPRATD,2,'Major')
		ELSE NULL
		END AS 'grade10problem_poorattendence',
	CASE 
		WHEN ENG_TCLATENS=0 THEN REPLACE(ENG_TCLATENS,0,'Not')
		WHEN ENG_TCLATENS=1 THEN REPLACE(ENG_TCLATENS,1,'Minor')
		WHEN ENG_TCLATENS=2 THEN REPLACE(ENG_TCLATENS,2,'Major')
		ELSE NULL
		END AS 'grade10problems_lateness',
	CASE 
		WHEN ENG_TCDISCPL=0 THEN REPLACE(ENG_TCDISCPL,0,'Not')
		WHEN ENG_TCDISCPL=1 THEN REPLACE(ENG_TCDISCPL,1,'Minor')
		WHEN ENG_TCDISCPL=2 THEN REPLACE(ENG_TCDISCPL,2,'Major')
		ELSE NULL
		END AS 'grade10problems_disciplineissues',
	CASE 
		WHEN ENG_TCNOMAT=0 THEN REPLACE(ENG_TCNOMAT,0,'Not')
		WHEN ENG_TCNOMAT=1 THEN REPLACE(ENG_TCNOMAT,1,'Minor')
		WHEN ENG_TCNOMAT=2 THEN REPLACE(ENG_TCNOMAT,2,'Major')
		ELSE NULL
		END AS 'grade10problems_studentlackequipment',
	CASE 
		WHEN ENG_TCLACKRS=0 THEN REPLACE(ENG_TCLACKRS,0,'Not')
		WHEN ENG_TCLACKRS=1 THEN REPLACE(ENG_TCLACKRS,1,'Minor')
		WHEN ENG_TCLACKRS=2 THEN REPLACE(ENG_TCLACKRS,2,'Major')
		ELSE NULL
		END AS 'grade10problems_lackresources',
	CASE 
		WHEN ENG_TCINTRRP=0 THEN REPLACE(ENG_TCINTRRP,0,'Not')
		WHEN ENG_TCINTRRP=1 THEN REPLACE(ENG_TCINTRRP,1,'Minor')
		WHEN ENG_TCINTRRP=2 THEN REPLACE(ENG_TCINTRRP,2,'Major')
		ELSE NULL
		END AS 'grade10problems_interruptions',
	CASE 
		WHEN ENG_TCRSNABS=1 THEN REPLACE(ENG_TCRSNABS,1,'Annual leave')
		WHEN ENG_TCRSNABS=2 THEN REPLACE(ENG_TCRSNABS,2,'Illness')
		WHEN ENG_TCRSNABS=3 THEN REPLACE(ENG_TCRSNABS,3,'Training')
		WHEN ENG_TCRSNABS=4 THEN REPLACE(ENG_TCRSNABS,4,'Official duties')
		WHEN ENG_TCRSNABS=5 THEN REPLACE(ENG_TCRSNABS,5,'Travel difficulties')
		WHEN ENG_TCRSNABS=6 THEN REPLACE(ENG_TCRSNABS,6,'Other')
		ELSE NULL
		END AS 'absense_reason',
	 CASE 
		WHEN ENG_TCASGNSC=1 THEN REPLACE(ENG_TCASGNSC,1,'Requested')
		WHEN ENG_TCASGNSC=2 THEN REPLACE(ENG_TCASGNSC,2,'Assigned')
		WHEN ENG_TCASGNSC=3 THEN REPLACE(ENG_TCASGNSC,3,'Applied')
		ELSE NULL
		END AS 'how_assigned',
	CASE 
		WHEN ENG_TCPRTCNT=0 THEN REPLACE(ENG_TCPRTCNT,0,'None')
		WHEN ENG_TCPRTCNT=1 THEN REPLACE(ENG_TCPRTCNT,1,'Few')
		WHEN ENG_TCPRTCNT=2 THEN REPLACE(ENG_TCPRTCNT,2,'Most')
		WHEN ENG_TCPRTCNT=3 THEN REPLACE(ENG_TCPRTCNT,3,'All')
		ELSE NULL
		END AS 'parent_contact',
CAST(ENG_TCTRVMIN AS NUMERIC) AS 'commute_mins',
CAST(ENG_TCPRDTCH AS NUMERIC) AS 'periods_teaching_daily',
CAST(ENG_TCPRDPLN AS NUMERIC) AS 'periods_planning_daily',
CAST(ENG_TCPRDCRT AS NUMERIC) AS 'periods_correcting_daily',
CAST(ENG_TCPRDADM AS NUMERIC) AS 'periods_admin_daily',
CAST(ENG_TCHREXTR AS NUMERIC) AS 'student_extracurricular_hours',
CAST(ENG_TCHRHELP AS NUMERIC) AS 'free_help_hours',
CAST(ENG_TCHRTUTR AS NUMERIC) AS 'paid_tutor_hours',
CAST(ENG_TCHRIDEA AS NUMERIC) AS 'colleague_help_hours',
CAST(ENG_TCHRCOMM AS NUMERIC) AS 'parent_communicating_hours',
	CASE 
		WHEN ENG_TCIMPCHR=1 THEN REPLACE(ENG_TCIMPCHR,1,'Management')
		WHEN ENG_TCIMPCHR=2 THEN REPLACE(ENG_TCIMPCHR,2,'Development plan')
		WHEN ENG_TCIMPCHR=3 THEN REPLACE(ENG_TCIMPCHR,3,'Monitoring')
		WHEN ENG_TCIMPCHR=4 THEN REPLACE(ENG_TCIMPCHR,4,'Qualified teachers')
		WHEN ENG_TCIMPCHR=5 THEN REPLACE(ENG_TCIMPCHR,5,'Teacher attitude')
		WHEN ENG_TCIMPCHR=6 THEN REPLACE(ENG_TCIMPCHR,6,'Interactive teaching')
		WHEN ENG_TCIMPCHR=7 THEN REPLACE(ENG_TCIMPCHR,7,'Exam results')
		WHEN ENG_TCIMPCHR=8 THEN REPLACE(ENG_TCIMPCHR,8,'Employment skills')
		WHEN ENG_TCIMPCHR=9 THEN REPLACE(ENG_TCIMPCHR,9,'Student learning')
		WHEN ENG_TCIMPCHR=10 THEN REPLACE(ENG_TCIMPCHR,10,'Community support')
		WHEN ENG_TCIMPCHR=11 THEN REPLACE(ENG_TCIMPCHR,11,'Parental engagement')
		WHEN ENG_TCIMPCHR=12 THEN REPLACE(ENG_TCIMPCHR,12,'Links to local organisations')
		ELSE NULL
		END AS 'important_trait_good_school',
	CASE 
		WHEN ENG_TCCMSCTC=0 THEN REPLACE(ENG_TCCMSCTC,0,'Not applicable')
		WHEN ENG_TCCMSCTC=1 THEN REPLACE(ENG_TCCMSCTC,1,'Better')
		WHEN ENG_TCCMSCTC=2 THEN REPLACE(ENG_TCCMSCTC,2,'Similar')
		WHEN ENG_TCCMSCTC=3 THEN REPLACE(ENG_TCCMSCTC,3,'Worse')
		ELSE NULL
		END 'teaching_compared',
	CASE 
		WHEN ENG_TCCMSCPR=0 THEN REPLACE(ENG_TCCMSCPR,0,'Not applicable')
		WHEN ENG_TCCMSCPR=1 THEN REPLACE(ENG_TCCMSCPR,1,'Better')
		WHEN ENG_TCCMSCPR=2 THEN REPLACE(ENG_TCCMSCPR,2,'Similar')
		WHEN ENG_TCCMSCPR=3 THEN REPLACE(ENG_TCCMSCPR,3,'Worse')
		ELSE NULL
		END AS 'parents_compared',
	CASE 
		WHEN ENG_TCCMSCFC=0 THEN REPLACE(ENG_TCCMSCFC,0,'Not applicable')
		WHEN ENG_TCCMSCFC=1 THEN REPLACE(ENG_TCCMSCFC,1,'Better')
		WHEN ENG_TCCMSCFC=2 THEN REPLACE(ENG_TCCMSCFC,2,'Similar')
		WHEN ENG_TCCMSCFC=3 THEN REPLACE(ENG_TCCMSCFC,3,'Worse')
		ELSE NULL
		END AS 'facilities_compared',
	CASE 
		WHEN ENG_TCRSNTCH=1 THEN REPLACE(ENG_TCRSNTCH,1,'Pay')
		WHEN ENG_TCRSNTCH=2 THEN REPLACE(ENG_TCRSNTCH,2,'Enjoyed school')
		WHEN ENG_TCRSNTCH=3 THEN REPLACE(ENG_TCRSNTCH,3,'Work conditions')
		WHEN ENG_TCRSNTCH=4 THEN REPLACE(ENG_TCRSNTCH,4,'Unsure of other job')
		WHEN ENG_TCRSNTCH=5 THEN REPLACE(ENG_TCRSNTCH,5,'Children')
		WHEN ENG_TCRSNTCH=6 THEN REPLACE(ENG_TCRSNTCH,6,'Encouraged by other')
		WHEN ENG_TCRSNTCH=7 THEN REPLACE(ENG_TCRSNTCH,7,'Love subject')
		WHEN ENG_TCRSNTCH=8 THEN REPLACE(ENG_TCRSNTCH,8,'Help country')
		WHEN ENG_TCRSNTCH=9 THEN REPLACE(ENG_TCRSNTCH,9,'Help community')
		ELSE NULL
		END AS 'reason_became_teacher',
	CASE 
		WHEN ENG_TCFRTCHC=1 THEN REPLACE(ENG_TCFRTCHC,1,'Yes')
		WHEN ENG_TCFRTCHC=2 THEN REPLACE(ENG_TCFRTCHC,2,'Unable to pursue other')
		WHEN ENG_TCFRTCHC=3 THEN REPLACE(ENG_TCFRTCHC,3,'Moved into teaching')
		ELSE NULL
		END AS 'teaching_first_choice',
CAST(ENG_TCMOVTCH AS NUMERIC) AS 'motivated_in_work_percentage',
	CASE 
		WHEN ENG_TCGLSEC=1 THEN REPLACE(ENG_TCGLSEC,1,'Exam results')
		WHEN ENG_TCGLSEC=2 THEN REPLACE(ENG_TCGLSEC,2,'Employability skills')
		WHEN ENG_TCGLSEC=3 THEN REPLACE(ENG_TCGLSEC,3,'Discipline and morals')
		WHEN ENG_TCGLSEC=4 THEN REPLACE(ENG_TCGLSEC,4,'Community development')
		WHEN ENG_TCGLSEC=5 THEN REPLACE(ENG_TCGLSEC,5,'National development')
		WHEN ENG_TCGLSEC=6 THEN REPLACE(ENG_TCGLSEC,6,'Creative and thinking skills')
		WHEN ENG_TCGLSEC=7 THEN REPLACE(ENG_TCGLSEC,7,'Reading, writing and arithmetic')
		ELSE NULL
		END AS 'important_goal_of_education',
	CASE 
		WHEN ENG_TCCHSEC=1 THEN REPLACE(ENG_TCCHSEC,1,'Not enough schools')
		WHEN ENG_TCCHSEC=2 THEN REPLACE(ENG_TCCHSEC,2,'Not safe travel')
		WHEN ENG_TCCHSEC=3 THEN REPLACE(ENG_TCCHSEC,3,'Poor quality')
		WHEN ENG_TCCHSEC=4 THEN REPLACE(ENG_TCCHSEC,4,'Not relevant to most')
		WHEN ENG_TCCHSEC=5 THEN REPLACE(ENG_TCCHSEC,5,'Not enough qualified teachers')
		WHEN ENG_TCCHSEC=6 THEN REPLACE(ENG_TCCHSEC,6,'Parents do not send')
		ELSE NULL
		END AS 'universal_secondary_education_challenge'
INTO school_survey.dbo.english_teacher
FROM school_survey.dbo.vietnam_both_waves
END TRY
BEGIN CATCH
        SELECT  
            ERROR_NUMBER() AS ErrorNumber  
            ,ERROR_SEVERITY() AS ErrorSeverity  
            ,ERROR_STATE() AS ErrorState  
            ,ERROR_PROCEDURE() AS ErrorProcedure  
            ,ERROR_LINE() AS ErrorLine  
            ,ERROR_MESSAGE() AS ErrorMessage;  
    END CATCH
END;


--maths teacher table
BEGIN
BEGIN TRY
SELECT
MATH_TCHID AS 'id',
SCHOOLID AS 'school_id',
CLASSID AS 'class_id',
MATH_TCHSUBJ AS 'subject',
MATH_TCHDTJN AS 'date_start_teach_grade10',
CAST(MATH_TCHDYPRS AS NUMERIC) AS 'total_days_present',
CAST(MATH_TCDAYPRS AS NUMERIC) AS 'total_days_absent',
CAST(MATH_TCAGE AS NUMERIC) AS 'age',
	CASE 
		WHEN MATH_TCGNDR=1 THEN REPLACE(MATH_TCGNDR,1, 'Male')
		WHEN MATH_TCGNDR=2 THEN REPLACE(MATH_TCGNDR,2,'Female')
		ELSE NULL
		END AS 'gender',
	CASE 
		WHEN MATH_TCETHNC=1 THEN REPLACE (MATH_TCETHNC,1,'Kinh')
		WHEN MATH_TCETHNC=2 THEN REPLACE (MATH_TCETHNC,2,'Hmong')
		WHEN MATH_TCETHNC=3 THEN REPLACE(MATH_TCETHNC,3,'Cham-Hroi')
		WHEN MATH_TCETHNC=4 THEN REPLACE(MATH_TCETHNC,4,'Ede')
		WHEN MATH_TCETHNC=5 THEN REPLACE(MATH_TCETHNC,5,'Nung')
		WHEN MATH_TCETHNC=6 THEN REPLACE(MATH_TCETHNC,6,'Tay')
		WHEN MATH_TCETHNC=7 THEN REPLACE(MATH_TCETHNC,7,'Dao')
		WHEN MATH_TCETHNC=8 THEN REPLACE(MATH_TCETHNC,8,'Giay')
		WHEN MATH_TCETHNC=9 THEN REPLACE(MATH_TCETHNC,9,'Chinese')
		WHEN MATH_TCETHNC=10 THEN REPLACE(MATH_TCETHNC,10,'Ba Na')
		WHEN MATH_TCETHNC=11 THEN REPLACE(MATH_TCETHNC,11,'Other')
		ELSE NULL
		END AS 'ethnicity',
	CASE 
		WHEN MATH_TCRELGN=0 THEN REPLACE(MATH_TCRELGN,0,'None')
		WHEN MATH_TCRELGN=1 THEN REPLACE(MATH_TCRELGN,1,'Buddhist')
		WHEN MATH_TCRELGN=2 THEN REPLACE(MATH_TCRELGN,2,'Christian (Catholic)')
		WHEN MATH_TCRELGN=3 THEN REPLACE(MATH_TCRELGN,3,'Christian (Protestant)')
		WHEN MATH_TCRELGN=4 THEN REPLACE(MATH_TCRELGN,4,'Cao Dai')
		WHEN MATH_TCRELGN=5 THEN REPLACE(MATH_TCRELGN,5,'Other')
		ELSE NULL
		END AS 'religion',
	CASE 
		WHEN MATH_TCLNGHME=1 THEN REPLACE(MATH_TCLNGHME,1,'Vietnamese')
		WHEN MATH_TCLNGHME=2 THEN REPLACE(MATH_TCLNGHME,2,'Hmong')
		WHEN MATH_TCLNGHME=3 THEN REPLACE(MATH_TCLNGHME,3,'Cham-Hroi')
		WHEN MATH_TCLNGHME=4 THEN REPLACE(MATH_TCLNGHME,4,'Ede')
		WHEN MATH_TCLNGHME=5 THEN REPLACE(MATH_TCLNGHME,5,'Nung')
		WHEN MATH_TCLNGHME=6 THEN REPLACE(MATH_TCLNGHME,6,'Tay')
		WHEN MATH_TCLNGHME=7 THEN REPLACE(MATH_TCLNGHME,7,'Dao')
		WHEN MATH_TCLNGHME=8 THEN REPLACE(MATH_TCLNGHME,8,'Giay')
		WHEN MATH_TCLNGHME=9 THEN REPLACE(MATH_TCLNGHME,9,'Chinese')
		WHEN MATH_TCLNGHME=10 THEN REPLACE(MATH_TCLNGHME,10,'Ba Na')
		WHEN MATH_TCLNGHME=11 THEN REPLACE(MATH_TCLNGHME,11,'Other')
		ELSE NULL
		END AS 'first_language',
	CASE 
		WHEN MATH_TCPRVTCH=0 THEN REPLACE(MATH_TCPRVTCH,0,'No')
		WHEN MATH_TCPRVTCH=1 THEN REPLACE(MATH_TCPRVTCH,1,'Yes')
		ELSE NULL
		END AS 'from_teaching_province',
	CASE 
		WHEN MATH_TCMBLE=0 THEN REPLACE(MATH_TCMBLE,0,'No')
		WHEN MATH_TCMBLE=1 THEN REPLACE(MATH_TCMBLE,1,'Yes')
		ELSE NULL
		END AS 'have_mobile_telephone',
	CASE 
		WHEN MATH_TCRADIO=0 THEN REPLACE(MATH_TCRADIO,0,'No')
		WHEN MATH_TCRADIO=1 THEN REPLACE(MATH_TCRADIO,1,'Yes')
		ELSE NULL
		END AS 'have_radio',
	CASE 
		WHEN MATH_TCTELE= 0 THEN REPLACE(MATH_TCTELE,0,'No')
		WHEN MATH_TCTELE=1 THEN REPLACE(MATH_TCTELE,1,'Yes')
		ELSE NULL
		END AS 'have_television',
	CASE 
		WHEN MATH_TCBIKE=0 THEN REPLACE(MATH_TCBIKE,0,'No')
		WHEN MATH_TCBIKE=1 THEN REPLACE(MATH_TCBIKE,1,'Yes')
		ELSE NULL
		END AS 'have_bicycle',
	CASE 
		WHEN MATH_TCSCTR=0 THEN REPLACE(MATH_TCSCTR,0,'No')
		WHEN MATH_TCSCTR=1 THEN REPLACE(MATH_TCSCTR,1,'Yes')
		ELSE NULL
		END AS 'have_motorcycle',
	CASE 
		WHEN MATH_TCTBLE=0 THEN REPLACE(MATH_TCTBLE,0,'No')
		WHEN MATH_TCTBLE=1 THEN REPLACE(MATH_TCTBLE,1,'Yes')
		ELSE NULL
		END AS 'have_desk',
	CASE 
		WHEN MATH_TCCHAIR=0 THEN REPLACE(MATH_TCCHAIR,0,'No')
		WHEN MATH_TCCHAIR=1 THEN REPLACE(MATH_TCCHAIR,1,'Yes')
		ELSE NULL
		END AS 'have_chair',
	CASE 
		WHEN MATH_TCLAMP=0 THEN REPLACE(MATH_TCLAMP,0,'No')
		WHEN MATH_TCLAMP=1 THEN REPLACE(MATH_TCLAMP,1,'Yes')
		ELSE NULL
		END AS 'have_lamp',
	CASE 
		WHEN MATH_TCELEC=0 THEN REPLACE(MATH_TCELEC,0,'No')
		WHEN MATH_TCELEC=1 THEN REPLACE(MATH_TCELEC,1,'Yes')
		ELSE NULL
		END AS 'have_electric_fan',
	CASE 
		WHEN MATH_TCAIRCND=0 THEN REPLACE(MATH_TCAIRCND,0,'No')
		WHEN MATH_TCAIRCND=1 THEN REPLACE(MATH_TCAIRCND,1,'Yes')
		ELSE NULL
		END AS 'have_aircon',
	CASE 
		WHEN MATH_TCCAR=0 THEN REPLACE(MATH_TCCAR,0,'No')
		WHEN MATH_TCCAR=1 THEN REPLACE(MATH_TCCAR,1,'Yes')
		ELSE NULL
		END AS 'have_car',
	CASE 
		WHEN MATH_TCCOMP=0 THEN REPLACE(MATH_TCCOMP,0,'No')
		WHEN MATH_TCCOMP=1 THEN REPLACE(MATH_TCCOMP,1,'Yes')
		ELSE NULL
		END AS 'have_computer',
	CASE 
		WHEN MATH_TCINTRT=0 THEN REPLACE(MATH_TCINTRT,0,'No')
		WHEN MATH_TCINTRT=1 THEN REPLACE(MATH_TCINTRT,1,'Yes')
		ELSE NULL
		END AS 'have_internet',
	CASE 
		WHEN MATH_TCFRDG=0 THEN REPLACE(MATH_TCFRDG,0,'No')
		WHEN MATH_TCFRDG=1 THEN REPLACE(MATH_TCFRDG,1,'Yes')
		ELSE NULL
		END AS 'have_fridge',
	CASE 
		WHEN MATH_TCMICRO=0 THEN REPLACE(MATH_TCMICRO,0,'No')
		WHEN MATH_TCMICRO=1 THEN REPLACE(MATH_TCMICRO,1,'Yes')
		ELSE NULL
		END AS 'have_microwave',
	CASE 
		WHEN MATH_TCDVD=0 THEN REPLACE(MATH_TCDVD,0,'No')
		WHEN MATH_TCDVD=1 THEN REPLACE(MATH_TCDVD,1,'Yes')
		ELSE NULL
		END AS 'have_dvd_player',
	CASE 
		WHEN MATH_TCTVBOX=0 THEN REPLACE(MATH_TCTVBOX,0,'No')
		WHEN MATH_TCTVBOX=1 THEN REPLACE(MATH_TCTVBOX,1,'Yes')
		ELSE NULL
		END AS 'have_cable_tv_box',
	CASE 
		WHEN MATH_TCLVLEDC=1 THEN REPLACE(MATH_TCLVLEDC,1,'Upper secondary')
		WHEN MATH_TCLVLEDC=2 THEN REPLACE(MATH_TCLVLEDC,2,'Vocational training')
		WHEN MATH_TCLVLEDC=3 THEN REPLACE(MATH_TCLVLEDC,3,'College')
		WHEN MATH_TCLVLEDC=4 THEN REPLACE(MATH_TCLVLEDC,4,'University (undergraduate)')
		WHEN MATH_TCLVLEDC=5 THEN REPLACE(MATH_TCLVLEDC,5,'University (postgraduate)')
		ELSE NULL
		END AS 'education_level',
	CASE 
		WHEN MATH_TCTCHQLF=0 THEN REPLACE(MATH_TCTCHQLF,0,'None')
		WHEN MATH_TCTCHQLF=1 THEN REPLACE(MATH_TCTCHQLF,1,'Short course')
		WHEN MATH_TCTCHQLF=2 THEN REPLACE(MATH_TCTCHQLF,2,'Teacher training level')
		WHEN MATH_TCTCHQLF=3 THEN REPLACE(MATH_TCTCHQLF,3,'Teacher training college')
		WHEN MATH_TCTCHQLF=4 THEN REPLACE(MATH_TCTCHQLF,4,'Teacher training university')
		ELSE NULL
		END AS 'teaching_training_qualification',
	CASE 
		WHEN MATH_TCSPCMAT=0 THEN REPLACE(MATH_TCSPCMAT,0,'No')
		WHEN MATH_TCSPCMAT=1 THEN REPLACE(MATH_TCSPCMAT,1,'Yes')
		ELSE NULL
		END AS 'specialise_maths',
	CASE 
		WHEN MATH_TCSPCENG=0 THEN REPLACE(MATH_TCSPCENG,0,'No')
		WHEN MATH_TCSPCENG=1 THEN REPLACE(MATH_TCSPCENG,1,'Yes')
		ELSE NULL
		END AS 'specialise_english',
	CASE 
		WHEN MATH_TCSPCVNM=0 THEN REPLACE(MATH_TCSPCVNM,0,'No')
		WHEN MATH_TCSPCVNM=1 THEN REPLACE(MATH_TCSPCVNM,1,'Yes')
		ELSE NULL
		END AS 'specialise_vietnamese',
	CASE 
		WHEN MATH_TCSPCLNG=0 THEN REPLACE(MATH_TCSPCLNG,0,'No')
		WHEN MATH_TCSPCLNG=1 THEN REPLACE(MATH_TCSPCLNG,1,'Yes')
		ELSE NULL
		END AS 'specialise_otherlanguage',
	CASE 
		WHEN MATH_TCSPCPSC=0 THEN REPLACE(MATH_TCSPCPSC,0,'No')
		WHEN MATH_TCSPCPSC=1 THEN REPLACE(MATH_TCSPCPSC,1,'Yes')
		ELSE NULL
		END AS 'specialise_physics',
	CASE 
		WHEN MATH_TCSPCCHE=0 THEN REPLACE(MATH_TCSPCCHE,0,'No')
		WHEN MATH_TCSPCCHE=1 THEN REPLACE(MATH_TCSPCCHE,1,'Yes')
		ELSE NULL
		END AS 'specialise_chemistry',
	CASE 
		WHEN MATH_TCSPCBIO=0 THEN REPLACE(MATH_TCSPCBIO,0,'No')
		WHEN MATH_TCSPCBIO=1 THEN REPLACE(MATH_TCSPCBIO,1,'Yes')
		ELSE NULL
		END AS 'specialise_biology',
	CASE 
		WHEN MATH_TCSPCHIS=0 THEN REPLACE(MATH_TCSPCHIS,0,'No')
		WHEN MATH_TCSPCHIS=1 THEN REPLACE(MATH_TCSPCHIS,1,'Yes')
		ELSE NULL
		END AS 'specialise_history',
	CASE 
		WHEN MATH_TCSPCGEO=0 THEN REPLACE(MATH_TCSPCGEO,0,'No')
		WHEN MATH_TCSPCGEO=1 THEN REPLACE(MATH_TCSPCGEO,1,'Yes')
		ELSE NULL
		END AS 'specialise_geography',
	CASE 
		WHEN MATH_TCSPCPHY=0 THEN REPLACE(MATH_TCSPCPHY,0,'No')
		WHEN MATH_TCSPCPHY=1 THEN REPLACE(MATH_TCSPCPHY,1,'Yes')
		ELSE NULL
		END AS 'specialise_physical_education',
	CASE 
		WHEN MATH_TCSPCANT=0 THEN REPLACE(MATH_TCSPCANT,0,'No')
		WHEN MATH_TCSPCANT=1 THEN REPLACE(MATH_TCSPCANT,1,'Yes')
		ELSE NULL
		END AS 'specialise_other_subject',
CAST(MATH_TCDYSTRN AS NUMERIC) AS 'days_training',
	CASE 
		WHEN MATH_TCTTRNHLP=0 THEN REPLACE(MATH_TCTTRNHLP,0,'Not applicable')
		WHEN MATH_TCTTRNHLP=1 THEN REPLACE(MATH_TCTTRNHLP,1,'A lot')
		WHEN MATH_TCTTRNHLP=2 THEN REPLACE(MATH_TCTTRNHLP,2,'A little')
		WHEN MATH_TCTTRNHLP=3 THEN REPLACE(MATH_TCTTRNHLP,3,'Did not')
		ELSE NULL
		END AS 'training_improved_teaching',
	CASE 
		WHEN MATH_TCAWDTTL=0 THEN REPLACE(MATH_TCAWDTTL,0,'Never')
		WHEN MATH_TCAWDTTL=1 THEN REPLACE(MATH_TCAWDTTL,1,'School')
		WHEN MATH_TCAWDTTL=2 THEN REPLACE(MATH_TCAWDTTL,2,'District')
		WHEN MATH_TCAWDTTL=3 THEN REPLACE(MATH_TCAWDTTL,3,'Province or higher')
		ELSE NULL
		END AS 'excellent_teacher_award',
CAST(MATH_TCYRTCH AS NUMERIC) AS 'years_as_teacher',
CAST(MATH_TCYRTCSCH AS NUMERIC) AS 'years_in_current_school',
	CASE 
		WHEN MATH_TCSTDENG=0 THEN REPLACE(MATH_TCSTDENG,0,'Never')
		WHEN MATH_TCSTDENG=1 THEN REPLACE(MATH_TCSTDENG,1,'<1')
		WHEN MATH_TCSTDENG=2 THEN REPLACE(MATH_TCSTDENG,2,'1-2')
		WHEN MATH_TCSTDENG=3 THEN REPLACE(MATH_TCSTDENG,3,'3-5')
		WHEN MATH_TCSTDENG=4 THEN REPLACE(MATH_TCSTDENG,4,'6-10')
		WHEN MATH_TCSTDENG=5 THEN REPLACE(MATH_TCSTDENG,5,'>10')
		ELSE NULL
		END AS 'years_studied_english',
	CASE 
		WHEN MATH_TCEMPBAS=1 THEN REPLACE(MATH_TCEMPBAS,1,'Permanent')
		WHEN MATH_TCEMPBAS=2 THEN REPLACE(MATH_TCEMPBAS,2,'Temporary')
		ELSE NULL
		END AS 'employment_term',
	CASE 
		WHEN MATH_TCFGRDE10=0 THEN REPLACE(MATH_TCFGRDE10,0,'No')
		WHEN MATH_TCFGRDE10=1 THEN REPLACE(MATH_TCFGRDE10,1,'Yes')
		ELSE NULL
		END AS 'teach_grade10',
	CASE 
		WHEN MATH_TCFGRDE11=0 THEN REPLACE(MATH_TCFGRDE11,0,'No')
		WHEN MATH_TCFGRDE11=1 THEN REPLACE(MATH_TCFGRDE11,1,'Yes')
		ELSE NULL
		END AS 'teach_grade11',
	CASE 
		WHEN MATH_TCFGRDE12=0 THEN REPLACE(MATH_TCFGRDE12,0,'No')
		WHEN MATH_TCFGRDE12=1 THEN REPLACE(MATH_TCFGRDE12,1,'Yes')
		ELSE NULL
		END AS 'teach_grade12',
	CASE 
		WHEN MATH_TCMATHS=0 THEN REPLACE(MATH_TCMATHS,0,'No')
		WHEN MATH_TCMATHS=1 THEN REPLACE(MATH_TCMATHS,1,'Yes')
		ELSE NULL
		END AS 'regularly_teach_maths',
	CASE 
		WHEN MATH_TCENGL=0 THEN REPLACE(MATH_TCENGL,0,'No')
		WHEN MATH_TCENGL=1 THEN REPLACE(MATH_TCENGL,1,'Yes')
		ELSE NULL
		END AS 'regularly_teach_english',
	CASE 
		WHEN MATH_TCVNM=0 THEN REPLACE(MATH_TCVNM,0,'No')
		WHEN MATH_TCVNM=1 THEN REPLACE(MATH_TCVNM,1,'Yes')
		ELSE NULL
		END AS 'regularly_teach_vietnamese',
	CASE 
		WHEN MATH_TCANTLNG=0 THEN REPLACE(MATH_TCANTLNG,0,'No')
		WHEN MATH_TCANTLNG=1 THEN REPLACE(MATH_TCANTLNG,1,'Yes')
		ELSE NULL
		END AS 'regularly_teach_otherlang',
	CASE 
		WHEN MATH_TCPHYSC=0 THEN REPLACE(MATH_TCPHYSC,0,'No')
		WHEN MATH_TCPHYSC=1 THEN REPLACE(MATH_TCPHYSC,1,'Yes')
		ELSE NULL
		END AS 'regularly_teach_physics',
	CASE 
		WHEN MATH_TCCHEM=0 THEN REPLACE(MATH_TCCHEM,0,'No')
		WHEN MATH_TCCHEM=1 THEN REPLACE(MATH_TCCHEM,1,'Yes')
		ELSE NULL
		END AS 'regularly_teach_chemistry',
	CASE 
		WHEN MATH_TCBIOLG=0 THEN REPLACE(MATH_TCBIOLG,0,'No')
		WHEN MATH_TCBIOLG=1 THEN REPLACE(MATH_TCBIOLG,1,'Yes')
		ELSE NULL
		END AS 'regularly_teach_biology',
	CASE 
		WHEN MATH_TCHISTRY=0 THEN REPLACE(MATH_TCHISTRY,0,'No')
		WHEN MATH_TCHISTRY=1 THEN REPLACE(MATH_TCHISTRY,1,'Yes')
		ELSE NULL
		END AS 'regularly_teach_history',
	CASE 
		WHEN MATH_TCGEOG=0 THEN REPLACE(MATH_TCGEOG,0,'No')
		WHEN MATH_TCGEOG=1 THEN REPLACE(MATH_TCGEOG,1,'Yes')
		ELSE NULL
		END AS 'regularly_teach_geography',
	CASE 
		WHEN MATH_TCPHYS=0 THEN REPLACE(MATH_TCPHYS,0,'No')
		WHEN MATH_TCPHYS=1 THEN REPLACE(MATH_TCPHYS,1,'Yes')
		ELSE NULL
		END AS 'regularly_teach_physical_education',
	CASE 
		WHEN MATH_TCOTHR=0 THEN REPLACE(MATH_TCOTHR,0,'No')
		WHEN MATH_TCOTHR=1 THEN REPLACE(MATH_TCOTHR,1,'Yes')
		ELSE NULL
		END AS 'regularly_teach_other',
CAST(MATH_TCPRDWK AS NUMERIC) AS 'periods_teach_perweek',
CAST(MATH_TCEXTCLS AS NUMERIC) AS 'noncomp_periods_perweek',
	CASE 
		WHEN MATH_TCTCHG10=0 THEN REPLACE(MATH_TCTCHG10,0,'No')
		WHEN MATH_TCTCHG10=1 THEN REPLACE(MATH_TCTCHG10,1,'Yes')
		ELSE NULL
		END AS 'class_teacher_grade10',
	CASE 
		WHEN MATH_TCEXTWRK=0 THEN REPLACE(MATH_TCEXTWRK,0,'No')
		WHEN MATH_TCEXTWRK=1 THEN REPLACE(MATH_TCEXTWRK,1,'Yes')
		ELSE NULL
		END AS 'extra_work_outside_school',
	CASE 
		WHEN MATH_TCOBSHT=0 THEN REPLACE(MATH_TCOBSHT,0,'Never')
		WHEN MATH_TCOBSHT=1 THEN REPLACE(MATH_TCOBSHT,1,'Once per year')
		WHEN MATH_TCOBSHT=2 THEN REPLACE(MATH_TCOBSHT,2,'Twice per year')
		WHEN MATH_TCOBSHT=3 THEN REPLACE(MATH_TCOBSHT,3,'Monthly')
		WHEN MATH_TCOBSHT=4 THEN REPLACE(MATH_TCOBSHT,4,'More than monthly')
		ELSE NULL
		END AS 'times_observed_principal',
	CASE 
		WHEN MATH_TCOBSVP=0 THEN REPLACE(MATH_TCOBSVP,0,'Never')
		WHEN MATH_TCOBSVP=1 THEN REPLACE(MATH_TCOBSVP,1,'Once per year')
		WHEN MATH_TCOBSVP=2 THEN REPLACE(MATH_TCOBSVP,2,'Twice per year')
		WHEN MATH_TCOBSVP=3 THEN REPLACE(MATH_TCOBSVP,3,'Monthly')
		WHEN MATH_TCOBSVP=4 THEN REPLACE(MATH_TCOBSVP,4,'More than monthly')
		ELSE NULL
		END AS 'times_observed_viceprincipal',
	CASE 
		WHEN MATH_TCOBSHSD=0 THEN REPLACE(MATH_TCOBSHSD,0,'Never')
		WHEN MATH_TCOBSHSD=1 THEN REPLACE(MATH_TCOBSHSD,1,'Once per year')
		WHEN MATH_TCOBSHSD=2 THEN REPLACE(MATH_TCOBSHSD,2,'Twice per year')
		WHEN MATH_TCOBSHSD=3 THEN REPLACE(MATH_TCOBSHSD,3,'Monthly')
		WHEN MATH_TCOBSHSD=4 THEN REPLACE(MATH_TCOBSHSD,4,'More than monthly')
		ELSE NULL
		END AS 'times_observed_subjecthead',
	CASE 
		WHEN MATH_TCOBSOTH=0 THEN REPLACE(MATH_TCOBSOTH,0,'Never')
		WHEN MATH_TCOBSOTH=1 THEN REPLACE(MATH_TCOBSOTH,1,'Once per year')
		WHEN MATH_TCOBSOTH=2 THEN REPLACE(MATH_TCOBSOTH,2,'Twice per year')
		WHEN MATH_TCOBSOTH=3 THEN REPLACE(MATH_TCOBSOTH,3,'Monthly')
		WHEN MATH_TCOBSOTH=4 THEN REPLACE(MATH_TCOBSOTH,4,'More than monthly')
		ELSE NULL
		END AS 'times_observed_otherteacher',
	CASE 
		WHEN MATH_TCOBSDOET=0 THEN REPLACE(MATH_TCOBSDOET,0,'Never')
		WHEN MATH_TCOBSDOET=1 THEN REPLACE(MATH_TCOBSDOET,1,'Once per year')
		WHEN MATH_TCOBSDOET=2 THEN REPLACE(MATH_TCOBSDOET,2,'Twice per year')
		WHEN MATH_TCOBSDOET=3 THEN REPLACE(MATH_TCOBSDOET,3,'Monthly')
		WHEN MATH_TCOBSDOET=4 THEN REPLACE(MATH_TCOBSDOET,4,'More than monthly')
		ELSE NULL
		END AS 'times_observed_doet',
	CASE 
		WHEN MATH_TCPRATD=0 THEN REPLACE(MATH_TCPRATD,0,'Not')
		WHEN MATH_TCPRATD=1 THEN REPLACE(MATH_TCPRATD,1,'Minor')
		WHEN MATH_TCPRATD=2 THEN REPLACE(MATH_TCPRATD,2,'Major')
		ELSE NULL
		END AS 'grade10problem_poorattendence',
	CASE 
		WHEN MATH_TCLATENS=0 THEN REPLACE(MATH_TCLATENS,0,'Not')
		WHEN MATH_TCLATENS=1 THEN REPLACE(MATH_TCLATENS,1,'Minor')
		WHEN MATH_TCLATENS=2 THEN REPLACE(MATH_TCLATENS,2,'Major')
		ELSE NULL
		END AS 'grade10problems_lateness',
	CASE 
		WHEN MATH_TCDISCPL=0 THEN REPLACE(MATH_TCDISCPL,0,'Not')
		WHEN MATH_TCDISCPL=1 THEN REPLACE(MATH_TCDISCPL,1,'Minor')
		WHEN MATH_TCDISCPL=2 THEN REPLACE(MATH_TCDISCPL,2,'Major')
		ELSE NULL
		END AS 'grade10problems_disciplineissues',
	CASE 
		WHEN MATH_TCNOMAT=0 THEN REPLACE(MATH_TCNOMAT,0,'Not')
		WHEN MATH_TCNOMAT=1 THEN REPLACE(MATH_TCNOMAT,1,'Minor')
		WHEN MATH_TCNOMAT=2 THEN REPLACE(MATH_TCNOMAT,2,'Major')
		ELSE NULL
		END AS 'grade10problems_studentlackequipment',
	CASE 
		WHEN MATH_TCLACKRS=0 THEN REPLACE(MATH_TCLACKRS,0,'Not')
		WHEN MATH_TCLACKRS=1 THEN REPLACE(MATH_TCLACKRS,1,'Minor')
		WHEN MATH_TCLACKRS=2 THEN REPLACE(MATH_TCLACKRS,2,'Major')
		ELSE NULL
		END AS 'grade10problems_lackresources',
	CASE 
		WHEN MATH_TCINTRRP=0 THEN REPLACE(MATH_TCINTRRP,0,'Not')
		WHEN MATH_TCINTRRP=1 THEN REPLACE(MATH_TCINTRRP,1,'Minor')
		WHEN MATH_TCINTRRP=2 THEN REPLACE(MATH_TCINTRRP,2,'Major')
		ELSE NULL
		END AS 'grade10problems_interruptions',
	CASE 
		WHEN MATH_TCRSNABS=1 THEN REPLACE(MATH_TCRSNABS,1,'Annual leave')
		WHEN MATH_TCRSNABS=2 THEN REPLACE(MATH_TCRSNABS,2,'Illness')
		WHEN MATH_TCRSNABS=3 THEN REPLACE(MATH_TCRSNABS,3,'Training')
		WHEN MATH_TCRSNABS=4 THEN REPLACE(MATH_TCRSNABS,4,'Official duties')
		WHEN MATH_TCRSNABS=5 THEN REPLACE(MATH_TCRSNABS,5,'Travel difficulties')
		WHEN MATH_TCRSNABS=6 THEN REPLACE(MATH_TCRSNABS,6,'Other')
		ELSE NULL
		END AS 'absense_reason',
	 CASE 
		WHEN MATH_TCASGNSC=1 THEN REPLACE(MATH_TCASGNSC,1,'Requested')
		WHEN MATH_TCASGNSC=2 THEN REPLACE(MATH_TCASGNSC,2,'Assigned')
		WHEN MATH_TCASGNSC=3 THEN REPLACE(MATH_TCASGNSC,3,'Applied')
		ELSE NULL
		END AS 'how_assigned',
	CASE 
		WHEN MATH_TCPRTCNT=0 THEN REPLACE(MATH_TCPRTCNT,0,'None')
		WHEN MATH_TCPRTCNT=1 THEN REPLACE(MATH_TCPRTCNT,1,'Few')
		WHEN MATH_TCPRTCNT=2 THEN REPLACE(MATH_TCPRTCNT,2,'Most')
		WHEN MATH_TCPRTCNT=3 THEN REPLACE(MATH_TCPRTCNT,3,'All')
		ELSE NULL
		END AS 'parent_contact',
CAST(MATH_TCTRVMIN AS NUMERIC) AS 'commute_mins',
CAST(MATH_TCPRDTCH AS NUMERIC) AS 'periods_teaching_daily',
CAST(MATH_TCPRDPLN AS NUMERIC) AS 'periods_planning_daily',
CAST(MATH_TCPRDCRT AS NUMERIC) AS 'periods_correcting_daily',
CAST(MATH_TCPRDADM AS NUMERIC) AS 'periods_admin_daily',
CAST(MATH_TCHREXTR AS NUMERIC) AS 'student_extracurricular_hours',
CAST(MATH_TCHRHELP AS NUMERIC) AS 'free_help_hours',
CAST(MATH_TCHRTUTR AS NUMERIC) AS 'paid_tutor_hours',
CAST(MATH_TCHRIDEA AS NUMERIC) AS 'colleague_help_hours',
CAST(MATH_TCHRCOMM AS NUMERIC) AS 'parent_communicating_hours',
	CASE 
		WHEN MATH_TCIMPCHR=1 THEN REPLACE(MATH_TCIMPCHR,1,'Management')
		WHEN MATH_TCIMPCHR=2 THEN REPLACE(MATH_TCIMPCHR,2,'Development plan')
		WHEN MATH_TCIMPCHR=3 THEN REPLACE(MATH_TCIMPCHR,3,'Monitoring')
		WHEN MATH_TCIMPCHR=4 THEN REPLACE(MATH_TCIMPCHR,4,'Qualified teachers')
		WHEN MATH_TCIMPCHR=5 THEN REPLACE(MATH_TCIMPCHR,5,'Teacher attitude')
		WHEN MATH_TCIMPCHR=6 THEN REPLACE(MATH_TCIMPCHR,6,'Interactive teaching')
		WHEN MATH_TCIMPCHR=7 THEN REPLACE(MATH_TCIMPCHR,7,'Exam results')
		WHEN MATH_TCIMPCHR=8 THEN REPLACE(MATH_TCIMPCHR,8,'Employment skills')
		WHEN MATH_TCIMPCHR=9 THEN REPLACE(MATH_TCIMPCHR,9,'Student learning')
		WHEN MATH_TCIMPCHR=10 THEN REPLACE(MATH_TCIMPCHR,10,'Community support')
		WHEN MATH_TCIMPCHR=11 THEN REPLACE(MATH_TCIMPCHR,11,'Parental engagement')
		WHEN MATH_TCIMPCHR=12 THEN REPLACE(MATH_TCIMPCHR,12,'Links to local organisations')
		ELSE NULL
		END AS 'important_trait_good_school',
	CASE 
		WHEN MATH_TCCMSCTC=0 THEN REPLACE(MATH_TCCMSCTC,0,'Not applicable')
		WHEN MATH_TCCMSCTC=1 THEN REPLACE(MATH_TCCMSCTC,1,'Better')
		WHEN MATH_TCCMSCTC=2 THEN REPLACE(MATH_TCCMSCTC,2,'Similar')
		WHEN MATH_TCCMSCTC=3 THEN REPLACE(MATH_TCCMSCTC,3,'Worse')
		ELSE NULL
		END 'teaching_compared',
	CASE 
		WHEN MATH_TCCMSCPR=0 THEN REPLACE(MATH_TCCMSCPR,0,'Not applicable')
		WHEN MATH_TCCMSCPR=1 THEN REPLACE(MATH_TCCMSCPR,1,'Better')
		WHEN MATH_TCCMSCPR=2 THEN REPLACE(MATH_TCCMSCPR,2,'Similar')
		WHEN MATH_TCCMSCPR=3 THEN REPLACE(MATH_TCCMSCPR,3,'Worse')
		ELSE NULL
		END AS 'parents_compared',
	CASE 
		WHEN MATH_TCCMSCFC=0 THEN REPLACE(MATH_TCCMSCFC,0,'Not applicable')
		WHEN MATH_TCCMSCFC=1 THEN REPLACE(MATH_TCCMSCFC,1,'Better')
		WHEN MATH_TCCMSCFC=2 THEN REPLACE(MATH_TCCMSCFC,2,'Similar')
		WHEN MATH_TCCMSCFC=3 THEN REPLACE(MATH_TCCMSCFC,3,'Worse')
		ELSE NULL
		END AS 'facilities_compared',
	CASE 
		WHEN MATH_TCRSNTCH=1 THEN REPLACE(MATH_TCRSNTCH,1,'Pay')
		WHEN MATH_TCRSNTCH=2 THEN REPLACE(MATH_TCRSNTCH,2,'Enjoyed school')
		WHEN MATH_TCRSNTCH=3 THEN REPLACE(MATH_TCRSNTCH,3,'Work conditions')
		WHEN MATH_TCRSNTCH=4 THEN REPLACE(MATH_TCRSNTCH,4,'Unsure of other job')
		WHEN MATH_TCRSNTCH=5 THEN REPLACE(MATH_TCRSNTCH,5,'Children')
		WHEN MATH_TCRSNTCH=6 THEN REPLACE(MATH_TCRSNTCH,6,'Encouraged by other')
		WHEN MATH_TCRSNTCH=7 THEN REPLACE(MATH_TCRSNTCH,7,'Love subject')
		WHEN MATH_TCRSNTCH=8 THEN REPLACE(MATH_TCRSNTCH,8,'Help country')
		WHEN MATH_TCRSNTCH=9 THEN REPLACE(MATH_TCRSNTCH,9,'Help community')
		ELSE NULL
		END AS 'reason_became_teacher',
	CASE 
		WHEN MATH_TCFRTCHC=1 THEN REPLACE(MATH_TCFRTCHC,1,'Yes')
		WHEN MATH_TCFRTCHC=2 THEN REPLACE(MATH_TCFRTCHC,2,'Unable to pursue other')
		WHEN MATH_TCFRTCHC=3 THEN REPLACE(MATH_TCFRTCHC,3,'Moved into teaching')
		ELSE NULL
		END AS 'teaching_first_choice',
CAST(MATH_TCMOVTCH AS NUMERIC) AS 'motivated_in_work_percentage',
	CASE 
		WHEN MATH_TCGLSEC=1 THEN REPLACE(MATH_TCGLSEC,1,'Exam results')
		WHEN MATH_TCGLSEC=2 THEN REPLACE(MATH_TCGLSEC,2,'Employability skills')
		WHEN MATH_TCGLSEC=3 THEN REPLACE(MATH_TCGLSEC,3,'Discipline and morals')
		WHEN MATH_TCGLSEC=4 THEN REPLACE(MATH_TCGLSEC,4,'Community development')
		WHEN MATH_TCGLSEC=5 THEN REPLACE(MATH_TCGLSEC,5,'National development')
		WHEN MATH_TCGLSEC=6 THEN REPLACE(MATH_TCGLSEC,6,'Creative and thinking skills')
		WHEN MATH_TCGLSEC=7 THEN REPLACE(MATH_TCGLSEC,7,'Reading, writing and arithmetic')
		ELSE NULL
		END AS 'important_goal_of_education',
	CASE 
		WHEN MATH_TCCHSEC=1 THEN REPLACE(MATH_TCCHSEC,1,'Not enough schools')
		WHEN MATH_TCCHSEC=2 THEN REPLACE(MATH_TCCHSEC,2,'Not safe travel')
		WHEN MATH_TCCHSEC=3 THEN REPLACE(MATH_TCCHSEC,3,'Poor quality')
		WHEN MATH_TCCHSEC=4 THEN REPLACE(MATH_TCCHSEC,4,'Not relevant to most')
		WHEN MATH_TCCHSEC=5 THEN REPLACE(MATH_TCCHSEC,5,'Not enough qualified teachers')
		WHEN MATH_TCCHSEC=6 THEN REPLACE(MATH_TCCHSEC,6,'Parents do not send')
		ELSE NULL
		END AS 'universal_secondary_education_challenge'
INTO school_survey.dbo.maths_teacher
FROM school_survey.dbo.vietnam_both_waves
END TRY
BEGIN CATCH
        SELECT  
            ERROR_NUMBER() AS ErrorNumber  
            ,ERROR_SEVERITY() AS ErrorSeverity  
            ,ERROR_STATE() AS ErrorState  
            ,ERROR_PROCEDURE() AS ErrorProcedure  
            ,ERROR_LINE() AS ErrorLine  
            ,ERROR_MESSAGE() AS ErrorMessage;  
    END CATCH
END;




--create combined teacher table	
BEGIN
BEGIN TRY
SELECT *
INTO school_survey.vietnam.teacher
FROM school_survey.dbo.english_teacher
UNION ALL
SELECT *
FROM school_survey.dbo.maths_teacher
END TRY
BEGIN CATCH
        SELECT  
            ERROR_NUMBER() AS ErrorNumber  
            ,ERROR_SEVERITY() AS ErrorSeverity  
            ,ERROR_STATE() AS ErrorState  
            ,ERROR_PROCEDURE() AS ErrorProcedure  
            ,ERROR_LINE() AS ErrorLine  
            ,ERROR_MESSAGE() AS ErrorMessage;  
    END CATCH
END;



--drop teacher tables
IF OBJECT_ID('school_survey.dbo.english_teacher') IS NOT NULL DROP TABLE school_survey.dbo.english_teacher;
IF OBJECT_ID('school_survey.dbo.maths_teacher') IS NOT NULL DROP TABLE school_survey.dbo.maths_teacher;

--remove duplicate rows
--remove teacher duplicate rows
BEGIN
BEGIN TRY
DELETE T FROM
(SELECT *, DupRank = ROW_NUMBER() OVER (
              PARTITION BY [id],[school_id],[class_id],[subject],[date_start_teach_grade10],[total_days_present],[total_days_absent]
      ,[age],[gender],[ethnicity],[religion],[first_language],[from_teaching_province],[have_mobile_telephone],[have_radio],[have_television]
      ,[have_bicycle],[have_motorcycle],[have_desk],[have_chair],[have_lamp],[have_electric_fan],[have_aircon],[have_car],[have_computer]
      ,[have_internet],[have_fridge],[have_microwave],[have_dvd_player],[have_cable_tv_box],[education_level],[teaching_training_qualification]
	  ,[specialise_maths],[specialise_english],[specialise_vietnamese],[specialise_otherlanguage],[specialise_physics],[specialise_chemistry],[specialise_biology]
	  ,[specialise_history],[specialise_geography],[specialise_physical_education],[specialise_other_subject],[days_training],[training_improved_teaching]
      ,[excellent_teacher_award],[years_as_teacher],[years_in_current_school],[years_studied_english],[employment_term],[teach_grade10],[teach_grade11],[teach_grade12]
      ,[regularly_teach_maths],[regularly_teach_english],[regularly_teach_vietnamese],[regularly_teach_otherlang],[regularly_teach_physics],[regularly_teach_chemistry]
      ,[regularly_teach_biology],[regularly_teach_history],[regularly_teach_geography],[regularly_teach_physical_education],[regularly_teach_other]
	  ,[periods_teach_perweek],[noncomp_periods_perweek],[class_teacher_grade10],[extra_work_outside_school],[times_observed_principal]
      ,[times_observed_viceprincipal],[times_observed_subjecthead],[times_observed_otherteacher],[times_observed_doet],[grade10problem_poorattendence]
      ,[grade10problems_lateness],[grade10problems_disciplineissues],[grade10problems_studentlackequipment],[grade10problems_lackresources]
      ,[grade10problems_interruptions],[absense_reason],[how_assigned],[parent_contact],[commute_mins],[periods_teaching_daily]
      ,[periods_planning_daily],[periods_correcting_daily],[periods_admin_daily],[student_extracurricular_hours],[free_help_hours]
      ,[paid_tutor_hours],[colleague_help_hours],[parent_communicating_hours],[important_trait_good_school],[teaching_compared]
      ,[parents_compared],[facilities_compared],[reason_became_teacher],[teaching_first_choice],[motivated_in_work_percentage],[important_goal_of_education]
      ,[universal_secondary_education_challenge]
              ORDER BY (SELECT NULL))
FROM school_survey.vietnam.teacher) AS T
WHERE DupRank > 1 
END TRY
BEGIN CATCH
        SELECT  
            ERROR_NUMBER() AS ErrorNumber  
            ,ERROR_SEVERITY() AS ErrorSeverity  
            ,ERROR_STATE() AS ErrorState  
            ,ERROR_PROCEDURE() AS ErrorProcedure  
            ,ERROR_LINE() AS ErrorLine  
            ,ERROR_MESSAGE() AS ErrorMessage;  
    END CATCH
END;

--remove duplicate roles from school
BEGIN
BEGIN TRY
DELETE T
FROM
(SELECT *, DupRank = ROW_NUMBER() OVER (
              PARTITION BY [school_id],[number_grade10_class],[lowest_grade],[highest_grade],[total_students_enrolled]
      ,[ethnic_minority_enrolled],[year_established],[school_type],[located_former_p135commune],[located_poor_district],[boarding_school]
      ,[district_schools_available],[regular_teaching_grade10],[noncomp_additional_class],[extracurricular_activities]
      ,[type_noncomp_additional_class],[required_uppersec_teacher],[employed_uppersec_teacher],[present_uppersec_teacher]
      ,[required_math_teacher],[required_english_teacher],[admission_area_of_residence],[admission_ethnicity]
      ,[admission_gender],[admission_parent_pay_ability],[admission_exam],[admission_other],[admission_all_admitted]
      ,[grade10_tuitionfee],[tuitionfee_poverty_exemption],[tuitionfee_ethnic_minority_exemption],[tuitionfee_remote_area_exemption]
      ,[tuitionfee_excellence&poverty_exemption],[tuitionfee_disability_exemption],[tuitionfee_other_exemption]
      ,[tuitionfee_all_exemption],[grade10_lunchfee],[lunchfee_poverty_exemption],[lunchfee_ethnic_minority_exemption]
      ,[lunchfee_remote_area_exemption],[lunchfee_excellence&poverty_exemption],[lunchfee_disability_exemption]
      ,[lunchfee_other_exemption],[lunchfee_all_exemption],[grade10_extraclassfee],[extraclassfee_poverty_exemption]
      ,[extraclassfee_ethnic_minority_exemption],[extraclassfee_remote_area_exemption],[extraclassfee_excellence&poverty_exemption]
      ,[extraclassfee_disability_exemption],[extraclassfee_other_exemption],[extraclassfee_all_exemption],[grade10_textbookfee]
      ,[textbookfee_poverty_exemption],[textbookfee_ethnic_minority_exemption],[textbookfee_remote_area_exemption]
      ,[textbookfee_excellence&poverty_exemption],[textbookfee_disability_exemption],[textbookfee_other_exemption]
      ,[textbookfee_all_exemption],[grade10_uniformfee],[uniformfee_poverty_exemption],[uniformfee_ethnic_minority_exemption]
      ,[uniformfee_remote_area_exemption],[uniformfee_excellence&poverty_exemption],[uniformfee_disability_exemption]
      ,[uniformfee_other_exemption],[uniformfee_all_exemption],[grade10_schoolconstructionfee]
      ,[schoolconstructionfee_poverty_exemption],[schoolconstructionfee_ethnic_minority_exemption]
	  ,[schoolconstructionfee_remote_area_exemption],[schoolconstructionfee_excellence&poverty_exemption]
      ,[schoolconstructionfee_disability_exemption],[schoolconstructionfee_other_exemption],[schoolconstructionfee_all_exemption]
      ,[grade10_parentsfundfee],[parentfundfee_poverty_exemption],[parentfundfee_ethnic_minority_exemption]
      ,[parentfundfee_remote_area_exemption],[parentfundfee_excellence&poverty_exemption],[parentfundfee_disability_exemption]
      ,[parentfundfee_other_exemption],[parentfundfee_all_exemption],[grade10_traituyenfee]
      ,[traituyenfee_poverty_exemption],[traituyenfee_ethnic_minority_exemption],[traituyenfee_remote_area_exemption]
	  ,[traituyenfee_excellence&poverty_exemption],[traituyenfee_disability_exemption],[traituyenfee_other_exemption]
      ,[traituyenfee_all_exemption],[grade10_healthinsurancefee],[healthinsurancefee_poverty_exemption]
      ,[healthinsurancefee_ethnic_minority_exemption],[healthinsurancefee_remote_area_exemption]
      ,[healthinsurancefee_excellence&poverty_exemption],[healthinsurancefee_disability_exemption]
      ,[healthinsurancefee_other_exemption],[healthinsurancefee_all_exemption],[grade10_schoolsecurityfee]
      ,[schoolsecurityfee_poverty_exemption],[schoolsecurityfee_ethnic_minority_exemption]
      ,[schoolsecurityfee_remote_area_exemption],[schoolsecurityfee_excellence&poverty_exemption]
      ,[schoolsecurityfee_disability_exemption],[schoolsecurityfee_other_exemption],[schoolsecurityfee_all_exemption]
      ,[grade10_examfee],[examfee_poverty_exemption],[examfee_ethnic_minority_exemption],[examfee_remote_area_exemption]
      ,[examfee_excellence&poverty_exemption],[examfee_disability_exemption],[examfee_other_exemption]
      ,[examfee_all_exemption],[grade10_extracurricularfee],[extracurricularfee_poverty_exemption]
      ,[extracurricularfee_ethnic_minority_exemption],[extracurricularfee_remote_area_exemption]
      ,[extracurricularfee_excellence&poverty_exemption],[extracurricularfee_disability_exemption]
      ,[extracurricularfee_other_exemption],[extracurricularfee_all_exemption],[total_grade10_girls]
      ,[total_grade10_boys],[attended_grade10_girls],[attended_grade10_boys],[total_grade11_girls],[total_grade11_boys]
      ,[attended_grade11_girls],[attended_grade11_boys],[total_grade12_girls],[total_grade12_boys]
      ,[attended_grade12_girls],[attended_grade12_boys],[grade10_classes],[grade11_classes]
      ,[grade12_classes],[grade10_class_allocation],[parental_pressure],[development_plan]
      ,[parent_teacher_association],[pta_meet],[inspector_visit],[student_dropout],[child_labour]
      ,[failing_school_infrastructure],[teacher_recruitment&retention],[teacher_attendance]
      ,[external_environmental_event],[grade12_enrolled_15_16],[took_graduation_exam_15_16]
      ,[passed_graduation_exam_15_16],[percentage_access_university_15_16],[percentage_access_vocationalcollege_15_16]
      ,[continuous_learning_centre]
              ORDER BY (SELECT NULL))
FROM school_survey.vietnam.school) AS T
WHERE DupRank > 1 
END TRY
BEGIN CATCH
        SELECT  
            ERROR_NUMBER() AS ErrorNumber  
            ,ERROR_SEVERITY() AS ErrorSeverity  
            ,ERROR_STATE() AS ErrorState  
            ,ERROR_PROCEDURE() AS ErrorProcedure  
            ,ERROR_LINE() AS ErrorLine  
            ,ERROR_MESSAGE() AS ErrorMessage;  
    END CATCH
END;


--remove headteacher duplicate rows
BEGIN
BEGIN TRY
DELETE T
FROM
(SELECT *, DupRank = ROW_NUMBER() OVER (
              PARTITION BY [school_id],[age],[gender],[ethnicity],[religion]
      ,[first_language],[from_teaching_province],[current_role],[years_current_role]
      ,[education_level],[teacher_training_level],[excellent_teacher_award]
              ORDER BY (SELECT NULL))
FROM school_survey.vietnam.headteacher) AS T
WHERE DupRank > 1 
END TRY
BEGIN CATCH
        SELECT  
            ERROR_NUMBER() AS ErrorNumber  
            ,ERROR_SEVERITY() AS ErrorSeverity  
            ,ERROR_STATE() AS ErrorState  
            ,ERROR_PROCEDURE() AS ErrorProcedure  
            ,ERROR_LINE() AS ErrorLine  
            ,ERROR_MESSAGE() AS ErrorMessage;  
    END CATCH
END;


--class
BEGIN
BEGIN TRY
DELETE T
FROM
(SELECT *, DupRank = ROW_NUMBER() OVER (
              PARTITION BY [school_id],[class_id],[girls_enrolled],[boys_enrolled],[total_enrolled]
      ,[girls_attended_1],[boys_attended_1],[total_attended_1],[girls_attended_2],[boys_attended_2]
      ,[total_attended_2],[new_students_enrolled],[current_student_attendence],[reason_attendence_higher_or_lower]
      ,[taught_maths&english],[class_allocation],[class_ability],[class_ranking_1],[class_ranking_2]
      ,[chalk_available],[blackboard_available],[teacher_desk_available],[teacher_chair_available]
      ,[books_available],[electric_light_available],[electric_fan_available],[glass_windows]
      ,[nonglass_windows],[IT_facilities],[regular_teaching_time],[taught_periods_per_day]
      ,[period_length_mins],[maths_periods_per_week],[english_periods_per_week]
      ,[maths_textbooks_used],[english_textbooks_used]
              ORDER BY (SELECT NULL))
FROM school_survey.vietnam.class) AS T
WHERE DupRank > 1 
END TRY
BEGIN CATCH
        SELECT  
            ERROR_NUMBER() AS ErrorNumber  
            ,ERROR_SEVERITY() AS ErrorSeverity  
            ,ERROR_STATE() AS ErrorState  
            ,ERROR_PROCEDURE() AS ErrorProcedure  
            ,ERROR_LINE() AS ErrorLine  
            ,ERROR_MESSAGE() AS ErrorMessage;  
    END CATCH
END;



--remove null rows from teacher table
BEGIN
BEGIN TRY
DELETE FROM school_survey.vietnam.teacher WHERE id IS NULL
END TRY
BEGIN CATCH
        SELECT  
            ERROR_NUMBER() AS ErrorNumber  
            ,ERROR_SEVERITY() AS ErrorSeverity  
            ,ERROR_STATE() AS ErrorState  
            ,ERROR_PROCEDURE() AS ErrorProcedure  
            ,ERROR_LINE() AS ErrorLine  
            ,ERROR_MESSAGE() AS ErrorMessage;  
    END CATCH
END;


--create keys and add constraints
ALTER TABLE school_survey.vietnam.teacher ALTER COLUMN id nvarchar(25) NOT NULL
ALTER TABLE school_survey.vietnam.school ALTER COLUMN school_id nvarchar(25) NOT NULL
ALTER TABLE school_survey.vietnam.headteacher ALTER COLUMN school_id nvarchar(25) NOT NULL
ALTER TABLE school_survey.vietnam.child_general ALTER COLUMN school_id nvarchar(25) NOT NULL
ALTER TABLE school_survey.vietnam.child_general ALTER COLUMN student_id nvarchar(25) NOT NULL
ALTER TABLE school_survey.vietnam.education ALTER COLUMN student_id nvarchar(25) NOT NULL
ALTER TABLE school_survey.vietnam.home_life ALTER COLUMN student_id nvarchar(25) NOT NULL
ALTER TABLE school_survey.vietnam.school_life ALTER COLUMN student_id nvarchar(25) NOT NULL
ALTER TABLE school_survey.vietnam.outside_school ALTER COLUMN student_id nvarchar(25) NOT NULL
ALTER TABLE school_survey.vietnam.class ALTER COLUMN school_id nvarchar(25) NOT NULL
ALTER TABLE school_survey.vietnam.teacher ALTER COLUMN school_id nvarchar(25) NOT NULL


ALTER TABLE school_survey.vietnam.child_general
ADD CONSTRAINT PK_ch_gen PRIMARY KEY (student_id)

ALTER TABLE school_survey.vietnam.school
ADD CONSTRAINT PK_school PRIMARY KEY (school_id)

ALTER TABLE school_survey.vietnam.education
ADD CONSTRAINT FK_education
FOREIGN KEY (student_id) REFERENCES school_survey.vietnam.child_general(student_id)

ALTER TABLE school_survey.vietnam.home_life
ADD CONSTRAINT FK_home
FOREIGN KEY (student_id) REFERENCES school_survey.vietnam.child_general(student_id)

ALTER TABLE school_survey.vietnam.outside_school
ADD CONSTRAINT FK_out_school
FOREIGN KEY (student_id) REFERENCES school_survey.vietnam.child_general(student_id)

ALTER TABLE school_survey.vietnam.school_life
ADD CONSTRAINT FK_school_life
FOREIGN KEY (student_id) REFERENCES school_survey.vietnam.child_general(student_id)

ALTER TABLE school_survey.vietnam.class
ADD CONSTRAINT FK_class
FOREIGN KEY (school_id) REFERENCES school_survey.vietnam.school(school_id)

ALTER TABLE school_survey.vietnam.teacher
ADD CONSTRAINT FK_teacher
FOREIGN KEY (school_id) REFERENCES school_survey.vietnam.school(school_id)

ALTER TABLE school_survey.vietnam.headteacher
ADD CONSTRAINT FK_headteacher
FOREIGN KEY (school_id) REFERENCES school_survey.vietnam.school(school_id)

ALTER TABLE school_survey.vietnam.child_general
ADD CONSTRAINT FK_child_school
FOREIGN KEY (school_id) REFERENCES school_survey.vietnam.school(school_id);



--trigger which prevents child general info table being deleted
USE school_survey;
GO
CREATE OR ALTER TRIGGER vietnam.not_delete_gen_info
ON school_survey.vietnam.child_general
INSTEAD OF DELETE
AS
IF EXISTS (SELECT* FROM school_survey.vietnam.child_general)
DECLARE @Error NVARCHAR(100)
SET	@Error = 'Cannot delete from this table'
BEGIN
RAISERROR(@Error, 16, 1 )
ROLLBACK TRANSACTION
END
GO



--Reports

--number of schools in each province and district by school type
CREATE OR ALTER VIEW vietnam.v_school_number AS
SELECT ch.province, ch.district_id, sch.school_type, COUNT(DISTINCT ch.school_id) AS school_number
FROM school_survey.vietnam.school sch
JOIN school_survey.vietnam.child_general ch
ON ch.school_id=sch.school_id
GROUP BY ch.province, ch.district_id, sch.school_type;

--total cost of school for students
USE school_survey;
GO
CREATE OR ALTER FUNCTION vietnam.total_school_fee (@school_id VARCHAR(25))
RETURNS NUMERIC AS
BEGIN
	DECLARE @school_cost NUMERIC;
	SET @school_cost=(SELECT (grade10_tuitionfee+grade10_lunchfee+grade10_extraclassfee+grade10_textbookfee+grade10_uniformfee
	+grade10_schoolconstructionfee+grade10_parentsfundfee+grade10_traituyenfee+grade10_healthinsurancefee
	+grade10_schoolsecurityfee+grade10_extracurricularfee)
	FROM school_survey.vietnam.school
	WHERE school_id=@school_id);
	RETURN @school_cost
END;

--pass rate for areas
USE school_survey;
GO
CREATE OR ALTER FUNCTION vietnam.percentage_pass (@school_id VARCHAR(25))
RETURNS NUMERIC AS
BEGIN
	DECLARE @percentage_passed NUMERIC;
	DECLARE @passed INT;
	SET @passed=(SELECT AVG(passed_graduation_exam_15_16) FROM school_survey.vietnam.school WHERE school_id=@school_id
	GROUP BY school_id)
	IF (@passed = 0) SET @percentage_passed=0;
	ELSE SET @percentage_passed = (SELECT (AVG(passed_graduation_exam_15_16)/AVG(grade12_enrolled_15_16)*100) 
	FROM school_survey.vietnam.school WHERE school_id=@school_id
	GROUP BY school_id);
	RETURN @percentage_passed;
END;


----view for school overview
USE school_survey;
GO
CREATE OR ALTER VIEW vietnam.v_schools_overview AS
SELECT ch.province, ch.district_id, ch.school_id, sch.school_type,
vietnam.percentage_pass(ch.school_id) AS percentage_passed,
vietnam.total_school_fee(ch.school_id) AS total_school_fee,
sch.located_former_p135commune, sch.located_poor_district, 
sch.admission_exam, AVG(sch.ethnic_minority_enrolled) AS ethnic_minority_enrolled,
(AVG(sch.total_students_enrolled)/AVG(sch.employed_uppersec_teacher)) AS student_teacher_ratio,
(AVG(sch.required_uppersec_teacher)-AVG(sch.employed_uppersec_teacher)) AS met_teacher_requirement,
AVG(sch.percentage_access_university_15_16) AS percentage_access_university_15_16, 
AVG(sch.percentage_access_vocationalcollege_15_16) AS percentage_access_vocationalcollege_15_16
FROM school_survey.vietnam.school sch
JOIN school_survey.vietnam.child_general ch
ON ch.school_id=sch.school_id
GROUP BY ch.province, ch.district_id,ch.school_id, sch.school_type, 
sch.located_former_p135commune, sch.located_poor_district, sch.admission_exam;


---view for education inequality
USE school_survey;
GO
CREATE OR ALTER VIEW vietnam.child_education_differences AS
SELECT ch.student_id,ch.ethnicity, ch.gender, ch.locality, ch.province, 
(ed.maths_test_score_2 -ed.maths_test_score_1) AS changes_to_math_ability,
(ed.english_test_score_2 - ed.english_test_score_1) AS changes_to_english_ability,
ed.home_support_level, ed.motivation_to_succeed, ed.academic_ability_english,
ed.academic_ability_maths, ed.expected_education_level, sl.remained_enrolled,
hl.number_of_books, hl.mother_education, hl.mother_literate
FROM school_survey.vietnam.child_general ch
JOIN school_survey.vietnam.education ed
ON ch.student_id=ed.student_id
JOIN school_survey.vietnam.school_life sl
ON sl.student_id = ed.student_id
JOIN school_survey.vietnam.home_life hl
ON sl.student_id=hl.student_id;

